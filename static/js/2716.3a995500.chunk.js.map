{"version":3,"file":"static/js/2716.3a995500.chunk.js","mappings":"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","sources":["components/StructureChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateStrucMoaData,\r\n  generateStrucNumber,\r\n  generateStructureData,\r\n  thousands_separators,\r\n  statusStructureChart,\r\n  statusMoaStructureChart,\r\n} from '../Query';\r\nimport { primaryLabelColor, valueLabelColor } from '../StatusUniqueValues';\r\nimport '@esri/calcite-components/dist/components/calcite-label';\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst StructureChart = memo((props: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // 2.Mode of Acquisition\r\n  const barSeriesRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef_moa = useRef<unknown | any | undefined>({});\r\n  const [structureMoaData, setStructureMoaData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n    },\r\n  ]);\r\n  const chartID_moa = 'structure-moa';\r\n\r\n  // Query\r\n  const queryDefault = '1=1';\r\n  const queryContractp = \"CP = '\" + props.contractp + \"'\";\r\n\r\n  if (props.contractp === 'All') {\r\n    structureLayer.definitionExpression = queryDefault;\r\n  } else {\r\n    structureLayer.definitionExpression = queryContractp;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData().then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n\r\n    generateStrucMoaData().then((response: any) => {\r\n      setStructureMoaData(response);\r\n    });\r\n  }, [props.contractp]);\r\n\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(28),\r\n        scale: 1.8,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // values inside a donut\r\n    let inner_label = pieSeries.children.push(\r\n      am5.Label.new(root, {\r\n        text: '[#ffffff]{valueSum}[/]\\n[fontSize: 0.5em; #d3d3d3; verticalAlign: super]STRUCTURES[/]',\r\n        fontSize: '1.1rem',\r\n        centerX: am5.percent(50),\r\n        centerY: am5.percent(40),\r\n        populateText: true,\r\n        oversizedBehavior: 'fit',\r\n        textAlign: 'center',\r\n      }),\r\n    );\r\n\r\n    pieSeries.onPrivate('width', (width: any) => {\r\n      inner_label.set('maxWidth', width * 0.7);\r\n    });\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      toggleKey: 'none',\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 0.5,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusStructureChart.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then(function (results) {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'StatusStruc = ' + statusSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 230; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  // Mode of Acquisition\r\n  // useEffect(() => {\r\n  //   // Dispose previously created root element\r\n  //   maybeDisposeRoot(chartID_moa);\r\n\r\n  //   var root = am5.Root.new(chartID_moa);\r\n  //   root.container.children.clear();\r\n  //   root._logo?.dispose();\r\n\r\n  //   // Set themesf\r\n  //   // https://www.amcharts.com/docs/v5/concepts/themes/\r\n  //   root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n  //   // Create chart\r\n  //   // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n  //   var chart = root.container.children.push(\r\n  //     am5xy.XYChart.new(root, {\r\n  //       panX: false,\r\n  //       panY: false,\r\n  //       wheelX: 'none',\r\n  //       wheelY: 'none',\r\n  //       paddingLeft: 0,\r\n  //       marginTop: 20,\r\n  //       //height: am5.percent(81),\r\n  //     }),\r\n  //   );\r\n  //   chartRef_moa.current = chart;\r\n\r\n  //   // Create axes\r\n  //   // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n  //   var yRenderer = am5xy.AxisRendererY.new(root, {\r\n  //     minGridDistance: 5,\r\n  //     strokeOpacity: 1,\r\n  //     strokeWidth: 1,\r\n  //     inversed: true,\r\n  //     stroke: am5.color('#ffffff'),\r\n  //   });\r\n  //   yRenderer.grid.template.set('location', 1);\r\n\r\n  //   var yAxis = chart.yAxes.push(\r\n  //     am5xy.CategoryAxis.new(root, {\r\n  //       maxDeviation: 0,\r\n  //       categoryField: 'category',\r\n  //       renderer: yRenderer,\r\n  //     }),\r\n  //   );\r\n\r\n  //   // Remove grid lines\r\n  //   yAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n  //   var xAxis = chart.xAxes.push(\r\n  //     am5xy.ValueAxis.new(root, {\r\n  //       maxDeviation: 0,\r\n  //       min: 0,\r\n  //       strictMinMax: true,\r\n  //       calculateTotals: true,\r\n  //       renderer: am5xy.AxisRendererX.new(root, {\r\n  //         visible: true,\r\n  //         strokeOpacity: 1,\r\n  //         strokeWidth: 1,\r\n  //         stroke: am5.color('#ffffff'),\r\n  //       }),\r\n  //     }),\r\n  //   );\r\n  //   // Remove grid lines\r\n  //   xAxis.get('renderer').grid.template.set('forceHidden', true);\r\n\r\n  //   // Label properties for yAxis (category axis)\r\n  //   yAxis.get('renderer').labels.template.setAll({\r\n  //     //oversizedBehavior: \"wrap\",\r\n  //     textAlign: 'center',\r\n  //     fill: am5.color('#ffffff'),\r\n  //     //maxWidth: 150,\r\n  //     fontSize: 12,\r\n  //   });\r\n\r\n  //   xAxis.get('renderer').labels.template.setAll({\r\n  //     fill: am5.color('#ffffff'),\r\n  //     fontSize: 10,\r\n  //   });\r\n\r\n  //   // Create series\r\n  //   // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n  //   var series = chart.series.push(\r\n  //     am5xy.ColumnSeries.new(root, {\r\n  //       name: 'Series 1',\r\n  //       xAxis: xAxis,\r\n  //       yAxis: yAxis,\r\n  //       valueXField: 'value',\r\n  //       sequencedInterpolation: true,\r\n  //       categoryYField: 'category',\r\n  //     }),\r\n  //   );\r\n  //   barSeriesRef.current = series;\r\n  //   chart.series.push(series);\r\n\r\n  //   var columnTemplate = series.columns.template;\r\n\r\n  //   columnTemplate.setAll({\r\n  //     draggable: true,\r\n  //     cursorOverStyle: 'pointer',\r\n  //     tooltipText: '{value}',\r\n  //     cornerRadiusBR: 10,\r\n  //     cornerRadiusTR: 10,\r\n  //     strokeOpacity: 0,\r\n  //   });\r\n\r\n  //   // Add Label bullet\r\n  //   series.bullets.push(function () {\r\n  //     return am5.Bullet.new(root, {\r\n  //       locationY: 1,\r\n  //       sprite: am5.Label.new(root, {\r\n  //         text: '{value}',\r\n  //         fill: root.interfaceColors.get('alternativeText'),\r\n  //         centerY: 8,\r\n  //         centerX: am5.p50,\r\n  //         fontSize: 13,\r\n  //         populateText: true,\r\n  //       }),\r\n  //     });\r\n  //   });\r\n\r\n  //   // Use different color by column\r\n  //   /*\r\n  //   columnTemplate.adapters.add('fill', (fill, target) => {\r\n  //     return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n  //   });\r\n\r\n  //   columnTemplate.adapters.add('stroke', (stroke, target) => {\r\n  //     return chart.get('colors').getIndex(series.columns.indexOf(target));\r\n  //   });\r\n  //   */\r\n\r\n  //   series.columns.template.events.on('click', function (ev) {\r\n  //     const selected: any = ev.target.dataItem?.dataContext;\r\n  //     const categorySelect: string = selected.category;\r\n  //     const find = statusMoaStructureChart.find((emp: any) => emp.category === categorySelect);\r\n  //     const statusSelect = find?.value;\r\n\r\n  //     var highlightSelect: any;\r\n\r\n  //     var query = structureLayer.createQuery();\r\n  //     view.whenLayerView(structureLayer).then(function (layerView) {\r\n  //       //CHART_ELEMENT.style.visibility = \"visible\";\r\n\r\n  //       structureLayer.queryFeatures(query).then(function (results) {\r\n  //         const RESULT_LENGTH = results.features;\r\n  //         const ROW_N = RESULT_LENGTH.length;\r\n\r\n  //         let objID = [];\r\n  //         for (var i = 0; i < ROW_N; i++) {\r\n  //           var obj = results.features[i].attributes.OBJECTID;\r\n  //           objID.push(obj);\r\n  //         }\r\n\r\n  //         var queryExt = new Query({\r\n  //           objectIds: objID,\r\n  //         });\r\n\r\n  //         structureLayer.queryExtent(queryExt).then(function (result) {\r\n  //           if (result.extent) {\r\n  //             view.goTo(result.extent);\r\n  //           }\r\n  //         });\r\n\r\n  //         if (highlightSelect) {\r\n  //           highlightSelect.remove();\r\n  //         }\r\n  //         highlightSelect = layerView.highlight(objID);\r\n\r\n  //         view.on('click', function () {\r\n  //           layerView.filter = new FeatureFilter({\r\n  //             where: undefined,\r\n  //           });\r\n  //           highlightSelect.remove();\r\n  //         });\r\n  //       });\r\n  //       layerView.filter = new FeatureFilter({\r\n  //         where: 'MoA = ' + statusSelect,\r\n  //       });\r\n  //     }); // End of whenLayerView\r\n  //   });\r\n\r\n  //   yAxisRef.current = yAxis;\r\n  //   yAxis.data.setAll(structureMoaData);\r\n  //   series.data.setAll(structureMoaData);\r\n\r\n  //   // Make stuff animate on load\r\n  //   // https://www.amcharts.com/docs/v5/concepts/animations/\r\n  //   series.appear(1000);\r\n  //   chart.appear(1000, 100);\r\n\r\n  //   return () => {\r\n  //     root.dispose();\r\n  //   };\r\n  // }, [chartID_moa, structureMoaData]);\r\n\r\n  // useEffect(() => {\r\n  //   barSeriesRef.current?.data.setAll(structureMoaData);\r\n  //   yAxisRef.current?.data.setAll(structureMoaData);\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          color: primaryLabelColor,\r\n          fontSize: '1.2rem',\r\n          marginLeft: '13px',\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        TOTAL STRUCTURES\r\n      </div>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n          <div\r\n            style={{\r\n              color: valueLabelColor,\r\n              fontSize: '2rem',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'calibri',\r\n              lineHeight: '1.2',\r\n              marginLeft: '15px',\r\n            }}\r\n          >\r\n            {thousands_separators(structureNumber[2])}\r\n          </div>\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n            alt=\"Land Logo\"\r\n            height={'50px'}\r\n            width={'50px'}\r\n            style={{ marginLeft: '260px', display: 'flex', marginTop: '-50px' }}\r\n          />\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      {/* Structure Chart */}\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '48vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginTop: '6%',\r\n          marginBottom: '10%',\r\n        }}\r\n      ></div>\r\n\r\n      <div\r\n        style={{\r\n          color: primaryLabelColor,\r\n          fontSize: '1.2rem',\r\n          // marginBottom: '13px',\r\n          marginLeft: '13px',\r\n        }}\r\n      >\r\n        PERMIT-TO-ENTER\r\n      </div>\r\n      <CalciteLabel layout=\"inline\">\r\n        {structureNumber[1] === 0 ? (\r\n          <b className=\"permitToEnterNumber\" style={{ color: valueLabelColor }}>\r\n            {structureNumber[0]}% (0)\r\n          </b>\r\n        ) : (\r\n          <b className=\"permitToEnterNumber\" style={{ color: valueLabelColor }}>\r\n            {structureNumber[0]}% ({thousands_separators(structureNumber[1])})\r\n          </b>\r\n        )}\r\n\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/Permit-To-Enter.png\"\r\n          alt=\"Structure Logo\"\r\n          height={'50px'}\r\n          width={'50px'}\r\n          style={{ margin: 'auto', marginRight: '40px' }}\r\n        />\r\n      </CalciteLabel>\r\n\r\n      {/* Mode of Acquisition */}\r\n      {/* <div style={{ color: primaryLabelColor, fontSize: '1.2rem', marginLeft: '13px' }}>\r\n        MODE OF ACQUISITION\r\n      </div>\r\n      <div\r\n        id={chartID_moa}\r\n        style={{\r\n          height: '21vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n        }}\r\n      ></div> */}\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["memo","props","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","sliceSettings","fill","am5","chartID","structureNumber","setStructureNumber","structureMoaData","setStructureMoaData","queryContractp","contractp","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","generateStrucMoaData","_root$_logo","divId","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","layout","verticalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","scale","inner_label","text","fontSize","centerX","centerY","populateText","oversizedBehavior","textAlign","onPrivate","width","set","slices","template","setAll","toggleKey","fillOpacity","stroke","strokeWidth","strokeOpacity","templateField","labels","ticks","events","on","ev","_ev$target$dataItem","categorySelect","target","dataItem","dataContext","find","statusStructureChart","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","x","dataItems","markers","height","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","availableSpace","Math","max","maxWidth","valueLabels","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_jsxs","_Fragment","_jsx","style","color","primaryLabelColor","marginLeft","marginTop","CalciteLabel","className","valueLabelColor","fontWeight","fontFamily","lineHeight","thousands_separators","src","alt","display","backgroundColor","marginBottom","margin","marginRight"],"sourceRoot":""}