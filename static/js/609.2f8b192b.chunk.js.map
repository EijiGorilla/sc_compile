{"version":3,"file":"static/js/609.2f8b192b.chunk.js","mappings":"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","sources":["components/UtilityChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { view } from '../Scene';\r\nimport {\r\n  utilityPointLayer1,\r\n  utilityLineLayer1,\r\n  utilityPointLayer,\r\n  utilityLineLayer,\r\n} from '../layers';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport '@esri/calcite-components/dist/components/calcite-label';\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\nimport '../App.css';\r\nimport {\r\n  generateUtilityLineData,\r\n  generateUtilityNumbers,\r\n  generateUtilityPointData,\r\n  thousands_separators,\r\n  utilityTypeChart,\r\n} from '../Query';\r\nimport { primaryLabelColor, valueLabelColor } from '../StatusUniqueValues';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n// Draw chart\r\nconst UtilityChart = (props: any) => {\r\n  // utility point\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [pointChartData, setPointChartData] = useState([]);\r\n  const chartID = 'utility-point-bar';\r\n\r\n  // utility line\r\n  const chartRef_line = useRef<unknown | any | undefined>({});\r\n  const [lineChartData, setLineChartData] = useState([]);\r\n  const chartID_line = 'utility-line-bar';\r\n  //\r\n  const [progress, setProgress] = useState([]);\r\n\r\n  const defaultQuery = '1=1';\r\n  const qContractp = \"CP = '\" + props.contractp + \"'\";\r\n\r\n  if (props.contractp === 'All') {\r\n    utilityPointLayer.definitionExpression = defaultQuery;\r\n    utilityPointLayer1.definitionExpression = defaultQuery;\r\n    utilityLineLayer.definitionExpression = defaultQuery;\r\n    utilityLineLayer1.definitionExpression = defaultQuery;\r\n  } else {\r\n    utilityPointLayer.definitionExpression = qContractp;\r\n    utilityPointLayer1.definitionExpression = qContractp;\r\n    utilityLineLayer.definitionExpression = qContractp;\r\n    utilityLineLayer1.definitionExpression = qContractp;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateUtilityPointData().then((response: any) => {\r\n      setPointChartData(response);\r\n    });\r\n\r\n    generateUtilityLineData().then((response: any) => {\r\n      setLineChartData(response);\r\n    });\r\n\r\n    generateUtilityNumbers(props.contractp).then((response: any) => {\r\n      setProgress(response);\r\n    });\r\n  }, [props.contractp]);\r\n\r\n  // Define parameters\r\n  const marginTop = 0;\r\n  const marginLeft = 0;\r\n  const marginRight = 0;\r\n  const marginBottom = 0;\r\n  const paddingTop = 10;\r\n  const paddingLeft = 5;\r\n  const paddingRight = 5;\r\n  const paddingBottom = 0;\r\n\r\n  const xAxisNumberFormat = \"#'%'\";\r\n  const seriesBulletLabelFontSize = '1vw';\r\n\r\n  // axis label\r\n  const yAxisLabelFontSize = '0.8vw';\r\n  const xAxisLabelFontSize = '0.8vw';\r\n  const legendFontSize = '0.8vw';\r\n\r\n  // 1.1. Point\r\n  const chartIconWidth = 35;\r\n  const chartIconHeight = 35;\r\n  const chartIconPositionX = -21;\r\n  const chartPaddingRightIconLabel = 45;\r\n\r\n  const chartSeriesFillColorComp = '#0070ff';\r\n  const chartSeriesFillColorIncomp = '#000000';\r\n  const chartBorderLineColor = '#00c5ff';\r\n  const chartBorderLineWidth = 0.4;\r\n\r\n  // Utility point\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        layout: root.verticalLayout,\r\n        marginTop: marginTop,\r\n        marginLeft: marginLeft,\r\n        marginRight: marginRight,\r\n        marginBottom: marginBottom,\r\n        paddingTop: paddingTop,\r\n        paddingLeft: paddingLeft,\r\n        paddingRight: paddingRight,\r\n        paddingBottom: paddingBottom,\r\n        scale: 1,\r\n        height: am5.percent(100),\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      inversed: true,\r\n    });\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        bullet: function (root, axis, dataItem: any) {\r\n          return am5xy.AxisBullet.new(root, {\r\n            location: 0.5,\r\n            sprite: am5.Picture.new(root, {\r\n              width: chartIconWidth,\r\n              height: chartIconHeight,\r\n              centerY: am5.p50,\r\n              centerX: am5.p50,\r\n              x: chartIconPositionX,\r\n              src: dataItem.dataContext.icon,\r\n            }),\r\n          });\r\n        },\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    yRenderer.labels.template.setAll({\r\n      paddingRight: chartPaddingRightIconLabel,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      oversizedBehavior: 'wrap',\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: yAxisLabelFontSize,\r\n    });\r\n    yAxis.data.setAll(pointChartData);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        numberFormat: xAxisNumberFormat,\r\n        calculateTotals: true,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          strokeOpacity: 0,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: xAxisLabelFontSize,\r\n    });\r\n\r\n    // var legend = chart.children.push(\r\n    //   am5.Legend.new(root, {\r\n    //     centerX: am5.p50,\r\n    //     centerY: am5.percent(50),\r\n    //     x: am5.percent(60),\r\n    //     y: am5.percent(97),\r\n    //     marginTop: 20,\r\n    //   }),\r\n    // );\r\n    // legendRef.current = legend;\r\n\r\n    // legend.labels.template.setAll({\r\n    //   oversizedBehavior: 'truncate',\r\n    //   fill: am5.color('#ffffff'),\r\n    //   fontSize: legendFontSize,\r\n    //   scale: 1.2,\r\n    // });\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXField: fieldName,\r\n          valueXShow: 'valueXTotalPercent',\r\n          categoryYField: 'category',\r\n          fill:\r\n            fieldName === 'incomp'\r\n              ? am5.color(chartSeriesFillColorIncomp)\r\n              : am5.color(chartSeriesFillColorComp),\r\n          stroke: am5.color(chartBorderLineColor),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        tooltipText: '{name}: {valueX}', // \"{categoryY}: {valueX}\",\r\n        tooltipY: am5.percent(90),\r\n        //fill: am5.color(\"#ffffff\")\r\n        // 100% transparent for incomplete\r\n        fillOpacity: fieldName === 'incomp' ? 0 : 1,\r\n        strokeWidth: chartBorderLineWidth,\r\n        //strokeOpacity: 0,\r\n      });\r\n      series.data.setAll(pointChartData);\r\n\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: fieldName === 0 ? '' : \"{valueXTotalPercent.formatNumber('#.')}%\", //\"{valueX}\",\r\n            fill: root.interfaceColors.get('alternativeText'),\r\n            opacity: fieldName === 'incomp' ? 0 : 1,\r\n            fontSize: seriesBulletLabelFontSize,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n          }),\r\n        });\r\n      });\r\n\r\n      // Click event\r\n      series.columns.template.events.on('click', (ev) => {\r\n        const selected: any = ev.target.dataItem?.dataContext;\r\n        const categorySelect: string = selected.category;\r\n        const find = utilityTypeChart.find((emp: any) => emp.category === categorySelect);\r\n        const typeSelect = find?.value;\r\n\r\n        const selectedStatus: number | null = fieldName === 'incomp' ? 0 : 1;\r\n\r\n        const defaultExpression = '1=1';\r\n        const sqlExpression =\r\n          \"CP = '\" +\r\n          props.contractp +\r\n          \"'\" +\r\n          ' AND ' +\r\n          'UtilType = ' +\r\n          typeSelect +\r\n          ' AND ' +\r\n          'Status = ' +\r\n          selectedStatus;\r\n        // Define Query\r\n        var query = utilityPointLayer.createQuery();\r\n        query.where = props.contractp === 'All' ? defaultExpression : sqlExpression;\r\n\r\n        let highlightSelect: any;\r\n        view.when(() => {\r\n          view.whenLayerView(utilityPointLayer).then((layerView: any) => {\r\n            utilityPointLayer.queryFeatures(query).then((results: any) => {\r\n              const lengths = results.features;\r\n              const rows = lengths.length;\r\n\r\n              let objID = [];\r\n              for (var i = 0; i < rows; i++) {\r\n                var obj = results.features[i].attributes.OBJECTID;\r\n                objID.push(obj);\r\n              }\r\n\r\n              var queryExt = new Query({\r\n                objectIds: objID,\r\n              });\r\n\r\n              utilityPointLayer.queryExtent(queryExt).then((result: any) => {\r\n                if (result.extent) {\r\n                  view.goTo(result.extent);\r\n                }\r\n              });\r\n\r\n              if (highlightSelect) {\r\n                highlightSelect.remove();\r\n              }\r\n              highlightSelect = layerView.highlight(objID);\r\n\r\n              view.on('click', () => {\r\n                layerView.filter = new FeatureFilter({\r\n                  where: undefined,\r\n                });\r\n                highlightSelect.remove();\r\n              });\r\n            });\r\n            layerView.filter = new FeatureFilter({\r\n              where: props.contractp === 'All' ? defaultExpression : sqlExpression,\r\n            });\r\n          });\r\n\r\n          var query1 = utilityPointLayer.createQuery();\r\n          query1.where = props.contractp === 'All' ? defaultExpression : sqlExpression;\r\n\r\n          view.whenLayerView(utilityPointLayer1).then((layerView: any) => {\r\n            utilityPointLayer1.queryFeatures(query1).then((results: any) => {\r\n              const lengths = results.features;\r\n              const rows = lengths.length;\r\n\r\n              let objID = [];\r\n              for (var i = 0; i < rows; i++) {\r\n                var obj = results.features[i].attributes.OBJECTID;\r\n                objID.push(obj);\r\n              }\r\n\r\n              var queryExt = new Query({\r\n                objectIds: objID,\r\n              });\r\n\r\n              utilityPointLayer1.queryExtent(queryExt).then((result: any) => {\r\n                if (result.extent) {\r\n                  view.goTo(result.extent);\r\n                }\r\n              });\r\n\r\n              if (highlightSelect) {\r\n                highlightSelect.remove();\r\n              }\r\n              highlightSelect = layerView.highlight(objID);\r\n\r\n              view.on('click', () => {\r\n                layerView.filter = new FeatureFilter({\r\n                  where: undefined,\r\n                });\r\n                highlightSelect.remove();\r\n              });\r\n            });\r\n            layerView.filter = new FeatureFilter({\r\n              where: props.contractp === 'All' ? defaultExpression : sqlExpression,\r\n            });\r\n          });\r\n        });\r\n\r\n        // Point + Line\r\n      });\r\n\r\n      // legend.data.push(series);\r\n    }\r\n    makeSeries('Complete', 'comp');\r\n    makeSeries('Incomplete', 'incomp');\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  });\r\n\r\n  // utility line\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID_line);\r\n\r\n    var root2 = am5.Root.new(chartID_line);\r\n    root2.container.children.clear();\r\n    root2._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root2.setThemes([am5themes_Animated.new(root2), am5themes_Responsive.new(root2)]);\r\n\r\n    var chart = root2.container.children.push(\r\n      am5xy.XYChart.new(root2, {\r\n        panX: false,\r\n        panY: false,\r\n        layout: root2.verticalLayout,\r\n        marginTop: marginTop,\r\n        marginLeft: marginLeft,\r\n        marginRight: marginRight,\r\n        marginBottom: marginBottom,\r\n        paddingTop: paddingTop,\r\n        paddingLeft: paddingLeft,\r\n        paddingRight: paddingRight,\r\n        paddingBottom: paddingBottom,\r\n        scale: 1,\r\n        height: am5.percent(100),\r\n      }),\r\n    );\r\n    chartRef_line.current = chart;\r\n\r\n    var yRenderer = am5xy.AxisRendererY.new(root2, {\r\n      inversed: true,\r\n    });\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root2, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        bullet: function (root2, axis, dataItem: any) {\r\n          return am5xy.AxisBullet.new(root2, {\r\n            location: 0.5,\r\n            sprite: am5.Picture.new(root2, {\r\n              width: chartIconWidth,\r\n              height: chartIconHeight,\r\n              centerY: am5.p50,\r\n              centerX: am5.p50,\r\n              x: chartIconPositionX,\r\n              src: dataItem.dataContext.icon,\r\n            }),\r\n          });\r\n        },\r\n        tooltip: am5.Tooltip.new(root2, {}),\r\n      }),\r\n    );\r\n\r\n    yRenderer.labels.template.setAll({\r\n      paddingRight: chartPaddingRightIconLabel,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      oversizedBehavior: 'wrap',\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: yAxisLabelFontSize,\r\n    });\r\n    yAxis.data.setAll(lineChartData);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root2, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        numberFormat: xAxisNumberFormat,\r\n        calculateTotals: true,\r\n        renderer: am5xy.AxisRendererX.new(root2, {\r\n          strokeOpacity: 0,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: xAxisLabelFontSize,\r\n    });\r\n\r\n    // var legend = chart.children.push(\r\n    //   am5.Legend.new(root, {\r\n    //     centerX: am5.p50,\r\n    //     centerY: am5.percent(50),\r\n    //     x: am5.percent(60),\r\n    //     y: am5.percent(97),\r\n    //     marginTop: 20,\r\n    //   }),\r\n    // );\r\n    // legendRef.current = legend;\r\n\r\n    // legend.labels.template.setAll({\r\n    //   oversizedBehavior: 'truncate',\r\n    //   fill: am5.color('#ffffff'),\r\n    //   fontSize: legendFontSize,\r\n    //   scale: 1.2,\r\n    // });\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root2, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXField: fieldName,\r\n          valueXShow: 'valueXTotalPercent',\r\n          categoryYField: 'category',\r\n          fill:\r\n            fieldName === 'incomp'\r\n              ? am5.color(chartSeriesFillColorIncomp)\r\n              : am5.color(chartSeriesFillColorComp),\r\n          stroke: am5.color(chartBorderLineColor),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        tooltipText: '{name}: {valueX}', // \"{categoryY}: {valueX}\",\r\n        tooltipY: am5.percent(90),\r\n        //fill: am5.color(\"#ffffff\")\r\n        // 100% transparent for incomplete\r\n        fillOpacity: fieldName === 'incomp' ? 0 : 1,\r\n        strokeWidth: chartBorderLineWidth,\r\n        //strokeOpacity: 0,\r\n      });\r\n      series.data.setAll(lineChartData);\r\n\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root2, {\r\n          sprite: am5.Label.new(root2, {\r\n            text: fieldName === 0 ? '' : \"{valueXTotalPercent.formatNumber('#.')}%\", //\"{valueX}\",\r\n            fill: root2.interfaceColors.get('alternativeText'),\r\n            opacity: fieldName === 'incomp' ? 0 : 1,\r\n            fontSize: seriesBulletLabelFontSize,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n          }),\r\n        });\r\n      });\r\n\r\n      // Click event\r\n      series.columns.template.events.on('click', (ev) => {\r\n        const selected: any = ev.target.dataItem?.dataContext;\r\n        const categorySelect: string = selected.category;\r\n        const find = utilityTypeChart.find((emp: any) => emp.category === categorySelect);\r\n        const typeSelect = find?.value;\r\n\r\n        const selectedStatus: number | null = fieldName === 'incomp' ? 0 : 1;\r\n\r\n        const defaultExpression = '1=1';\r\n        const sqlExpression =\r\n          \"CP = '\" +\r\n          props.contractp +\r\n          \"'\" +\r\n          ' AND ' +\r\n          'UtilType = ' +\r\n          typeSelect +\r\n          ' AND ' +\r\n          'Status = ' +\r\n          selectedStatus;\r\n        // Define Query\r\n        var query = utilityLineLayer.createQuery();\r\n        query.where = props.contractp === 'All' ? defaultExpression : sqlExpression;\r\n\r\n        let highlightSelect: any;\r\n        view.when(() => {\r\n          view.whenLayerView(utilityLineLayer).then((layerView: any) => {\r\n            utilityLineLayer.queryFeatures(query).then((results: any) => {\r\n              const lengths = results.features;\r\n              const rows = lengths.length;\r\n\r\n              let objID = [];\r\n              for (var i = 0; i < rows; i++) {\r\n                var obj = results.features[i].attributes.OBJECTID;\r\n                objID.push(obj);\r\n              }\r\n\r\n              var queryExt = new Query({\r\n                objectIds: objID,\r\n              });\r\n\r\n              utilityLineLayer.queryExtent(queryExt).then((result: any) => {\r\n                if (result.extent) {\r\n                  view.goTo(result.extent);\r\n                }\r\n              });\r\n\r\n              if (highlightSelect) {\r\n                highlightSelect.remove();\r\n              }\r\n              highlightSelect = layerView.highlight(objID);\r\n\r\n              view.on('click', () => {\r\n                layerView.filter = new FeatureFilter({\r\n                  where: undefined,\r\n                });\r\n                highlightSelect.remove();\r\n              });\r\n            });\r\n            layerView.filter = new FeatureFilter({\r\n              where: props.contractp === 'All' ? defaultExpression : sqlExpression,\r\n            });\r\n          });\r\n\r\n          var query1 = utilityLineLayer.createQuery();\r\n          query1.where = props.contractp === 'All' ? defaultExpression : sqlExpression;\r\n\r\n          view.whenLayerView(utilityLineLayer1).then((layerView: any) => {\r\n            utilityLineLayer1.queryFeatures(query1).then((results: any) => {\r\n              const lengths = results.features;\r\n              const rows = lengths.length;\r\n\r\n              let objID = [];\r\n              for (var i = 0; i < rows; i++) {\r\n                var obj = results.features[i].attributes.OBJECTID;\r\n                objID.push(obj);\r\n              }\r\n\r\n              var queryExt = new Query({\r\n                objectIds: objID,\r\n              });\r\n\r\n              utilityLineLayer1.queryExtent(queryExt).then((result: any) => {\r\n                if (result.extent) {\r\n                  view.goTo(result.extent);\r\n                }\r\n              });\r\n\r\n              if (highlightSelect) {\r\n                highlightSelect.remove();\r\n              }\r\n              highlightSelect = layerView.highlight(objID);\r\n\r\n              view.on('click', () => {\r\n                layerView.filter = new FeatureFilter({\r\n                  where: undefined,\r\n                });\r\n                highlightSelect.remove();\r\n              });\r\n            });\r\n            layerView.filter = new FeatureFilter({\r\n              where: props.contractp === 'All' ? defaultExpression : sqlExpression,\r\n            });\r\n          });\r\n        });\r\n\r\n        // Point + Line\r\n      });\r\n\r\n      // legend.data.push(series);\r\n    }\r\n    makeSeries('Complete', 'comp');\r\n    makeSeries('Incomplete', 'incomp');\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root2.dispose();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          color: primaryLabelColor,\r\n          fontSize: '1.2rem',\r\n          marginLeft: '13px',\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        TOTAL PROGRESS\r\n      </div>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n          <div\r\n            style={{\r\n              color: valueLabelColor,\r\n              fontSize: '2rem',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'calibri',\r\n              lineHeight: '1.2',\r\n              marginLeft: '15px',\r\n            }}\r\n          >\r\n            <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n              {thousands_separators(progress[1])} %{' '}\r\n              <div className=\"totalLotsNumber2\">({thousands_separators(progress[0])})</div>\r\n            </b>\r\n          </div>\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/Utility_Logo.png\"\r\n            alt=\"Land Logo\"\r\n            height={'75px'}\r\n            width={'75px'}\r\n            style={{ marginLeft: '260px', display: 'flex', marginTop: '-90px' }}\r\n          />\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      <div id=\"utilityPointChartTitle\" style={{ marginTop: '10px' }}>\r\n        POINT FEATURE\r\n      </div>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          width: '23vw',\r\n          height: '33vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginRight: '10px',\r\n        }}\r\n      ></div>\r\n      <div id=\"utilityLineChartTitle\">LINE FEATURE</div>\r\n      <div\r\n        id={chartID_line}\r\n        style={{\r\n          width: '23vw',\r\n          height: '33vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginRight: '10px',\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UtilityChart;\r\n"],"names":["maybeDisposeRoot","divId","am5","rootElements","root","dom","id","dispose","props","chartRef","useRef","pointChartData","setPointChartData","useState","chartID","chartRef_line","lineChartData","setLineChartData","chartID_line","progress","setProgress","defaultQuery","qContractp","contractp","utilityPointLayer","definitionExpression","utilityPointLayer1","utilityLineLayer","utilityLineLayer1","useEffect","generateUtilityPointData","then","response","generateUtilityLineData","generateUtilityNumbers","xAxisNumberFormat","yAxisLabelFontSize","xAxisLabelFontSize","chartSeriesFillColorComp","chartSeriesFillColorIncomp","chartBorderLineColor","_root$_logo","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","layout","verticalLayout","marginTop","marginLeft","marginRight","marginBottom","paddingTop","paddingLeft","paddingRight","paddingBottom","scale","height","current","yRenderer","inversed","yAxis","yAxes","categoryField","renderer","bullet","axis","dataItem","location","sprite","width","centerY","centerX","x","src","dataContext","icon","tooltip","labels","template","setAll","grid","get","oversizedBehavior","textAlign","fill","fontSize","data","xAxis","xAxes","min","max","strictMinMax","numberFormat","calculateTotals","strokeOpacity","strokeWidth","stroke","makeSeries","name","fieldName","series","stacked","baseAxis","valueXField","valueXShow","categoryYField","columns","tooltipText","tooltipY","fillOpacity","appear","bullets","text","interfaceColors","opacity","populateText","events","on","ev","_ev$target$dataItem","categorySelect","target","category","find","utilityTypeChart","emp","typeSelect","value","selectedStatus","defaultExpression","sqlExpression","query","createQuery","highlightSelect","where","view","when","whenLayerView","layerView","queryFeatures","results","rows","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","result","extent","goTo","remove","highlight","filter","FeatureFilter","undefined","query1","_root2$_logo","root2","_ev$target$dataItem2","_jsxs","_jsx","style","color","primaryLabelColor","CalciteLabel","className","valueLabelColor","fontWeight","fontFamily","lineHeight","thousands_separators","alt","display","backgroundColor"],"sourceRoot":""}