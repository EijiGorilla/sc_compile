{"version":3,"file":"static/js/1519.530d99c3.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/axes/AxisBullet.ts","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","../node_modules/src/.internal/core/render/Picture.ts"],"sourcesContent":["import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteEvents, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\nexport interface IPictureEvents extends ISpriteEvents {\n\n\t/**\n\t * Invoked when picture is loaded.\n\t */\n\tloaded: {};\n\n\t/**\n\t * Invoked when picture load error happens.\n\t */\n\tloaderror: {};\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\tdeclare public _events: IPictureEvents;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\tconst events = this.events;\n\t\t\t\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaded\")) {\n\t\t\t\t\tevents.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaderror\")) {\n\t\t\t\t\tevents.dispatch(\"loaderror\", { type: \"loaderror\", target: this });\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n"],"names":["AxisBullet","Entity","constructor","Object","defineProperty","_beforeChanged","super","sprite","this","get","isDirty","setAll","position","role","_disposers","push","dataItem","axis","_prepareDataItem","dispose","$object","_bullets","key","bullet","uid","classNames","concat","className","CategoryAxis","Axis","_afterNew","_settings","themeTags","$utils","fields","setPrivateRaw","addTag","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","setRaw","Math","max","round","min","_sizeDirty","isPrivateDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","_markDirtyAxes","openKey","otherAxis","ValueAxis","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","renderer","minorLabelsEnabled","minorGridEnabled","maxCount","axisLength","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","count","_a","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","getPrivate","baseValue","basePosition","getX","value","axisDataItem","positionToCoordinate","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","location","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","$math","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","tooltip","_setDataItem","text","markDirtyText","getSeriesItem","fieldName","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","nextPosition","toGlobalPosition","Picture","Sprite","_root","_renderer","makePicture","undefined","_changed","width","_display","height","clear","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","_load","src","image","Image","crossOrigin","events","decode","then","_updateSize","isDisposed","isEnabled","dispatch","type","target","catch","_error","w","h","r","markDirtyBounds","markDirty"],"sourceRoot":""}