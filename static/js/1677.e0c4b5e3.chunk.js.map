{"version":3,"file":"static/js/1677.e0c4b5e3.chunk.js","mappings":"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","sources":["components/ViaductChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { view } from '../Scene';\r\nimport { viaductLayer } from '../layers';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { primaryLabelColor, valueLabelColor } from '../StatusUniqueValues';\r\nimport '@esri/calcite-components/dist/components/calcite-label';\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\n\r\nimport '../App.css';\r\nimport {\r\n  generateViaductChartData,\r\n  generateTotalProgress,\r\n  thousands_separators,\r\n  viatypes,\r\n} from '../Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n// Draw chart\r\nconst ViaductChart = (props: any) => {\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [chartData, setChartData] = useState([]);\r\n  const [progress, setProgress] = useState([]);\r\n\r\n  const chartID = 'viaduct-bar';\r\n\r\n  useEffect(() => {\r\n    generateViaductChartData(props.contractp).then((response: any) => {\r\n      setChartData(response);\r\n    });\r\n\r\n    generateTotalProgress(props.contractp).then((response: any) => {\r\n      setProgress(response);\r\n    });\r\n  }, [props.contractp]);\r\n\r\n  // Define parameters\r\n  const marginTop = 0;\r\n  const marginLeft = 0;\r\n  const marginRight = 0;\r\n  const marginBottom = 0;\r\n  const paddingTop = 10;\r\n  const paddingLeft = 5;\r\n  const paddingRight = 5;\r\n  const paddingBottom = 0;\r\n\r\n  const xAxisNumberFormat = \"#'%'\";\r\n  const seriesBulletLabelFontSize = '1vw';\r\n\r\n  // axis label\r\n  const yAxisLabelFontSize = '0.8vw';\r\n  const xAxisLabelFontSize = '0.8vw';\r\n  const legendFontSize = '0.8vw';\r\n\r\n  // 1.1. Point\r\n  const chartIconWidth = 35;\r\n  const chartIconHeight = 35;\r\n  const chartIconPositionX = -21;\r\n  const chartPaddingRightIconLabel = 45;\r\n\r\n  const chartSeriesFillColorComp = '#0070ff';\r\n  const chartSeriesFillColorIncomp = '#000000';\r\n  const chartSeriesFillColorDelay = '#FF0000'; // original: #FF0000\r\n  const chartBorderLineColor = '#00c5ff';\r\n  const chartBorderLineWidth = 0.4;\r\n\r\n  // Utility Chart\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        layout: root.verticalLayout,\r\n        marginTop: marginTop,\r\n        marginLeft: marginLeft,\r\n        marginRight: marginRight,\r\n        marginBottom: marginBottom,\r\n        paddingTop: paddingTop,\r\n        paddingLeft: paddingLeft,\r\n        paddingRight: paddingRight,\r\n        paddingBottom: paddingBottom,\r\n        scale: 1,\r\n        height: am5.percent(100),\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      inversed: true,\r\n    });\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        bullet: function (root, axis, dataItem: any) {\r\n          return am5xy.AxisBullet.new(root, {\r\n            location: 0.5,\r\n            sprite: am5.Picture.new(root, {\r\n              width: chartIconWidth,\r\n              height: chartIconHeight,\r\n              centerY: am5.p50,\r\n              centerX: am5.p50,\r\n              x: chartIconPositionX,\r\n              src: dataItem.dataContext.icon,\r\n            }),\r\n          });\r\n        },\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    yRenderer.labels.template.setAll({\r\n      paddingRight: chartPaddingRightIconLabel,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      oversizedBehavior: 'wrap',\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: yAxisLabelFontSize,\r\n    });\r\n    yAxis.data.setAll(chartData);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        numberFormat: xAxisNumberFormat,\r\n        calculateTotals: true,\r\n        renderer: am5xy.AxisRendererX.new(root, {\r\n          strokeOpacity: 0,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: xAxisLabelFontSize,\r\n    });\r\n\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        centerY: am5.percent(50),\r\n        x: am5.percent(60),\r\n        y: am5.percent(97),\r\n        marginTop: 20,\r\n        scale: 0.8,\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: legendFontSize,\r\n      scale: 1.2,\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(600),\r\n      //fontWeight: '300',\r\n    });\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXField: fieldName,\r\n          valueXShow: 'valueXTotalPercent',\r\n          categoryYField: 'category',\r\n          fill:\r\n            fieldName === 'delay'\r\n              ? fieldName === 'incomp'\r\n                ? am5.color(chartSeriesFillColorIncomp)\r\n                : am5.color(chartSeriesFillColorDelay)\r\n              : am5.color(chartSeriesFillColorComp),\r\n          stroke: am5.color(chartBorderLineColor),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        fillOpacity:\r\n          fieldName === 'comp' // first condition\r\n            ? fieldName === 'incomp' // second condition\r\n              ? 0 // if first condition is false and second condition is true,\r\n              : 1 // if first condition is true\r\n            : fieldName === 'delay' // third condition\r\n              ? 0.5 // if first and second conditions are false but third condition is true\r\n              : 0, // else\r\n        tooltipText: '{name}: {valueX}', // \"{categoryY}: {valueX}\",\r\n        tooltipY: am5.percent(90),\r\n        strokeWidth: chartBorderLineWidth,\r\n      });\r\n      series.data.setAll(chartData);\r\n\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text:\r\n              fieldName === 'incomp' || fieldName === 'delay'\r\n                ? ''\r\n                : \"{valueXTotalPercent.formatNumber('#.')}%\", //\"{valueX}\",\r\n            fill: root.interfaceColors.get('alternativeText'),\r\n            opacity: fieldName === 'incomp' ? 0 : 1,\r\n            fontSize: seriesBulletLabelFontSize,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n          }),\r\n        });\r\n      });\r\n\r\n      // Click event\r\n      series.columns.template.events.on('click', (ev) => {\r\n        const selected: any = ev.target.dataItem?.dataContext;\r\n        const categorySelect: string = selected.category;\r\n        const find = viatypes.find((emp: any) => emp.category === categorySelect);\r\n        const typeSelect = find?.value;\r\n        const selectedStatus: number | null =\r\n          fieldName === 'comp' ? (fieldName === 'incomp' ? 1 : 4) : fieldName === 'delay' ? 3 : 1;\r\n\r\n        const expression =\r\n          \"CP = '\" +\r\n          props.contractp +\r\n          \"'\" +\r\n          ' AND ' +\r\n          'Type = ' +\r\n          typeSelect +\r\n          ' AND ' +\r\n          'Status = ' +\r\n          selectedStatus;\r\n\r\n        // Define Query\r\n        var query = viaductLayer.createQuery();\r\n        // query.where = '1=1';\r\n\r\n        // layerView filter and highlight\r\n        let highlightSelect: any;\r\n        view.when(() => {\r\n          view.whenLayerView(viaductLayer).then((layerView: any) => {\r\n            viaductLayer.queryFeatures(query).then((results: any) => {\r\n              const lengths = results.features;\r\n              const rows = lengths.length;\r\n\r\n              let objID = [];\r\n              for (var i = 0; i < rows; i++) {\r\n                var obj = results.features[i].attributes.OBJECTID;\r\n                objID.push(obj);\r\n              }\r\n\r\n              if (highlightSelect) {\r\n                highlightSelect.remove();\r\n              }\r\n              highlightSelect = layerView.highlight(objID);\r\n\r\n              view.on('click', () => {\r\n                layerView.filter = new FeatureFilter({\r\n                  where: undefined,\r\n                });\r\n                highlightSelect.remove();\r\n              });\r\n            });\r\n            layerView.filter = new FeatureFilter({\r\n              where: expression,\r\n            });\r\n          });\r\n        });\r\n      });\r\n      legend.data.push(series);\r\n    }\r\n    makeSeries('Complete', 'comp');\r\n    makeSeries('Incomplete', 'incomp');\r\n    // makeSeries('Delayed', 'delay');\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          color: primaryLabelColor,\r\n          fontSize: '1.2rem',\r\n          marginLeft: '13px',\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        TOTAL PROGRESS\r\n      </div>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n          <div\r\n            style={{\r\n              color: valueLabelColor,\r\n              fontSize: '2rem',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'calibri',\r\n              lineHeight: '1.2',\r\n              marginLeft: '15px',\r\n            }}\r\n          >\r\n            <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n              {thousands_separators(progress[2])} %{' '}\r\n              <div className=\"totalLotsNumber2\">({thousands_separators(progress[0])})</div>\r\n            </b>\r\n          </div>\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/Viaduct_Images/Viaduct_All_Logo.svg\"\r\n            alt=\"Land Logo\"\r\n            height={'50px'}\r\n            width={'50px'}\r\n            style={{ marginLeft: '260px', display: 'flex', marginTop: '-70px' }}\r\n          />\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          width: '23vw',\r\n          height: '55vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginRight: '10px',\r\n          marginTop: '20px',\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViaductChart;\r\n"],"names":["props","legendRef","useRef","chartRef","chartData","setChartData","useState","progress","setProgress","chartID","useEffect","generateViaductChartData","contractp","then","response","generateTotalProgress","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","layout","verticalLayout","marginTop","marginLeft","marginRight","marginBottom","paddingTop","paddingLeft","paddingRight","paddingBottom","scale","height","current","yRenderer","inversed","yAxis","yAxes","categoryField","renderer","bullet","axis","dataItem","location","sprite","width","centerY","centerX","x","src","dataContext","icon","tooltip","labels","template","setAll","grid","get","oversizedBehavior","textAlign","fill","fontSize","data","xAxis","xAxes","min","max","strictMinMax","numberFormat","calculateTotals","strokeOpacity","strokeWidth","stroke","legend","y","horizontalLayout","makeSeries","name","fieldName","series","stacked","baseAxis","valueXField","valueXShow","categoryYField","columns","fillOpacity","tooltipText","tooltipY","appear","bullets","text","interfaceColors","opacity","populateText","events","on","ev","_ev$target$dataItem","categorySelect","target","category","find","viatypes","emp","typeSelect","value","selectedStatus","expression","query","viaductLayer","createQuery","highlightSelect","view","when","whenLayerView","layerView","queryFeatures","results","rows","features","length","objID","i","obj","attributes","OBJECTID","remove","highlight","filter","FeatureFilter","where","undefined","_jsxs","_jsx","style","color","primaryLabelColor","CalciteLabel","className","valueLabelColor","fontWeight","fontFamily","lineHeight","thousands_separators","alt","display","backgroundColor"],"sourceRoot":""}