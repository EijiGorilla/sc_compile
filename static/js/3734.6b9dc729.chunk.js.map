{"version":3,"file":"static/js/3734.6b9dc729.chunk.js","mappings":"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","sources":["components/HandedOverAreaChart.tsx","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts"],"sourcesContent":["import { useRef, useState, useEffect, memo } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { generateHandedOverAreaData } from '../Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst HandedOverAreaChart = memo(() => {\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [lotHandedOverAreaData, setLotHandedOverAreaData] = useState([]);\r\n\r\n  const chartID = 'lot-handedover';\r\n  useEffect(() => {\r\n    generateHandedOverAreaData().then((result: any) => {\r\n      setLotHandedOverAreaData(result);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panY',\r\n        wheelY: 'zoomY',\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Handed-Over Area (m2)',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Create axes\r\n    var yRenderer = am5xy.AxisRendererY.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        categoryField: 'category',\r\n        renderer: yRenderer,\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    // Label properties Y axis\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    yRenderer.grid.template.setAll({\r\n      location: 1,\r\n    });\r\n    yAxis.data.setAll(lotHandedOverAreaData);\r\n\r\n    // Set xaxis\r\n    var xRenderer = am5xy.AxisRendererX.new(root, {\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n\r\n    // Remove xaxis labels\r\n    xRenderer.labels.template.set('visible', false);\r\n\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        min: 0,\r\n        max: 100,\r\n        strictMinMax: true,\r\n        calculateTotals: true,\r\n        renderer: xRenderer,\r\n      }),\r\n    );\r\n\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          baseAxis: yAxis,\r\n          valueXShow: 'valueXTotalPercent',\r\n          valueXField: fieldName,\r\n          categoryYField: 'category',\r\n          fill: am5.color('#0070ff'),\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        //tooltipText: \"{name}, {categoryY}: {valueX}%\",\r\n        //tooltipY: am5.percent(90)\r\n      });\r\n      series.data.setAll(lotHandedOverAreaData);\r\n\r\n      // Make stuff animate on load\r\n      // https://www.amcharts.com/docs/v5/concepts/animations/\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: '{valueX}%',\r\n            fill: am5.color('#ffffff'), //root6.interfaceColors.get(\"alternativeText\"),\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n            fontSize: 12,\r\n          }),\r\n        });\r\n      });\r\n    }\r\n    makeSeries('Value', 'value');\r\n    chart.appear(1000, 100);\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, lotHandedOverAreaData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '80vh',\r\n          width: '30%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default HandedOverAreaChart;\r\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n"],"names":["memo","chartRef","useRef","lotHandedOverAreaData","setLotHandedOverAreaData","useState","chartID","useEffect","generateHandedOverAreaData","then","result","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","wheelX","wheelY","layout","verticalLayout","current","unshift","text","fontSize","fontWeight","textAlign","fill","x","centerX","paddingTop","paddingBottom","yRenderer","strokeOpacity","strokeWidth","stroke","yAxis","yAxes","categoryField","renderer","tooltip","get","labels","template","setAll","grid","location","data","xRenderer","set","xAxis","xAxes","min","max","strictMinMax","calculateTotals","name","fieldName","series","stacked","baseAxis","valueXShow","valueXField","categoryYField","columns","appear","bullets","sprite","centerY","populateText","makeSeries","_jsx","_Fragment","style","height","width","backgroundColor","color","position","zIndex","bottom","marginLeft","marginRight","CategoryAxis","Axis","constructor","Object","defineProperty","_afterNew","this","_settings","themeTags","$utils","fields","setPrivateRaw","addTag","super","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","dataItem","setRaw","Math","round","_sizeDirty","isDirty","isPrivateDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","startIndex","endCategory","endIndex","_markDirtyAxes","key","openKey","otherAxis","ValueAxis","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","minorLabelsEnabled","minorGridEnabled","maxCount","axisLength","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","count","_prepareDataItem","_a","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","getPrivate","baseValue","basePosition","getX","value","axisDataItem","positionToCoordinate","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","$math","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","_setDataItem","markDirtyText","getSeriesItem","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","nextPosition","toGlobalPosition","classNames","concat","className"],"sourceRoot":""}