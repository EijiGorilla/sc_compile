{"version":3,"file":"static/js/6270.70da01a1.chunk.js","mappings":"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","sources":["components/NloChart.tsx"],"sourcesContent":["import { useRef, useState, useEffect, memo } from 'react';\r\nimport { nloLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { generateNloData, generateNloNumber, statusNloChart, thousands_separators } from '../Query';\r\nimport '@esri/calcite-components/dist/components/calcite-label';\r\nimport { CalciteLabel } from '@esri/calcite-components-react';\r\nimport { nloStatusField, primaryLabelColor, valueLabelColor } from '../StatusUniqueValues';\r\nimport { useContractPackageContext } from './ContractPackageContext';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n///*** Others */\r\n\r\n/// Draw chart\r\nconst NloChart = memo(() => {\r\n  const { cpValueSelected } = useContractPackageContext();\r\n\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [nloData, SetNloData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n  // NLO\r\n  const [nloNumber, setNloNumber] = useState(0);\r\n  const chartID = 'nlo-chart';\r\n\r\n  // Query\r\n  const queryDefault = '1=1';\r\n  const queryContractp = \"CP = '\" + cpValueSelected + \"'\";\r\n\r\n  if (cpValueSelected === 'All') {\r\n    nloLayer.definitionExpression = queryDefault;\r\n  } else {\r\n    nloLayer.definitionExpression = queryContractp;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateNloData().then((result: any) => {\r\n      SetNloData(result);\r\n    });\r\n\r\n    // NLO\r\n    generateNloNumber().then((response: any) => {\r\n      setNloNumber(response);\r\n    });\r\n  }, [cpValueSelected]);\r\n\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(28),\r\n        scale: 1.8,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // values inside a donut\r\n    let inner_label = pieSeries.children.push(\r\n      am5.Label.new(root, {\r\n        text: '[#ffffff]{valueSum}[/]\\n[fontSize: 0.5em; #d3d3d3; verticalAlign: super]NLOs[/]',\r\n        fontSize: '1rem',\r\n        centerX: am5.percent(50),\r\n        centerY: am5.percent(40),\r\n        populateText: true,\r\n        oversizedBehavior: 'fit',\r\n        textAlign: 'center',\r\n      }),\r\n    );\r\n\r\n    pieSeries.onPrivate('width', (width: any) => {\r\n      inner_label.set('maxWidth', width * 0.7);\r\n    });\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      toggleKey: 'none',\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 0.5,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusNloChart.find((emp: any) => emp.category === categorySelect);\r\n      const typeSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n\r\n      var query = nloLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(nloLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          nloLayer.queryFeatures(query).then(function (results) {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            nloLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: `${nloStatusField} = ` + typeSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(nloData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        scale: 1,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 220; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, nloData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(nloData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          color: primaryLabelColor,\r\n          fontSize: '1.2rem',\r\n          marginLeft: '13px',\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        TOTAL NON-LAND OWNERS\r\n      </div>\r\n      <CalciteLabel layout=\"inline\">\r\n        <b className=\"totalLotsNumber\" style={{ color: valueLabelColor }}>\r\n          <div\r\n            style={{\r\n              color: valueLabelColor,\r\n              fontSize: '2rem',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'calibri',\r\n              lineHeight: '1.2',\r\n              marginLeft: '15px',\r\n            }}\r\n          >\r\n            {thousands_separators(nloNumber)}\r\n          </div>\r\n          <img\r\n            src=\"https://EijiGorilla.github.io/Symbols/NLO_Logo.svg\"\r\n            alt=\"Land Logo\"\r\n            height={'50px'}\r\n            width={'50px'}\r\n            style={{ marginLeft: '260px', display: 'flex', marginTop: '-50px' }}\r\n          />\r\n        </b>\r\n      </CalciteLabel>\r\n\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '50vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-1.5vh',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default NloChart;\r\n"],"names":["memo","cpValueSelected","useContractPackageContext","pieSeriesRef","useRef","legendRef","chartRef","nloData","SetNloData","useState","category","String","value","Number","sliceSettings","fill","am5","nloNumber","setNloNumber","chartID","queryContractp","nloLayer","definitionExpression","useEffect","generateNloData","then","result","generateNloNumber","response","_root$_logo","divId","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","layout","verticalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","scale","inner_label","text","fontSize","centerX","centerY","populateText","oversizedBehavior","textAlign","onPrivate","width","set","slices","template","setAll","toggleKey","fillOpacity","stroke","strokeWidth","strokeOpacity","templateField","labels","ticks","events","on","ev","_ev$target$dataItem","categorySelect","target","dataItem","dataContext","find","statusNloChart","emp","typeSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","nloStatusField","data","legend","x","dataItems","markers","height","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","availableSpace","Math","max","maxWidth","valueLabels","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_jsxs","_Fragment","_jsx","style","color","primaryLabelColor","marginLeft","marginTop","CalciteLabel","className","valueLabelColor","fontWeight","fontFamily","lineHeight","thousands_separators","src","alt","display","backgroundColor","marginBottom"],"sourceRoot":""}