{"version":3,"file":"static/js/6697.f42ce718.chunk.js","mappings":"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","sources":["components/TreeChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { treeCompensationLayer, treeCuttingLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateTreeCuttingData,\r\n  generateTreesNumber,\r\n  statusTreeCuttingChart,\r\n  statusTreeCompensationChart,\r\n  thousands_separators,\r\n  generateTreeCompensationData,\r\n} from '../Query';\r\nimport '../App.css';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst TreeChart = (props: any) => {\r\n  // Tree cutting\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [treeCuttingData, setTreeCuttingData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n  const chartID_cuting = 'pie-cut';\r\n\r\n  // Tree compensation\r\n  const pieSeriesRef_compen = useRef<unknown | any | undefined>({});\r\n  const legendRef_compen = useRef<unknown | any | undefined>({});\r\n  const chartRef_compen = useRef<unknown | any | undefined>({});\r\n  const [treeCompensationData, setTreeCompensationData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n  const chartID_compen = 'pie-compen';\r\n\r\n  const [treesNumber, setTreesNumber] = useState([]);\r\n\r\n  const defaultExpression = '1=1';\r\n  const queryExpression = \"CP = '\" + props.contractp + \"'\";\r\n  if (props.contractp === 'All') {\r\n    treeCuttingLayer.definitionExpression = defaultExpression;\r\n    treeCompensationLayer.definitionExpression = defaultExpression;\r\n  } else {\r\n    treeCuttingLayer.definitionExpression = queryExpression;\r\n    treeCompensationLayer.definitionExpression = queryExpression;\r\n  }\r\n\r\n  // chart and box properties\r\n  const legendBoxWidth = 220;\r\n  const legendY = am5.percent(53);\r\n\r\n  useEffect(() => {\r\n    generateTreeCuttingData().then((result: any) => {\r\n      setTreeCuttingData(result);\r\n    });\r\n\r\n    generateTreeCompensationData().then((result: any) => {\r\n      setTreeCompensationData(result);\r\n    });\r\n\r\n    generateTreesNumber().then((response: any) => {\r\n      setTreesNumber(response);\r\n    });\r\n  }, [props.contractp]);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID_cuting);\r\n\r\n    var root = am5.Root.new(chartID_cuting);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        //centerY: am5.percent(-2), //-10\r\n        y: am5.percent(-25), // space between pie chart and total lots\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n\r\n    // Add image in the middle\r\n    // chart.children.push(\r\n    //   am5.Picture.new(root, {\r\n    //     width: 50,\r\n    //     height: 50,\r\n    //     x: am5.percent(50),\r\n    //     y: am5.percent(50),\r\n    //     centerX: am5.percent(100),\r\n    //     centerY: am5.percent(55),\r\n    //     src: 'https://EijiGorilla.github.io/Symbols/Tree_Cutting_Logo.svg',\r\n    //   }),\r\n    // );\r\n\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        marginBottom: -10,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 1,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelected: string = selected.category;\r\n      const find = statusTreeCuttingChart.find((emp: any) => emp.category === categorySelected);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n\r\n      var query = treeCuttingLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(treeCuttingLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          treeCuttingLayer.queryFeatures(query).then((results: any) => {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            treeCuttingLayer.queryExtent(queryExt).then((result: any) => {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'Status = ' + statusSelect,\r\n          });\r\n\r\n          // For initial state, we need to add this\r\n          view.on('click', () => {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect !== undefined ? highlightSelect.remove() : console.log('');\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(treeCuttingData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = root.container.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        y: legendY,\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = legendBoxWidth; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      //width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID_cuting, treeCuttingData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(treeCuttingData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID_compen);\r\n\r\n    var root = am5.Root.new(chartID_compen);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        //centerY: am5.percent(-2), //-10\r\n        y: am5.percent(-25), // space between pie chart and total lots\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n    chartRef_compen.current = chart;\r\n\r\n    // Create series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        marginBottom: -10,\r\n      }),\r\n    );\r\n    pieSeriesRef_compen.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 1,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelected: string = selected.category;\r\n      const find = statusTreeCompensationChart.find(\r\n        (emp: any) => emp.category === categorySelected,\r\n      );\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n\r\n      var query = treeCompensationLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(treeCompensationLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          treeCompensationLayer.queryFeatures(query).then((results: any) => {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            treeCompensationLayer.queryExtent(queryExt).then((result: any) => {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'Compensation = ' + statusSelect,\r\n          });\r\n\r\n          // For initial state, we need to add this\r\n          view.on('click', () => {\r\n            layerView.filter = new FeatureFilter({\r\n              where: undefined,\r\n            });\r\n            highlightSelect !== undefined ? highlightSelect.remove() : console.log('');\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(treeCompensationData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = root.container.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        y: legendY,\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    legendRef_compen.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = legendBoxWidth; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    // To align legend items: valueLabels right, labels to left\r\n    // 1. fix width of valueLabels\r\n    // 2. dynamically change width of labels by screen size\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      //width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID_compen, treeCompensationData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef_compen.current?.data.setAll(treeCompensationData);\r\n    legendRef_compen.current?.data.setAll(pieSeriesRef_compen.current.dataItems);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"treesNumberImage\">\r\n        <div>\r\n          <div className=\"totalTreesLabel\">TOTAL TREES</div>\r\n          <br />\r\n          <br />\r\n          <b className=\"totalTreesNumber\">{thousands_separators(treesNumber[0])} </b>\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/Tree_Logo.svg\"\r\n          alt=\"Land Logo\"\r\n          height={'20%'}\r\n          width={'20%'}\r\n          style={{ padding: '10px', margin: 'auto', marginRight: '40px' }}\r\n        />\r\n      </div>\r\n      <div\r\n        id={chartID_cuting}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-7vh',\r\n        }}\r\n      ></div>\r\n      <div\r\n        id={chartID_compen}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-1.5vh',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n}; // End of lotChartgs\r\n\r\nexport default TreeChart;\r\n"],"names":["maybeDisposeRoot","divId","am5","rootElements","root","dom","id","dispose","props","pieSeriesRef","useRef","legendRef","chartRef","treeCuttingData","setTreeCuttingData","useState","category","String","value","Number","sliceSettings","fill","chartID_cuting","pieSeriesRef_compen","legendRef_compen","chartRef_compen","treeCompensationData","setTreeCompensationData","chartID_compen","treesNumber","setTreesNumber","queryExpression","contractp","treeCuttingLayer","definitionExpression","treeCompensationLayer","legendY","useEffect","generateTreeCuttingData","then","result","generateTreeCompensationData","generateTreesNumber","response","_root$_logo","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","y","layout","horizontalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","marginBottom","slices","template","setAll","fillOpacity","stroke","strokeWidth","strokeOpacity","templateField","labels","set","ticks","events","on","ev","_ev$target$dataItem","categorySelected","target","dataItem","dataContext","find","statusTreeCuttingChart","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","console","log","data","legend","centerX","x","verticalLayout","dataItems","markers","width","height","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","onPrivate","availableSpace","Math","max","maxWidth","oversizedBehavior","valueLabels","textAlign","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_root$_logo2","_ev$target$dataItem2","statusTreeCompensationChart","_pieSeriesRef_compen$","_legendRef_compen$cur","_jsxs","_Fragment","className","_jsx","thousands_separators","src","alt","style","padding","margin","marginRight","backgroundColor","color"],"sourceRoot":""}