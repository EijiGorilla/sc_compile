{"version":3,"file":"static/js/9338.143534db.chunk.js","mappings":"uOAuBM,MAAOA,UAA4BC,EAAAA,EAC9BC,iBAAAA,GACTC,MAAMD,oBAEN,MAAME,EAAKC,KAAKC,MAAMC,gBAChBC,EAAWH,KAAKC,MAAME,SACtBC,EAAIJ,KAAKK,KAAKC,KAAKN,MAQzBI,EAAE,WAAWG,OAAO,CACnBC,OAAQC,EAAAA,EAASC,IAAIV,KAAKC,MAAO,CAAC,GAClCU,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfC,MAAM,EACNC,MAAM,EACNC,UAAW,IACXC,iBAAiB,EACjBC,YAAY,EACZC,YAAY,IAIbhB,EAAE,YAAYG,OAAO,CACpBc,gBAAiB,WAGlBjB,EAAE,YAAa,CAAC,iBAAkB,KAAM,eAAeG,OAAO,CAC7De,KAAMC,EAAAA,GAAMC,QAAQ,GACpBC,YAAa,IASdrB,EAAE,UAAW,CAAC,YAAa,UAAUG,OAAO,CAC3CO,cAAe,EACfH,YAAa,EACbE,WAAY,EACZD,aAAc,EACdJ,OAAQC,EAAAA,EAASC,IAAIV,KAAKC,MAAO,CAChCyB,WAAY,MAId,CACC,MAAMrB,EAAOD,EAAE,WAAY,CAAC,YAAa,YAEzCC,EAAKE,OAAO,CACXkB,YAAa,MAGdE,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,a,CAI5BK,EAAE,mBAAoB,CAAC,KAAM,YAAa,UAAUG,OAAO,CAC1DqB,eAAgB,EAChBC,eAAgB,EAChBC,eAAgB,EAChBC,eAAgB,EAChBN,YAAa,EACbO,WAAW,IAGZ5B,EAAE,mBAAoB,CAAC,KAAM,YAAa,UAAU6B,OAAOC,OAAO,QAAS,CAAET,YAAa,KAE1FrB,EAAE,mBAAoB,CAAC,KAAM,YAAa,QAAS,eAAeG,OAAO,CACxEsB,eAAgB,EAChBE,eAAgB,EAChBH,eAAgB,EAChBE,eAAgB,IAGjB1B,EAAE,mBAAoB,CAAC,KAAM,YAAa,QAAS,aAAc,SAAU,WAAWG,OAAO,CAC5FwB,eAAgB,GAChBD,eAAgB,GAChBD,eAAgB,GAChBD,eAAgB,KAGjBxB,EAAE,gBAAiB,CAAC,KAAM,QAAS,cAAcG,OAAO,CACvD4B,cAAe,EACfC,QAAQ,IAGThC,EAAE,gBAAiB,CAAC,KAAM,QAAS,cAAcG,OAAO,CACvD4B,cAAe,EACfC,QAAQ,EACRC,gBAAiB,IAGlBjC,EAAE,YAAa,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC/C+B,QAAS,GACTC,QAASC,EAAAA,GACTC,YAAa,IACbC,YAAa,IACbC,SAAU,UAGXvC,EAAE,YAAa,CAAC,aAAaG,OAAO,CACnCqC,KAAM,aACNC,cAAc,IAGfzC,EAAE,YAAa,CAAC,MAAMG,OAAO,CAC5BgC,QAAS,IAGVnC,EAAE,YAAa,CAAC,IAAK,WAAWG,OAAO,CACtCgC,QAASC,EAAAA,KAGVpC,EAAE,YAAa,CAAC,IAAK,SAAU,aAAaG,OAAO,CAClDgC,QAAS,IAGVnC,EAAE,YAAa,CAAC,IAAK,aAAaG,OAAO,CACxCgC,QAASC,EAAAA,KAIVpC,EAAE,YAAa,CAAC,MAAMG,OAAO,CAC5BuC,QAASN,EAAAA,KAGVpC,EAAE,YAAa,CAAC,IAAK,WAAWG,OAAO,CACtCuC,QAAS,IAGV1C,EAAE,YAAa,CAAC,IAAK,SAAU,aAAaG,OAAO,CAClDuC,QAASN,EAAAA,KAGVpC,EAAE,YAAa,CAAC,IAAK,aAAaG,OAAO,CACxCuC,QAAS,IAGV1C,EAAE,YAAa,CAAC,UAAUG,OAAO,CAChCoC,SAAU,UAGXvC,EAAE,YAAa,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC/CwC,SAAS,IAIV3C,EAAE,OAAQ,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC1CwC,SAAS,IAIV3C,EAAE,OAAQ,CAAC,KAAM,YAAa,MAAMG,OAAO,CAC1C+B,QAAS,KAYVlC,EAAE,YAAYG,OAAO,CACpByC,SAAU,OACVC,MAAO,GACPC,YAAY,EACZC,eAAgB,KAChBC,cAAe,IAGhB,CACC,MAAM/C,EAAOD,EAAE,OAAQ,CAAC,SAAU,MAElCC,EAAKE,OAAO,CACX8C,eAAe,EACflB,cAAe,GACfmB,gBAAiB,CAAC,EAAG,GACrBC,KAAM,SACNC,UAAWrD,EAASsD,UAAU,kDAG/B9B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,wB,CAG9B,CACC,MAAMM,EAAOD,EAAE,OAAQ,CAAC,SAAU,MAElCC,EAAKE,OAAO,CACX8C,eAAe,EACflB,cAAe,GACfmB,gBAAiB,CAAC,EAAG,GACrBC,KAAM,SACNC,UAAWrD,EAASsD,UAAU,+CAG/B9B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,wB,CAG9B,CACC,MAAMM,EAAOD,EAAE,WAAY,CAAC,SAAU,cAEtCC,EAAKE,OAAO,CACXkB,YAAa,OAGdE,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,wB,CAU5BK,EAAE,QAAQG,OAAO,CAChBmD,MAAO,EACPC,IAAK,EACLC,aAAc,EACdC,aAAcC,IACdC,cAAe,IACfC,aAAc,GACdC,aAAa,EACbC,gBAAiB,GACjBnD,MAAM,EACNC,MAAM,EACNmD,OAAO,EACPC,OAAO,EACPC,aAAa,IAGdjE,EAAE,aAAaG,OAAO,CACrB+D,SAAU,GACVC,cAAe,EACfzB,QAAS0B,EAAAA,GACTjC,QAASiC,EAAAA,GACT3D,WAAY,EACZC,cAAe,EACfH,YAAa,EACbC,aAAc,IAYfR,EAAE,YAAa,CAAC,OAAQ,WAAWG,OAAO,CACzC0C,MAAO,KAGR7C,EAAE,YAAa,CAAC,OAAQ,SAAU,eAAeG,OAAO,CACvDkE,OAAO,IAGR,CACC,MAAMpE,EAAOD,EAAE,gBAEfC,EAAKE,OAAO,CACXkE,OAAO,EACPtC,cAAe,KAGhBR,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,O,CAG9BK,EAAE,iBAAiBG,OAAO,CACzB8B,gBAAiB,IACjBqC,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,gBAAiB,EACjBC,MAAOtC,EAAAA,KAGRpC,EAAE,iBAAiBG,OAAO,CACzB8B,gBAAiB,GACjBqC,UAAU,EACVC,UAAU,EACVC,kBAAmB,EACnBC,gBAAiB,EACjBE,OAAQvC,EAAAA,KAGT,CACC,MAAMnC,EAAOD,EAAE,YAAa,CAAC,OAAQ,UAErCC,EAAKE,OAAO,CACXkB,YAAa,KAGdE,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,yBAE3BM,EAAK4B,OAAOC,OAAO,QAAS,CAAET,YAAa,I,CAG5CrB,EAAE,YAAa,CAAC,OAAQ,QAAS,MAAMG,OAAO,CAC7CyE,gBAAiB,cAGlB5E,EAAE,YAAa,CAAC,OAAQ,QAAS,MAAMG,OAAO,CAC7CyE,gBAAiB,cAIlB,CACC,MAAM3E,EAAOD,EAAE,QAEfC,EAAKE,OAAO,CACX+D,SAAU,EACVnC,cAAe,IACfsC,OAAO,KAGR9C,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,O,CAG9B,CACC,MAAMM,EAAOD,EAAE,OAAQ,CAAC,UAExBC,EAAKE,OAAO,CACX+D,SAAU,EACVnC,cAAe,IACfsC,OAAO,KAGR9C,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,O,CAI9BK,EAAE,OAAQ,CAAC,SAASG,OAAO,CAC1B4B,cAAe,KAGhB,CACC,MAAM9B,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAEpCC,EAAKE,OAAO,CACXwC,SAAS,EACTkC,YAAY,EACZC,SAAU,WACVzD,YAAa,OAGdE,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,wB,CAG5BK,EAAE,WAAY,CAAC,OAAQ,OAAQ,UAAUG,OAAO,CAC/C0E,YAAY,IAIb7E,EAAE,WAAY,CAAC,SAAU,OAAQ,UAAUG,OAAO,CACjDwC,SAAS,EACTkC,YAAY,IAGb7E,EAAE,OAAQ,CAAC,SAAU,UAAUG,OAAO,CACrCwC,SAAS,IAGV3C,EAAE,WAAY,CAAC,SAAU,UAAUG,OAAO,CACzCwC,SAAS,IAGV3C,EAAE,YAAa,CAAC,SAAU,UAAUG,OAAO,CAC1CwC,SAAS,IAGV,CACC,MAAM1C,EAAOD,EAAE,YAEfC,EAAKE,OAAO,CACX+D,SAAU,GACVC,cAAe,EACfpC,cAAe,EACf8C,YAAY,EACZC,SAAU,WACVnC,SAAS,KAGVpB,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,O,CAG9BK,EAAE,gBAAgBG,OAAO,CACxB4E,cAAe,EACfC,YAAa,EACbC,SAAUA,CAACC,EAA2CC,KACrD,MAAMC,EAAWF,EAASG,IAAI,YAC1BD,IACEE,EAAAA,GAAeH,IAAUA,EAAQ,GAAK,EAI1CC,EAASG,WAAW,WAAW,GAH/BH,EAASG,WAAW,WAAW,G,IASnC,MAAMC,EAAsC,CAC3C,CAAEC,SAAU,cAAeC,MAAO,GAClC,CAAED,SAAU,cAAeC,MAAO,GAClC,CAAED,SAAU,cAAeC,MAAO,IAClC,CAAED,SAAU,cAAeC,MAAO,IAClC,CAAED,SAAU,cAAeC,MAAO,KAClC,CAAED,SAAU,cAAeC,MAAO,KAClC,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,IAC3B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,OAAQC,MAAO,IAC3B,CAAED,SAAU,OAAQC,MAAO,IAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,KAC3B,CAAED,SAAU,OAAQC,MAAO,MAGtBC,EAAc,CACnB,YAAe5F,EAASsD,UAAU,qBAClC,OAAUtD,EAASsD,UAAU,gBAC7B,OAAUtD,EAASsD,UAAU,gBAC7B,KAAQtD,EAASsD,UAAU,cAC3B,IAAOtD,EAASsD,UAAU,aAC1B,KAAQtD,EAASsD,UAAU,aAC3B,MAAStD,EAASsD,UAAU,eAC5B,KAAQtD,EAASsD,UAAU,eAGtBuC,EAA0B,CAC/B,YAAe7F,EAASsD,UAAU,qBAClC,OAAUtD,EAASsD,UAAU,gBAC7B,OAAUtD,EAASsD,UAAU,gBAC7B,KAAQtD,EAASsD,UAAU,aAC3B,IAAOtD,EAASsD,UAAU,aAC1B,KAAQtD,EAASsD,UAAU,aAC3B,MAAStD,EAASsD,UAAU,eAAiB,IAAMtD,EAASsD,UAAU,cACtE,KAAQtD,EAASsD,UAAU,eAGtBwC,EAAqB,CAC1B,YAAe9F,EAASsD,UAAU,0BAClC,OAAUtD,EAASsD,UAAU,qBAC7B,OAAUtD,EAASsD,UAAU,qBAC7B,KAAQtD,EAASsD,UAAU,mBAC3B,IAAOtD,EAASsD,UAAU,kBAC1B,KAAQtD,EAASsD,UAAU,mBAC3B,MAAStD,EAASsD,UAAU,oBAC5B,KAAQtD,EAASsD,UAAU,eAG5BrD,EAAE,oBAAoBG,OAAO,CAC5B2F,gBAAgB,EAChBN,cAAeO,EAAAA,EAAYP,GAC3BG,YAAaK,EAAAA,EAAaL,GAC1BC,wBAAyBI,EAAAA,EAAaJ,KAGvC5F,EAAE,YAAYG,OAAO,CACpBwD,cAAe,KACfsC,cAAc,EACdlB,cAAe,EACfC,YAAa,EACbc,gBAAgB,EAChBI,WAAW,EACXC,WAAY,IACZX,cAAeO,EAAAA,EAAYP,GAC3BG,YAAaK,EAAAA,EAAaL,GAC1BC,wBAAyBI,EAAAA,EAAaJ,GACtCC,mBAAoBA,EAEpBO,eAAgB,CACf,CAAEX,SAAU,cAAeC,MAAO,GAClC,CAAED,SAAU,cAAeC,MAAO,IAClC,CAAED,SAAU,cAAeC,MAAO,KAClC,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,SAAUC,MAAO,GAC7B,CAAED,SAAU,SAAUC,MAAO,IAC7B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,OAAQC,MAAO,GAC3B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,OAAQC,MAAO,IAG5BT,SAAWC,IACV,MAAME,EAAWF,EAASG,IAAI,YAC9B,GAAID,EAAU,CACb,MAAMiB,EAA+BnB,EAASoB,UACxCC,EAAQrB,EAASG,IAAI,SACrBmB,EAAWtB,EAASG,IAAI,YACxBoB,EAAmBJ,EAAKI,mBACxBC,EAAeL,EAAKM,WAAW,gBAC/BC,EAAeP,EAAKM,WAAW,eAAgBD,GAGrD,IAAIG,EAAMR,EAAKM,WAAW,MAAO,GAGjC,GAFAE,EAAMC,EAAAA,GAAY,IAAIC,KAAKF,GAAMD,EAAanB,SAAUmB,EAAalB,MAAO9F,KAAKC,MAAMmH,OAAOC,eAAgBrH,KAAKC,MAAMqH,SAAKC,EAAWvH,KAAKC,MAAMuH,UAAUC,UAEjJ,MAATd,GAA6B,MAAZC,EAAkB,CACtC,MAAMc,EAAMC,KAAKC,MAAMD,KAAKC,OAAOjB,EAAQM,GAAOJ,IAAqB,EAEnEa,GAAOC,KAAKC,MAAMF,GACrBlC,EAASG,WAAW,WAAW,GAG/BH,EAASG,WAAW,WAAW,E,MAOpCvF,EAAE,mBAAmBG,OAAO,CAC3B8E,SAAWC,IACV,MAAME,EAAWF,EAASG,IAAI,YAC9B,GAAID,EAAU,CAEb,MAAMD,EAAQD,EAASG,IAAI,SAC3B,IAAI1C,GAAU,EACT2C,EAAAA,GAAeH,IAAUA,EAAQ,GAAK,IAC1CxC,GAAU,GAEXyC,EAASG,WAAW,UAAW5C,E,KAMlC3C,EAAE,aAAaG,OAAO,CAErBsH,UAAW,EACXC,aAAa,EACbzB,cAAc,EACd0B,UAAU,EAEV1C,SAAWC,IACV,MAAME,EAAWF,EAASG,IAAI,YAC9B,GAAID,EAAU,CACb,MAAMiB,EAAgCnB,EAASoB,UACzCC,EAAQrB,EAASG,IAAI,SACrBuC,EAAOvB,EAAKM,WAAW,QAEzBrB,EAAAA,GAAeiB,IAAUjB,EAAAA,GAAesC,KACvCC,EAAAA,GAAYtB,EAAQqB,EAAO,EAAG,IAAML,KAAKC,MAAMjB,EAAQqB,EAAO,GACjExC,EAASG,WAAW,WAAW,GAG/BH,EAASG,WAAW,WAAW,G,KAOpCvF,EAAE,gBAAgBG,OAAO,CACxB2H,SAAU,WAUX9H,EAAE,YAAYG,OAAO,CACpB4H,aAAa,EACbC,iBAAiB,EAEjBC,UAAW,GACXC,UAAW,GAEXrE,aAAa,EAEbsE,kBAAmB,OACnBC,kBAAmB,OACnBC,cAAe,QACfC,cAAe,QAEfC,oBAAqB,WAGtBvI,EAAE,oBAAoBG,OAAO,CAC5BqI,sBAAsB,IAGvBxI,EAAE,gBAAgBG,OAAO,CACxBsI,WAAW,IAGZzI,EAAE,mBAAoB,CAAC,SAAU,WAAWG,OAAO,CAClD2E,SAAU,WACVD,YAAY,EACZH,OAAOgE,EAAAA,EAAAA,IAAQ,IACf/D,QAAQ+D,EAAAA,EAAAA,IAAQ,IAChBC,YAAa,EACb5G,cAAe,EACfJ,eAAgB,EAChBF,eAAgB,EAChBC,eAAgB,EAChBF,eAAgB,EAChBH,YAAa,EACb8B,KAAM,WAGPnD,EAAE,cAAcG,OAAO,CACtByI,SAAS,EACTC,aAAc,IACdb,iBAAiB,IAGlBhI,EAAE,WAAY,CAAC,SAAU,WAAWG,OAAO,CAC1C2E,SAAU,WACV6D,YAAa,EACb5G,cAAe,EACf8C,YAAY,IAGb7E,EAAE,WAAY,CAAC,SAAU,SAASG,OAAO,CACxCwC,SAAS,EACTtB,YAAa,EACbyD,SAAU,WACV6D,YAAa,EACb5G,cAAe,EACf8C,YAAY,IAGb7E,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,WAAWG,OAAO,CACtE2I,KAAMA,CAACC,EAAcC,KACpB,MAAMC,EAASD,EAAOC,OACtB,GAAIA,EAAQ,CACX,MAAMC,EAAID,EAAOtE,SACXwE,EAAIF,EAAOvE,QACjBqE,EAAQK,OAAO,EAAGF,EAAI,GACtBH,EAAQM,OAAOF,EAAGD,EAAI,E,KAKzB,CACC,MAAMjJ,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,WAAW6B,OAAOC,OAAO,WAAY,CAAC,IACxGP,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAG9BK,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,SAASG,OAAO,CACpE2I,KAAMA,CAACC,EAAcC,KACpB,MAAMC,EAASD,EAAOC,OACtB,GAAIA,EAAQ,CACX,MAAMC,EAAID,EAAOtE,SACXwE,EAAIF,EAAOvE,QACjBqE,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAOF,EAAG,GAClBJ,EAAQM,OAAOF,EAAGD,GAClBH,EAAQM,OAAO,EAAGH,GAClBH,EAAQM,OAAO,EAAG,E,KAKrB,CACC,MAAMpJ,EAAOD,EAAE,WAAY,CAAC,OAAQ,SAAU,SAAU,SAAU,SAAS6B,OAAOC,OAAO,WAAY,CAAC,IACtGP,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAG9BK,EAAE,wBAAwBG,OAAO,CAChCmJ,QAAS,KAGVtJ,EAAE,uBAAuBG,OAAO,CAC/BmJ,QAAS,KAGVtJ,EAAE,uBAAuBG,OAAO,CAC/BmJ,QAAS,KAGVtJ,EAAE,eAAeG,OAAO,CACvB2E,SAAU,WACVD,YAAY,EACZH,OAAOgE,EAAAA,EAAAA,IAAQ,IACf/D,QAAQ+D,EAAAA,EAAAA,IAAQ,IAChBC,YAAa,EACb5G,cAAe,EACfJ,eAAgB,EAChBF,eAAgB,EAChBC,eAAgB,EAChBF,eAAgB,EAChBH,YAAa,EACb8B,KAAM,WAGPnD,EAAE,QAAQG,OAAO,CAChBuE,OAAOgE,EAAAA,EAAAA,IAAQ,IACf/D,QAAQ+D,EAAAA,EAAAA,IAAQ,MAGjB1I,EAAE,qBAAqBG,OAAO,CAC7BoJ,iBAAkB,MAClBC,iBAAkB,MAClBC,kBAAmB,OACnBC,kBAAmB,OACnBvB,kBAAmB,OACnBC,kBAAmB,OACnBC,cAAe,QACfC,cAAe,UAIhB,CACC,MAAMrI,EAAOD,EAAE,YAAa,CAAC,SAAU,cAAc6B,OAAOC,OAAO,eAAgB,CAAC,IACpFP,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,aAC3B4B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAG9B,CACC,MAAMM,EAAOD,EAAE,YAAa,CAAC,SAAU,cAAc6B,OAAOC,OAAO,eAAgB,CAAC,IACpFP,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,aAC3B4B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAI9BK,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQ6B,OAAOC,OAAO,eAAgB,CAAET,YAAa,IAC5FrB,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQ6B,OAAOC,OAAO,eAAgB,CAAET,YAAa,IAE5F,CACC,MAAMpB,EAAOD,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQ6B,OAAOC,OAAO,mBAAoB,CAAC,IAC/FP,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,aAC3B4B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAG9B,CACC,MAAMM,EAAOD,EAAE,YAAa,CAAC,SAAU,YAAa,QAAQ6B,OAAOC,OAAO,mBAAoB,CAAC,IAC/FP,EAAAA,EAAAA,GAAStB,EAAM,OAAQN,EAAI,aAC3B4B,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,W,CAMhBK,EAAE,mBAAoB,CAAC,cAE/BG,OAAO,CACX4B,cAAe,EACfV,YAAa,EACbsH,YAAa,EACbjE,MAAO,GACPC,OAAQ,KAIV,CACC,MAAM1E,EAAOD,EAAE,WAAY,CAAC,YAAa,SAAU,SAEnDC,EAAKE,OAAO,CACXwJ,aAAa,EACbtF,OAAO,EACPtC,cAAe,GACf+G,KAAOC,IACNA,EAAQK,OAAO,EAAG,IAClBL,EAAQM,OAAO,EAAG,MAElBN,EAAQK,OAAO,EAAG,IAClBL,EAAQM,OAAO,EAAG,MAElBN,EAAQK,OAAO,EAAG,IAClBL,EAAQM,OAAO,EAAG,KAAK,KAIzB9H,EAAAA,EAAAA,GAAStB,EAAM,SAAUN,EAAI,sB,CAG9BK,EAAE,SAAU,CAAC,cAAcG,OAAO,CACjCyJ,WAAW,EACXnJ,WAAY,EACZC,cAAe,IAGhBV,EAAE,SAAU,CAAC,YAAa,aAAaG,OAAO,CAC7C0J,SAAU,GACVjF,gBAAiB,YACjBlC,QAAS0B,EAAAA,KAGVpE,EAAE,SAAU,CAAC,YAAa,eAAeG,OAAO,CAC/CyE,gBAAiB,YACjBlC,QAAS0B,EAAAA,KAGVpE,EAAE,SAAU,CAAC,YAAa,WAAY,SAASG,OAAO,CACrDgC,QAASC,EAAAA,KAGVpC,EAAE,SAAU,CAAC,YAAa,WAAY,UAAUG,OAAO,CACtDgC,QAAS,IAGVnC,EAAE,SAAU,CAAC,YAAa,aAAc,QAAQG,OAAO,CACtDgC,QAAS,IAGVnC,EAAE,SAAU,CAAC,YAAa,aAAc,WAAWG,OAAO,CACzDgC,QAASC,EAAAA,IAGX,E,4FC1nBK,MAAO0H,UAAgBC,EAAAA,EAA7BC,WAAAA,G,oBAaCC,OAAAC,eAAA,c,gDAA6D,IAAIC,EAAAA,KAKjEF,OAAAC,eAAA,c,gDAA6D,IAAIC,EAAAA,KASjEF,OAAAC,eAAA,yB,gDAA8CtK,KAAKwK,eAAeC,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMoI,OAAQ5K,KAAKC,MAAM4K,oBAS5IR,OAAAC,eAAA,8B,gDAAmDtK,KAAKwK,eAAeC,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,GAAMoI,OAAQ5K,KAAKC,MAAM6K,sBAS/JT,OAAAC,eAAA,4B,gDAAiDtK,KAAKwK,eAAeC,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMoI,OAAQ5K,KAAKC,MAAM4K,oBAS/IR,OAAAC,eAAA,0B,gDAA+CtK,KAAK+K,sBAAsBN,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE8E,OAAQvC,EAAAA,GAAMoI,OAAQ5K,KAAKC,MAAM6K,sBAQrJT,OAAAC,eAAA,uB,gDAA4CtK,KAAK+K,sBAAsBN,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,GAAMwI,aAAa,OAazJX,OAAAC,eAAA,sB,gDAA2CtK,KAAKiL,eAAeR,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,QAS9H6H,OAAAC,eAAA,yB,gDAA8CtK,KAAKiL,eAAeR,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,QAQjI6H,OAAAC,eAAA,sB,gDAA2CtK,KAAKkL,cAAcT,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,GAAMyC,YAAY,OAQ/IoF,OAAAC,eAAA,yB,gDAA8CK,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,GAAMyC,YAAY,MASjHoF,OAAAC,eAAA,2B,gDAAgDtK,KAAK+K,sBAAsBN,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE8E,OAAQvC,EAAAA,GAAMoI,OAAQ5K,KAAKC,MAAM6K,sBAQtJT,OAAAC,eAAA,6B,gDAAkDtK,KAAKkL,cAAcT,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAC,MAQ9GoK,OAAAC,eAAA,sB,gDAAwCtK,KAAKmL,iBAAiBV,SAASC,KAAKU,EAAAA,EAAO1K,IAAIV,KAAKC,MAAO,CAClGoL,UAAW,CAAC,QACZC,KAAMC,EAAAA,EAAS7K,IAAIV,KAAKC,MAAO,CAC9BoL,UAAW,CAAC,SAAU,eAIxBhB,OAAAC,eAAA,mB,gDAA4B,CAAEkB,EAAG,EAAGC,EAAG,KAEvCpB,OAAAC,eAAA,iB,yDAEAD,OAAAC,eAAA,qB,yDAEAD,OAAAC,eAAA,oB,gDAAqD,CAAC,IAEtDD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,kB,yDAEAD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,kB,wDA42CD,CA12CWoB,SAAAA,GACT1L,KAAK2L,eAAejB,KAAK/K,EAAoBe,IAAIV,KAAKC,QAEtDH,MAAM4L,YAEN1L,KAAK4L,WAAWlB,KAAK1K,KAAK6L,OAC1B7L,KAAK4L,WAAWlB,KAAK1K,KAAK8L,OAE1B,MAAMC,EAAO/L,KAAKC,MAElB,IAAI4K,EAAiB7K,KAAKC,MAAM4K,eAEhC,MAAMmB,EAAgBhM,KAAKgM,cAC3BA,EAAcC,OAAOC,GAAG,SAAS,KAChClM,KAAKmM,SAAS,IAEfH,EAAcI,KAAK,GACnBJ,EAAc/J,OAAOoK,OAAO,WAAYC,IAAI,UAAW,GAEvDtM,KAAKwK,eAAe8B,IAAI,SAAUzB,GAElC,MAAMK,EAAgBlL,KAAKkL,cAC3BA,EAAcT,SAASC,KAAK1K,KAAKuM,iBAEjCvM,KAAK4L,WAAWlB,KAAK1K,KAAKwM,aAAaxM,KAAK6L,MAAO7L,KAAKyM,sBACxDzM,KAAK4L,WAAWlB,KAAK1K,KAAKwM,aAAaxM,KAAK8L,MAAO9L,KAAK0M,oBAGxDxB,EAAcT,SAASC,KAAK1K,KAAK2M,kBACjCzB,EAAcT,SAASC,KAAK1K,KAAK4M,kBAIjC1B,EAAcoB,IAAI,eAAe,GACjCpB,EAAcoB,IAAI,uBAAuB,GACzCpB,EAAcoB,IAAI,aAAcO,EAAAA,EAAUnM,IAAIqL,EAAM,CACnDV,UAAW,CAAC,iBAAkB,KAAM,iBAGrCrL,KAAK4L,WAAWlB,KAAKQ,EAAce,OAAOC,GAAG,eAAgBY,IAC5D9M,KAAK+M,gBAAgBD,EAAM,KAG5B9M,KAAK4L,WAAWlB,KAAKQ,EAAce,OAAOC,GAAG,mBAAoBY,IAChE9M,KAAKgN,cAAcF,EAAM,KAG1B9M,KAAK4L,WAAWlB,KAAKQ,EAAce,OAAOC,GAAG,qBAAsBY,IAClE9M,KAAKiN,gBAAgBH,EAAM,KAG5B9M,KAAKkN,YACLlN,KAAKmN,aACN,CAEOC,cAAAA,GACNtN,MAAMsN,kBAEFpN,KAAKqN,QAAQ,eAAiBrN,KAAKqN,QAAQ,eAAiBrN,KAAKyF,IAAI,SAAWzF,KAAKyF,IAAI,UAC5FzF,KAAKmN,aAGP,CAEUA,WAAAA,GACJnN,KAAKkL,cAAcoC,SAASC,cAChCvN,KAAKkL,cAAcoC,SAASC,eAAevN,KAAKyF,IAAI,eAAiBzF,KAAKyF,IAAI,eAAiBzF,KAAKyF,IAAI,SAAWzF,KAAKyF,IAAI,SAE9H,CAEUyH,SAAAA,GACTlN,KAAKwN,cAAclB,IAAI,eAAe,GACtCtM,KAAK2M,iBAAiBL,IAAI,eAAe,EAC1C,CAEUmB,aAAAA,CAAcC,GACvBA,EAAOC,WAEHD,EAAOE,SACVF,EAAOE,QAAQC,UAGZH,EAAOI,SACVJ,EAAOI,QAAQD,UAGhBH,EAAOpB,IAAI,gBAAY/E,GAEvB,MAAMwG,EAAQL,EAAOjI,IAAI,SACrBsI,IACH5H,EAAAA,GAAc4H,EAAML,OAAQA,GAC5BK,EAAMC,qBAEP,MAAMC,EAAQP,EAAOjI,IAAI,SACrBwI,IACH9H,EAAAA,GAAc8H,EAAMP,OAAQA,GAC5BO,EAAMD,qBAGP,MAAME,EAASlO,KAAKyF,IAAI,UACxB,GAAIyI,EAAQ,CACX,MAAMC,EAAeD,EAAOzI,IAAI,gBAC5B0I,GACHhI,EAAAA,GAAcgI,EAAcT,E,CAI9B5N,MAAM2N,cAAcC,EACrB,CASOU,WAAAA,CAAYtB,GAClB,MAAMuB,EAASrO,KAAKyF,IAAI,UAClB6I,EAAStO,KAAKyF,IAAI,UAClByF,EAAgBlL,KAAKkL,cAErBqD,EAAazB,EAAM0B,cAIzB,IAAIC,EAAAA,GAAoBF,EAAYvO,MAInC,OAHAuO,EAAWG,iBAMZ,MAAMC,EAAYzD,EAAc0D,QAAQ9B,EAAM+B,OACxC5N,EAAYjB,KAAKyF,IAAI,YAAa,IAElCqJ,EAASP,EAAWQ,OAAS,IAC7BC,EAAST,EAAWU,OAAS,IAE7BC,EAAqBlP,KAAKyF,IAAI,sBAC9B0J,EAAqBnP,KAAKyF,IAAI,sBAGpB,UAAX4I,GAAiC,WAAXA,GAAkC,GAAVW,GAClDhP,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,SAAU,CACtB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfP,EAAWuB,EAAK4I,YAAYV,EAAUnD,EAAIN,EAAcpG,SAElC,MAAtBoK,IACHhK,EAAWgK,GAGZ,IAAIlL,EAAeyC,EAAKhB,IAAI,eAAgB,GAExC6J,EAAW3H,KAAKV,IAAI,EAAIjD,EAAc2D,KAAK4H,KAAKvL,EAAcN,EAAQzC,GAAa0C,EAAMD,GAASsL,EAAS9J,IAC3GsK,EAAS7H,KAAK4H,KAAKvL,EAAc2D,KAAKV,IAAI,EAAIjD,EAAcL,EAAM1C,GAAa0C,EAAMD,GAASsL,GAAU,EAAI9J,KAC5G,GAAKsK,EAASF,GAAY7I,EAAKM,WAAW,gBAAiBjD,KAAY2C,EAAKhB,IAAI,eAAgB,IACnGzF,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAMnC,UAAXlB,GAAiC,WAAXA,GAAkC,GAAVQ,GAClD9O,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,SAAU,CACtB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfP,EAAWuB,EAAK4I,YAAYV,EAAUnD,EAAIN,EAAcpG,SAElC,MAAtBoK,IACHhK,EAAWgK,GAGZ,IAAIlL,EAAeyC,EAAKhB,IAAI,eAAgB,GAExC6J,EAAW3H,KAAKV,IAAI,EAAIjD,EAAc2D,KAAK4H,KAAKvL,EAAcN,EAAQzC,GAAa0C,EAAMD,GAASoL,EAAS5J,IAC3GsK,EAAS7H,KAAK4H,KAAKvL,EAAc2D,KAAKV,IAAI,EAAIjD,EAAcL,EAAM1C,GAAa0C,EAAMD,GAASoL,GAAU,EAAI5J,KAE5G,GAAKsK,EAASF,GAAY7I,EAAKM,WAAW,gBAAiBjD,KAAY2C,EAAKhB,IAAI,eAAgB,IACnGzF,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAOnC,UAAXnB,GAAiC,WAAXA,GAAkC,GAAVW,GAClDhP,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,SAAU,CACtB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfP,EAAWuB,EAAK4I,YAAYV,EAAUlD,EAAIP,EAAcnG,UAElC,MAAtBoK,IACHjK,EAAWiK,GAGZ,IAAInL,EAAeyC,EAAKhB,IAAI,eAAgB,GAExC6J,EAAW3H,KAAKV,IAAI,EAAIjD,EAAc2D,KAAK4H,KAAKvL,EAAcN,EAAQzC,GAAa0C,EAAMD,GAASsL,EAAS9J,IAC3GsK,EAAS7H,KAAK4H,KAAKvL,EAAc2D,KAAKV,IAAI,EAAIjD,EAAcL,EAAM1C,GAAa0C,EAAMD,GAASsL,GAAU,EAAI9J,KAE5G,GAAKsK,EAASF,GAAY7I,EAAKM,WAAW,gBAAiBjD,KAAY2C,EAAKhB,IAAI,eAAgB,IACnGzF,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAMnC,UAAXlB,GAAiC,WAAXA,GAAkC,GAAVQ,GAClD9O,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,SAAU,CACtB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfP,EAAWuB,EAAK4I,YAAYV,EAAUlD,EAAIP,EAAcnG,UAElC,MAAtBoK,IACHjK,EAAWiK,GAGZ,IAAInL,EAAeyC,EAAKhB,IAAI,eAAgB,GAExC6J,EAAW3H,KAAKV,IAAI,EAAIjD,EAAc2D,KAAK4H,KAAKvL,EAAcN,EAAQzC,GAAa0C,EAAMD,GAASoL,EAAS5J,IAC3GsK,EAAS7H,KAAK4H,KAAKvL,EAAc2D,KAAKV,IAAI,EAAIjD,EAAcL,EAAM1C,GAAa0C,EAAMD,GAASoL,GAAU,EAAI5J,KAE5G,GAAKsK,EAASF,GAAY7I,EAAKM,WAAW,gBAAiBjD,KAAY2C,EAAKhB,IAAI,eAAgB,IACnGzF,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAOnC,SAAXnB,GAAgC,UAAXA,GAAiC,GAAVW,GAChDhP,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfkK,EAAQ3P,KAAK4P,cAAcnJ,GAAQxF,GAAa0C,EAAMD,GAASsL,EAC/DM,EAAW5L,EAAQiM,EACnBH,EAAS7L,EAAMgM,EAEfE,EAAK7P,KAAK8P,UAAUR,EAAUE,GAClCF,EAAWO,EAAG,GACdL,EAASK,EAAG,GAEZ7P,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAKlC,SAAXlB,GAAgC,UAAXA,GAAiC,GAAVQ,GAChD9O,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfkK,EAAQ3P,KAAK4P,cAAcnJ,GAAQxF,GAAa0C,EAAMD,GAASoL,EAC/DQ,EAAW5L,EAAQiM,EACnBH,EAAS7L,EAAMgM,EAEfE,EAAK7P,KAAK8P,UAAUR,EAAUE,GAClCF,EAAWO,EAAG,GACdL,EAASK,EAAG,GAEZ7P,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAKlC,SAAXnB,GAAgC,UAAXA,GAAiC,GAAVW,GAChDhP,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfkK,EAAQ3P,KAAK4P,cAAcnJ,GAAQxF,GAAa0C,EAAMD,GAASsL,EAC/DM,EAAW5L,EAAQiM,EACnBH,EAAS7L,EAAMgM,EAEfE,EAAK7P,KAAK8P,UAAUR,EAAUE,GAClCF,EAAWO,EAAG,GACdL,EAASK,EAAG,GAEZ7P,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,KAKlC,SAAXlB,GAAgC,UAAXA,GAAiC,GAAVQ,GAChD9O,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrB,IAAI/B,EAAQ+C,EAAKhB,IAAI,SACjB9B,EAAM8C,EAAKhB,IAAI,OAEfkK,EAAQ3P,KAAK4P,cAAcnJ,GAAQxF,GAAa0C,EAAMD,GAASoL,EAC/DQ,EAAW5L,EAAQiM,EACnBH,EAAS7L,EAAMgM,EAEfE,EAAK7P,KAAK8P,UAAUR,EAAUE,GAClCF,EAAWO,EAAG,GACdL,EAASK,EAAG,GAEZ7P,KAAKyP,sBAAsBhJ,EAAKiJ,KAAKJ,EAAUE,G,IAInD,CAEUO,eAAAA,GACT,MAAM1B,EAASrO,KAAKyF,IAAI,UAClB6I,EAAStO,KAAKyF,IAAI,UAClByF,EAAgBlL,KAAKkL,cAEZ,SAAXmD,GAAgC,SAAXC,GACxBtO,KAAKgQ,SAAW9E,EAAce,OAAOC,GAAG,SAAUY,IACjD,MAAMyB,EAAazB,EAAM0B,eACT,SAAXH,GAAoD,GAA/B1G,KAAKsI,IAAI1B,EAAWU,SAA6B,SAAXX,GAAoD,GAA/B3G,KAAKsI,IAAI1B,EAAWQ,UACxG/O,KAAKoO,YAAYtB,E,IAInB9M,KAAK4L,WAAWlB,KAAK1K,KAAKgQ,WAGtBhQ,KAAKgQ,UACRhQ,KAAKgQ,SAASnC,SAGjB,CAEU+B,aAAAA,CAAcnJ,GACvB,IAAIyJ,EAAO,EAKX,OAJIzJ,EAAKhB,IAAI,YAAYA,IAAI,cAC5ByK,GAAQ,GAGFA,CACR,CAEUJ,SAAAA,CAAUpM,EAAeC,GAClC,MAAMwM,EAAOxM,EAAMD,EAUnB,OATIA,EAAQ,IAEXC,GADAD,EAAQ,GACMyM,GAEXxM,EAAM,IAETD,GADAC,EAAM,GACQwM,GAGR,CAACzM,EAAOC,EAChB,CAEUoJ,eAAAA,CAAgBD,GACzB,MAAM0B,EAAgB1B,EAAM0B,cAE5B,GAA4B,GAAxBA,EAAc4B,OACjB,OAED,MAAMlF,EAAgBlL,KAAKkL,cAC3B,IAAImF,EAAQnF,EAAc0D,QAAQ9B,EAAM+B,OAExC,GAAI7O,KAAKyF,IAAI,eAAiBzF,KAAKyF,IAAI,cAAe,CAGrD,GAFkB+I,EAAc8B,WAI3BlK,EAAAA,GAAa8E,EAAcqF,aAAaC,OAAS,EAAG,CACvD,MAAMzC,EAAQ/N,KAAK6L,MAAM4E,SAAS,GAC5BxC,EAAQjO,KAAK8L,MAAM2E,SAAS,GAG9B1C,IACH/N,KAAK0Q,YAAc3C,EAAMtI,IAAI,QAAS,GACtCzF,KAAK2Q,UAAY5C,EAAMtI,IAAI,MAAO,IAG/BwI,IACHjO,KAAK4Q,YAAc3C,EAAMxI,IAAI,QAAS,GACtCzF,KAAK6Q,UAAY5C,EAAMxI,IAAI,MAAO,G,EAMtC,IAAIzF,KAAKyF,IAAI,SAAWzF,KAAKyF,IAAI,UAE5B4K,EAAM7E,GAAK,GAAK6E,EAAM5E,GAAK,GAAK4E,EAAM7E,GAAKN,EAAcpG,SAAWuL,EAAM5E,GAAKzL,KAAK+E,SAAU,CAEjG/E,KAAK8Q,WAAa,CAAEtF,EAAGgD,EAAcuC,QAAStF,EAAG+C,EAAcwC,SAE/D,MAAMjQ,EAAOf,KAAKyF,IAAI,QAChBzE,EAAOhB,KAAKyF,IAAI,QAElB1E,GACHf,KAAK6L,MAAMuD,MAAM3I,IAChBA,EAAKwK,UAAYxK,EAAKhB,IAAI,SAC1BgB,EAAKyK,QAAUzK,EAAKhB,IAAI,MAAO,IAG7BzE,GACHhB,KAAK8L,MAAMsD,MAAM3I,IAChBA,EAAKwK,UAAYxK,EAAKhB,IAAI,SAC1BgB,EAAKyK,QAAUzK,EAAKhB,IAAI,MAAO,IAIjC,MAAM0L,EAAY,aACdnR,KAAKiM,OAAOmF,UAAUD,IACzBnR,KAAKiM,OAAOoF,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQvR,KAAMwO,cAAe1B,EAAM0B,e,CAI1F,CAEUiB,qBAAAA,CAAsB+B,GAC3BA,EACHA,EAAUvF,OAAOC,GAAG,WAAW,KAC9BlM,KAAKyR,yBAAyB,IAI/BzR,KAAKyR,yBAEP,CAEUA,uBAAAA,GACT,MAAMN,EAAY,aACdnR,KAAKiM,OAAOmF,UAAUD,IACzBnR,KAAKiM,OAAOoF,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQvR,MAE7D,CAEUgN,aAAAA,CAAcF,GACvB,MAAM4E,EAAY1R,KAAK8Q,WACvB,GAAIY,IACC1R,KAAKyF,IAAI,SAAWzF,KAAKyF,IAAI,SAAS,CACzC,GAAIqH,EAAM0B,cAAcuC,SAAWW,EAAUlG,GAAKsB,EAAM0B,cAAcwC,SAAWU,EAAUjG,EAAG,CAC7F,MAAM0F,EAAY,eACdnR,KAAKiM,OAAOmF,UAAUD,IACzBnR,KAAKiM,OAAOoF,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQvR,KAAMwO,cAAe1B,EAAM0B,e,CAIxF,MAAM2C,EAAY,WACdnR,KAAKiM,OAAOmF,UAAUD,IACzBnR,KAAKiM,OAAOoF,SAASF,EAAW,CAAEG,KAAMH,EAAWI,OAAQvR,KAAMwO,cAAe1B,EAAM0B,e,CAMzFxO,KAAK8Q,gBAAavJ,EAClBvH,KAAK6L,MAAMuD,MAAMrB,IAChBA,EAAM4D,YAAa,CAAK,IAEzB3R,KAAK8L,MAAMsD,MAAMnB,IAChBA,EAAM0D,YAAa,CAAK,GAE1B,CAEU1E,eAAAA,CAAgBH,GACzB,MAAM5B,EAAgBlL,KAAKkL,cAE3B,GAAIlL,KAAKyF,IAAI,eAAiBzF,KAAKyF,IAAI,cAAe,CACrD,MACM6K,EADaxD,EAAM0B,cACI8B,UAE7B,GAAIA,IACHtQ,KAAK4R,YAAYtB,GAAaxD,EAAM+B,MAEhCzI,EAAAA,GAAa8E,EAAcqF,aAAaC,OAAS,GAEpD,YADAxQ,KAAK6R,c,CAMR,IAAIH,EAAY1R,KAAK8Q,WAErB,GAAIY,EAAW,CAEdA,EAAYxG,EAAc0D,QAAQ5O,KAAKC,MAAM6R,oBAAoBJ,IACjE,IAAIrB,EAAQnF,EAAc0D,QAAQ9B,EAAM+B,OAExC,MAAM9N,EAAOf,KAAKyF,IAAI,QAChBzE,EAAOhB,KAAKyF,IAAI,QAEtB,GAAI1E,EAAM,CAET,IAAIgR,EAAa/R,KAAKyF,IAAI,cACtBsM,GACHA,EAAW9F,OAAO+F,YAAY,gBAG/BhS,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrBgB,EAAKkL,YAAa,EAElB,IAAIM,EAAWxL,EAAKwK,UAChBiB,EAASzL,EAAKyK,QAEdjC,GADciD,EAASD,IACAP,EAAUlG,EAAI6E,EAAM7E,GAAKN,EAAcpG,QAE9D2B,EAAKhB,IAAI,YAAYA,IAAI,cAC5BwJ,IAAW,GAEZ,IAAIvL,EAAQuO,EAAWhD,EACnBtL,EAAMuO,EAASjD,EAEftL,EAAMD,EAAQ,EAAkC,EAA9B+C,EAAKhB,IAAI,eAAgB,KAC9CgB,EAAK6F,IAAI,QAAS5I,GAClB+C,EAAK6F,IAAI,MAAO3I,G,KAIfoO,GACHA,EAAW9F,OAAOkG,WAAW,e,CAG/B,GAAInR,EAAM,CAET,IAAIoR,EAAapS,KAAKyF,IAAI,cACtB2M,GACHA,EAAWnG,OAAO+F,YAAY,gBAG/BhS,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAIA,EAAKhB,IAAI,QAAS,CACrBgB,EAAKkL,YAAa,EAGlB,IAAIM,EAAWxL,EAAKwK,UAChBiB,EAASzL,EAAKyK,QAEdnC,GADcmD,EAASD,IACAP,EAAUjG,EAAI4E,EAAM5E,GAAKP,EAAcnG,SAC9D0B,EAAKhB,IAAI,YAAYA,IAAI,cAC5BsJ,IAAW,GAEZ,IAAIrL,EAAQuO,EAAWlD,EACnBpL,EAAMuO,EAASnD,EAEfpL,EAAMD,EAAQ,EAAkC,EAA9B+C,EAAKhB,IAAI,eAAgB,KAC9CgB,EAAK6F,IAAI,QAAS5I,GAClB+C,EAAK6F,IAAI,MAAO3I,G,KAKfyO,GACHA,EAAWnG,OAAOkG,WAAW,e,EAMjC,CAEUN,YAAAA,GACT,MAAM3G,EAAgBlL,KAAKkL,cAC3B,IAAImH,EAAI,EACJC,EAA4B,GAC5BC,EAA4B,GAWhC,GATAnM,EAAAA,GAAa8E,EAAcqF,aAAa,CAACiC,EAAG3D,KAC3CyD,EAAWD,GAAKxD,EAChB,IAAI4D,EAAYzS,KAAK4R,YAAYY,GAC7BC,IACHF,EAAWF,GAAKI,GAEjBJ,GAAG,IAGAC,EAAW9B,OAAS,GAAK+B,EAAW/B,OAAS,EAAG,CACnD,MAAMjH,EAAI2B,EAAcpG,QAClBwE,EAAI4B,EAAcnG,SAExB,IAAI2N,EAAaJ,EAAW,GACxBK,EAAaL,EAAW,GAExBM,EAAaL,EAAW,GACxBM,EAAaN,EAAW,GAE5B,GAAIG,GAAcC,GAAcC,GAAcC,EAAY,CAQzD,GANAD,EAAa1H,EAAc0D,QAAQgE,GACnCC,EAAa3H,EAAc0D,QAAQiE,GAEnCH,EAAaxH,EAAc0D,QAAQ8D,GACnCC,EAAazH,EAAc0D,QAAQ+D,GAE/B3S,KAAKyF,IAAI,cAAe,CAC3B,MAAMqN,EAAa9S,KAAK0Q,YAClBqC,EAAW/S,KAAK2Q,UAEtB,GAAkB,MAAdmC,GAAkC,MAAZC,EAAkB,CAEvCL,EAAWlH,EAAImH,EAAWnH,KAC5BkH,EAAYC,GAAc,CAACA,EAAYD,IACvCE,EAAYC,GAAc,CAACA,EAAYD,IAGzC,IAAII,EAAWF,EAAcJ,EAAWlH,EAAIjC,GAAMwJ,EAAWD,GACzDG,EAAWH,EAAcH,EAAWnH,EAAIjC,GAAMwJ,EAAWD,GAEzDI,EAAWJ,EAAcF,EAAWpH,EAAIjC,GAAMwJ,EAAWD,GACzDK,EAAWL,EAAcD,EAAWrH,EAAIjC,GAAMwJ,EAAWD,GAMzDM,EAJkBzL,KAAK4H,IAAI,KAAO0D,EAAWD,GAC3BrL,KAAK4H,IAAI,KAAO4D,EAAWD,GAK7CG,EAAIP,EAAaM,EAAIJ,EAAWE,EAAWE,EAC3CE,EAAIP,EAAWK,EAAIH,EAAWE,EAAWC,EAE7CpT,KAAK6L,MAAMuD,MAAMrB,IAChB,IAAIwF,EAAKxF,EAAMsB,YAAYgE,GACvBG,EAAKzF,EAAMsB,YAAYiE,GAE3BvF,EAAM2B,KAAK6D,EAAIC,EAAI,EAAE,G,EAIxB,GAAIxT,KAAKyF,IAAI,cAAe,CAC3B,MAAMgO,EAAazT,KAAK4Q,YAClB8C,EAAW1T,KAAK6Q,UAEtB,GAAkB,MAAd4C,GAAkC,MAAZC,EAAkB,CAEvChB,EAAWjH,EAAIkH,EAAWlH,KAC5BiH,EAAYC,GAAc,CAACA,EAAYD,IACvCE,EAAYC,GAAc,CAACA,EAAYD,IAGzC,IAAII,EAAWS,GAAc,EAAIf,EAAWjH,EAAInC,IAAMoK,EAAWD,GAC7DR,EAAWQ,GAAc,EAAId,EAAWlH,EAAInC,IAAMoK,EAAWD,GAE7DP,EAAWO,GAAc,EAAIb,EAAWnH,EAAInC,IAAMoK,EAAWD,GAC7DN,EAAWM,GAAc,EAAIZ,EAAWpH,EAAInC,IAAMoK,EAAWD,GAK7DL,EAHkBzL,KAAK4H,IAAI,KAAO0D,EAAWD,GAC3BrL,KAAK4H,IAAI,KAAO4D,EAAWD,GAI7CG,EAAII,EAAaL,EAAIJ,EAAWE,EAAWE,EAC3CE,EAAII,EAAWN,EAAIH,EAAWE,EAAWC,EAE7CpT,KAAK8L,MAAMsD,MAAMnB,IAEhB,IAAIsF,EAAKtF,EAAMoB,YAAYgE,GACvBG,EAAKvF,EAAMoB,YAAYiE,GAE3BrF,EAAMyB,KAAK6D,EAAIC,EAAI,EAAE,G,IAM3B,CAEOG,qBAAAA,GACN,MAAMzF,EAASlO,KAAKyF,IAAI,UACxB,GAAIyI,EAAQ,CACX,MAAM0F,EAAc1F,EAAOnH,WAAW,SAEtC,IAAIoH,EAAeD,EAAOzI,IAAI,gBAM9B,GAJIyI,EAAO4C,aACV3C,OAAe5G,GAGZ4G,GAAgByF,EAAa,CAChC,MAAMzQ,EAAiB+K,EAAOzI,IAAI,kBAC5BoO,EAAgD,GACtD1N,EAAAA,GAAYgI,GAAeT,IAC1B,IAAKA,EAAOoG,aAAepG,EAAOqG,WACjC,GAAsB,MAAlB5Q,GAA4C,MAAlBA,EAAwB,CACrD,MAAM6Q,EAAatG,EAAOsG,aACpBC,EAAWvG,EAAOuG,WACxB,IAAK,IAAI5B,EAAI2B,EAAY3B,EAAI4B,EAAU5B,IAAK,CAC3C,MAAM/M,EAAWoI,EAAOmG,UAAUxB,GAC9B/M,IAAaA,EAASwO,YACzBD,EAAUnJ,KAAKpF,E,MAIb,CACJ,MAAM4O,EAAkBxG,EAAOjI,IAAI,mBAC/ByO,GACHL,EAAUnJ,KAAKwJ,E,KAMnB,IACIC,EADAC,EAActQ,IA+BlB,GA5BAqC,EAAAA,GAAY0N,GAAYvO,IACvB,MAAMuJ,EAAQvJ,EAASG,IAAI,SAE3B,GAAIoJ,EAAO,CACV,IAAIwF,EAAW,EAEdA,EADqB,KAAlBlR,GAA2C,MAAlBA,EACjBwE,KAAKsI,IAAI2D,EAAYpI,EAAIqD,EAAMrD,GAEhB,KAAlBrI,GAA2C,MAAlBA,EACtBwE,KAAKsI,IAAI2D,EAAYnI,EAAIoD,EAAMpD,GAG/B9D,KAAK2M,MAAMV,EAAYpI,EAAIqD,EAAMrD,EAAGoI,EAAYnI,EAAIoD,EAAMpD,GAElE4I,EAAWD,IACdA,EAAcC,EACdF,EAAc7O,E,KAKjBa,EAAAA,GAAYgI,GAAeT,IAC1B,MAAM6G,EAAU7G,EAAOjI,IAAI,WACvB8O,GACHA,EAAQC,kBAAajN,E,IAInB4M,EAAa,CAChB,IAAIzG,EAASyG,EAAYzN,UACzBgH,EAAO+G,oBAAoBN,GAC3BzG,EAAOgH,OAAO,kBAAmBP,GAEjC,MAAMtF,EAAQsF,EAAY1O,IAAI,SAC1BoJ,GAGHX,EAAOyG,WAAWjH,EAAOkH,SAAS,CAAEpJ,EAAGqD,EAAMrD,EAAIkC,EAAOlC,IAAKC,EAAGoD,EAAMpD,EAAIiC,EAAOjC,OAAQ,E,GAK9F,CAEOoJ,aAAAA,GACN,IAAI3G,EAASlO,KAAKyF,IAAI,UAClByI,GACHA,EAAO4G,cAET,CAEUC,UAAAA,CAAW7G,GACpBlO,KAAKkL,cAAcT,SAASC,KAAKwD,EAClC,CAEO8G,gBAAAA,GAWN,GAVAlV,MAAMkV,mBAENhV,KAAK0N,OAAO0B,MAAM1B,IACjB1N,KAAKiV,UAAUvH,EAAO,KAGnB1N,KAAKqN,QAAQ,WAAarN,KAAKqN,QAAQ,YAC1CrN,KAAK+P,kBAGF/P,KAAKqN,QAAQ,UAAW,CAC3B,MAAM6H,EAAWlV,KAAKmV,cAAcjH,OAC9BA,EAASlO,KAAKyF,IAAI,UACpByI,IAAWgH,IACdlV,KAAKoV,iBAAiB,UAClBF,GACHA,EAASrH,UAENK,IACHA,EAAOmH,UAAUrV,MACjBA,KAAK+U,WAAW7G,GAEhBlO,KAAKsV,sBAAsB,SAAUpH,EAAOjC,OAAOC,GAAG,eAAe,KACpElM,KAAKuV,wBAAwB,MAK/BvV,KAAKmV,cAAcjH,OAASA,E,CAI9B,GAAIlO,KAAKqN,QAAQ,cAAe,CAC/B,MAAM6H,EAAWlV,KAAKmV,cAAcpD,WAC9BA,EAAa/R,KAAKyF,IAAI,cACxBsM,IAAemD,IAClBlV,KAAKoV,iBAAiB,cAClBF,GACHA,EAASrH,UAENkE,IACEA,EAAW1I,QACfrJ,KAAKwV,iBAAiB/K,SAASC,KAAKqH,GAGrC/R,KAAKsV,sBAAsB,aAAcvD,EAAW9F,OAAOC,GAAG,gBAAiBoH,IAC9EtT,KAAKyV,iBAAiBzV,KAAK6L,MAAOyH,EAAE5P,MAAO4P,EAAE3P,IAAK2P,EAAEoC,KAAK,KAG1D1V,KAAKsV,sBAAsB,aAAcvD,EAAW9F,OAAOC,GAAG,YAAY,KACzElM,KAAK6L,MAAMuD,MAAM3I,IACZA,EAAKhB,IAAI,aACZzF,KAAK2V,qBAAqBlP,E,GAE1B,KAIHsL,EAAWpM,WAAW,wBAAyBT,IAC9C,MAAMuB,EAAOzG,KAAK6L,MAAM4E,SAAS,GACjC,OAAOhK,GAAOA,EAAKmP,eAAe1Q,GAAU,IAAe,EAAE,KAK/DlF,KAAKmV,cAAcpD,WAAaA,E,CAIlC,GAAI/R,KAAKqN,QAAQ,cAAe,CAC/B,MAAM6H,EAAWlV,KAAKmV,cAAc/C,WAC9BA,EAAapS,KAAKyF,IAAI,cACxB2M,IAAe8C,IAClBlV,KAAKoV,iBAAiB,cAClBF,GACHA,EAASrH,UAENuE,IACEA,EAAW/I,QACfrJ,KAAK6V,mBAAmBpL,SAASC,KAAK0H,GAGvCpS,KAAKsV,sBAAsB,aAAclD,EAAWnG,OAAOC,GAAG,gBAAiBoH,IAC9EtT,KAAKyV,iBAAiBzV,KAAK8L,MAAOwH,EAAE5P,MAAO4P,EAAE3P,IAAK2P,EAAEoC,KAAK,KAG1D1V,KAAKsV,sBAAsB,aAAclD,EAAWnG,OAAOC,GAAG,YAAY,KACzElM,KAAK8L,MAAMsD,MAAM3I,IACZA,EAAKhB,IAAI,aACZzF,KAAK2V,qBAAqBlP,E,GAE1B,KAIH2L,EAAWzM,WAAW,wBAAyBT,IAC9C,MAAMuB,EAAOzG,KAAK8L,MAAM2E,SAAS,GACjC,OAAOhK,GAAOA,EAAKmP,eAAe1Q,GAAU,IAAe,EAAE,KAI/DlF,KAAKmV,cAAc/C,WAAaA,E,CAIlCpS,KAAK8V,gBACN,CAEUC,cAAAA,CAAerI,GACxB5N,MAAMiW,eAAerI,GAErB,MAAMK,EAAQL,EAAOjI,IAAI,SACnBwI,EAAQP,EAAOjI,IAAI,SAEzBU,EAAAA,GAAY4H,EAAML,OAAQA,GAC1BvH,EAAAA,GAAY8H,EAAMP,OAAQA,GAE1BA,EAAOE,QAAUF,EAAOsI,YAAYjI,EAAM9B,OAAOC,GAAG,mBAAmB,KACtEwB,EAAOuI,cAAc,KAGtBvI,EAAOE,QAAUF,EAAOsI,YAAY/H,EAAMhC,OAAOC,GAAG,mBAAmB,KACtEwB,EAAOuI,cAAc,KAGjBvI,EAAOjI,IAAI,cACXwI,EAAMiI,OAA0B,iBAAmBjI,EAAMiI,OAAsB,YAClFxI,EAAOpB,IAAI,WAAY2B,GAGvBP,EAAOpB,IAAI,WAAYyB,IAIrBL,EAAOjI,IAAI,aACdiI,EAAOyI,cAAc,WACrBhQ,EAAAA,GAAYuH,EAAOmG,WAAYvO,IAC9BA,EAASgH,IAAI,oBAAgB/E,GAC7BjC,EAASgH,IAAI,oBAAgB/E,EAAU,KAGzCmG,EAAO0I,iBACPnI,EAAMD,oBACND,EAAMC,oBACND,EAAMsI,cAAe,EACrBpI,EAAMoI,cAAe,EAErBrW,KAAKiV,UAAUvH,EAChB,CAEUuH,SAAAA,CAAUvH,GACnB,MAAM4I,EAAWtW,KAAKyF,IAAI,UAC1B,GAAI6Q,GACuB,MAAtB5I,EAAOjI,IAAI,QAAiB,CAC/B,MAAM8Q,EAAQD,EAASE,OAEvB9I,EAAO+I,SAAS,SAAUF,GAC1B7I,EAAO+I,SAAS,OAAQF,E,CAG1B,MAAMG,EAAa1W,KAAKyF,IAAI,YAC5B,GAAIiR,GAC8B,MAA7BhJ,EAAOjI,IAAI,eAAwB,CACtC,MAAMkR,EAAUD,EAAWF,OAE3B9I,EAAO+I,SAAS,cAAeE,E,CAGlC,CAEUpB,sBAAAA,GACT,MAAMrH,EAASlO,KAAKyF,IAAI,UAClBzC,EAAWkL,EAAOzI,IAAI,YAEtBmR,EAAgB1I,EAAOnH,WAAW,gBAAiB,GACnD8P,EAAgB3I,EAAOnH,WAAW,gBAAiB,GAEnD+P,EAAYnP,KAAKV,IAAI,EAAGU,KAAK4H,IAAI,EAAGrB,EAAOnH,WAAW,YAAa,MACnEgQ,EAAYpP,KAAKV,IAAI,EAAGU,KAAK4H,IAAI,EAAGrB,EAAOnH,WAAW,YAAa,MAEzE/G,KAAK6L,MAAMuD,MAAM3I,IAChB,GAAiB,UAAbzD,GAAqC,WAAbA,EAAuB,CAClD,IAAIgU,EAAYvQ,EAAKwQ,eAAeL,GAChCM,EAAYzQ,EAAKwQ,eAAeH,GACpCrQ,EAAKiJ,KAAKsH,EAAWE,E,CAEtBzQ,EAAKd,WAAW,mBAAmB,EAAK,IAGzC3F,KAAK8L,MAAMsD,MAAM3I,IAChB,GAAiB,UAAbzD,GAAqC,WAAbA,EAAuB,CAClD,IAAIgU,EAAYvQ,EAAKwQ,eAAeJ,GAChCK,EAAYzQ,EAAKwQ,eAAeF,GACpCtQ,EAAKiJ,KAAKsH,EAAWE,E,CAEtBzQ,EAAKd,WAAW,mBAAmB,EAAK,GAE1C,CAEU8P,gBAAAA,CAAiB0B,EAAkCzT,EAAeC,EAAayT,GAExFD,EAAK/H,MAAM3I,IAEV,IAAI4Q,EAAY5Q,EAAK4I,YAAY3L,GAC7B4T,EAAU7Q,EAAK4I,YAAY1L,GAE3B4T,EAAgB9Q,EAAKiJ,KAAK2H,EAAWC,OAAS/P,EAAW6P,GAE7D,MAAMI,EAAkB,kBACxB/Q,EAAKgR,cAAcD,GAAiB,GAEhCD,EACHA,EAActL,OAAOC,GAAG,WAAW,KAClCzF,EAAKgR,cAAcD,GAAiB,EAAK,IAI1C/Q,EAAKgR,cAAcD,GAAiB,E,GAGvC,CAGUhL,YAAAA,CAAqC2K,EAAgCO,GAC9E,OAAOP,EAAKlL,OAAO0L,OAAOC,IACzB,GAAoB,UAAhBA,EAAOtG,KACVnL,EAAAA,GAAYyR,EAAOC,WAAYpR,IAC9BzG,KAAK8X,YAAYrR,EAAK,SAEjB,GAAoB,SAAhBmR,EAAOtG,KACjBoG,EAAUjN,SAASC,KAAKkN,EAAOG,UAC/BH,EAAOG,SAASC,aAAahY,WACvB,GAAoB,aAAhB4X,EAAOtG,KACjBoG,EAAUjN,SAASwN,SAASL,EAAOrS,MAAOqS,EAAOG,UACjDH,EAAOG,SAASC,aAAahY,WACvB,GAAoB,gBAAhB4X,EAAOtG,KACjBoG,EAAUjN,SAASyN,YAAYN,EAAOrS,MAAOqS,EAAOG,UACpDH,EAAOG,SAASC,aAAahY,WACvB,GAAoB,gBAAhB4X,EAAOtG,KACjBtR,KAAK8X,YAAYF,EAAOO,cAClB,IAAoB,cAAhBP,EAAOtG,KAIjB,MAAM,IAAI8G,MAAM,2BAHhBV,EAAUjN,SAAS4N,UAAUT,EAAOjR,MAAOiR,EAAOU,UAClDV,EAAOjR,MAAMqR,aAAahY,K,IAK7B,CAEU8X,WAAAA,CAAYrR,GACrB,IAAKA,EAAK8R,aAAc,CACvB,MAAMC,EAAa/R,EAAK4C,OACpBmP,GACHA,EAAW/N,SAASgO,YAAYhS,GAGjC,MAAM+G,EAAgB/G,EAAK+G,cACrBkL,EAAalL,EAAcnE,OAC7BqP,GACHA,EAAWjO,SAASgO,YAAYjL,GAGjC,MAAMb,EAAmBlG,EAAKkG,iBACxBgM,EAAgBhM,EAAiBtD,OACnCsP,GACHA,EAAclO,SAASgO,YAAY9L,E,CAGtC,CAEOiM,kBAAAA,GACN,MAAMC,EAAO7Y,KAAK0M,kBAAkB5H,QAC9BgU,EAAQ9Y,KAAK6V,mBAAmB/Q,QAEhC2H,EAAsBzM,KAAKyM,oBACjCA,EAAoBH,IAAI,cAAeuM,GACvCpM,EAAoBH,IAAI,eAAgBwM,GAExC,MAAMtD,EAAmBxV,KAAKwV,iBAC9BA,EAAiBlJ,IAAI,cAAeuM,GACpCrD,EAAiBlJ,IAAI,eAAgBwM,EACtC,CAKOC,WAAAA,CAAYtS,GACLzG,KAAKyF,IAAI,YAErBzF,KAAKgW,YAAYvP,EAAKyF,GAAG,SAAS,KACjClM,KAAK6U,eAAe,KAGrB7U,KAAKgW,YAAYvP,EAAKyF,GAAG,OAAO,KAC/BlM,KAAK6U,eAAe,KAGvB,CAGOc,oBAAAA,CAAqBlP,EAAiBuS,GAE5C,IAAItV,EAAQ+C,EAAK4I,YAAY5I,EAAKhB,IAAI,QAAS,IAC3C9B,EAAM8C,EAAK4I,YAAY5I,EAAKhB,IAAI,MAAO,IAM3C,GAJI/B,EAAQC,KACVD,EAAOC,GAAO,CAACA,EAAKD,KAGW,GAA7B1D,KAAK6L,MAAMoN,QAAQxS,IACtB,GAAIuS,GAASvS,EAAKM,WAAW,mBAAoB,CAChD,IAAIgL,EAAa/R,KAAKyF,IAAI,eAEtBsM,GAAgBA,EAAWhL,WAAW,YAAaiS,IACtDjH,EAAW2C,OAAO,QAAShR,GAC3BqO,EAAW2C,OAAO,MAAO/Q,GACzBoO,EAAWmH,c,OAIT,IAAiC,GAA7BlZ,KAAK8L,MAAMmN,QAAQxS,KACvBuS,GAASvS,EAAKM,WAAW,oBAAoB,CAChD,IAAIqL,EAAapS,KAAKyF,IAAI,eAEtB2M,GAAgBA,EAAWrL,WAAW,YAAaiS,IACtD5G,EAAWsC,OAAO,QAAShR,GAC3B0O,EAAWsC,OAAO,MAAO/Q,GACzByO,EAAW8G,c,CAKdlZ,KAAK8V,gBACN,CAEUA,cAAAA,GACT,IAAI9J,EAAgBhM,KAAKgM,cACzB,GAAIA,GAAiBA,EAAc3C,OAAQ,CAC1C,IAAItG,GAAU,EACd/C,KAAK6L,MAAMuD,MAAM3I,IAC4B,GAAxCwB,EAAAA,GAAYxB,EAAKhB,IAAI,QAAS,GAAI,IAAiD,GAAtCwC,EAAAA,GAAYxB,EAAKhB,IAAI,MAAO,GAAI,KAChF1C,GAAU,E,IAGZ/C,KAAK8L,MAAMsD,MAAM3I,IAC4B,GAAxCwB,EAAAA,GAAYxB,EAAKhB,IAAI,QAAS,GAAI,IAAiD,GAAtCwC,EAAAA,GAAYxB,EAAKhB,IAAI,MAAO,GAAI,KAChF1C,GAAU,E,IAIRA,EACCiJ,EAAc8H,YACjB9H,EAAcmN,OAIfnN,EAAcI,M,CAGjB,CAQOgN,MAAAA,CAAOvK,GACb,MAAM3D,EAAgBlL,KAAKkL,cACrBmO,EAAcrZ,KAAK+G,WAAW,cAAe/G,KAAKsZ,cAClDC,EAASrO,EAAc0J,SAAS/F,GAEtC,GAAIA,EAAMrD,IAAM,IAAOqD,EAAMpD,IAAM,IAAOoD,EAAMrD,GAAKN,EAAcpG,QAAU,IAAO+J,EAAMpD,GAAKP,EAAcnG,SAAW,GACvH,OAAO,EAER,GAAIsU,EAEH,IAAK,IAAIhH,EAAIgH,EAAY7I,OAAS,EAAG6B,GAAK,EAAGA,IAAK,CACjD,MAAMmH,EAAQH,EAAYhH,GAE1B,GAAImH,GAASxZ,KAAM,CAClB,MAAMyZ,EAAqBD,EAAMtO,cAC3BwO,EAAgB1Z,KAAKC,MAAM0Z,oBAAoBJ,GAC/CK,EAAYJ,EAAMvZ,MAAM6R,oBAAoB4H,GAC5CrJ,EAAQoJ,EAAmB7K,QAAQgL,GACzC,GAAIvJ,EAAM7E,IAAM,IAAO6E,EAAM5E,IAAM,IAAO4E,EAAM7E,GAAKiO,EAAmB3U,QAAU,IAAOuL,EAAM5E,GAAKgO,EAAmB1U,SAAW,GACjI,OAAO,C,EAMX,OAAO,CACR,CAKO7D,eAAAA,GACN,MAAMgK,EAAgBlL,KAAKkL,cAErB3B,EAAI2B,EAAcpG,QAClBwE,EAAI4B,EAAcnG,SAElB8U,EAAK7Z,KAAK+E,SAEhB,IAAI+U,EAAQ5O,EAAcoC,SAASsH,SAAS,CAAEpJ,EAAG,EAAGC,EAAG,IACnDsO,EAAQ7O,EAAcoC,SAASsH,SAAS,CAAEpJ,EAAGjC,EAAGkC,EAAGnC,IAEvD,MAAM0Q,EAA2B,GACjC,IAMIC,EACAC,EAPAC,EAAM,EAEN/F,EAActQ,IACd2O,EAAYzS,KAAKoa,WACjBC,EAAqBra,KAAKyF,IAAI,sBAC9B6U,EAAuBta,KAAKyF,IAAI,uBAAwB,MAIxDC,EAAAA,GAAe2U,IAClBra,KAAK0N,OAAO0B,MAAM1B,IACjB,IAAKA,EAAOoG,WAAY,CACvB,MAAMS,EAAU7G,EAAOjI,IAAI,WAC3B,GAAI8O,EAAS,CACZ,IAAI1F,EAAQ0F,EAAQ9O,IAAI,WACxB,GAAIoJ,EAAO,CACV,IAAIwF,EAAW1M,KAAK2M,MAAM7B,EAAUjH,EAAIqD,EAAMrD,EAAGiH,EAAUhH,EAAIoD,EAAMpD,GACzC,KAAxB6O,EACHjG,EAAW1M,KAAKsI,IAAIwC,EAAUjH,EAAIqD,EAAMrD,GAER,KAAxB8O,IACRjG,EAAW1M,KAAKsI,IAAIwC,EAAUhH,EAAIoD,EAAMpD,IAGrC4I,EAAWD,IACdA,EAAcC,EACd4F,EAAUvM,EACVwM,EAAerL,E,OAOrB,MAAM0L,EAAiC,GAyDvC,GAvDAva,KAAK0N,OAAO0B,MAAM1B,IACjB,MAAM6G,EAAU7G,EAAOjI,IAAI,WAE3B,GAAI8O,IAAYA,EAAQ9O,IAAI,eAAgB,CAC3C,IAAI+U,GAAS,EACT3L,EAAQ0F,EAAQ9O,IAAI,WACxB,GAAIoJ,EAAO,CACV,GAAIwL,GAAsB,EAAG,CAC5B,IAAIxL,EAAQ0F,EAAQ9O,IAAI,WACxB,GAAIoJ,GAASqL,GACRxM,GAAUuM,EAAS,CACtB,IAAI5F,EAAW1M,KAAK2M,MAAM4F,EAAa1O,EAAIqD,EAAMrD,EAAG0O,EAAazO,EAAIoD,EAAMpD,GAC/C,KAAxB6O,EACHjG,EAAW1M,KAAKsI,IAAIiK,EAAa1O,EAAIqD,EAAMrD,GAEX,KAAxB8O,IACRjG,EAAW1M,KAAKsI,IAAIiK,EAAazO,EAAIoD,EAAMpD,IAGxC4I,EAAWgG,IACdG,GAAS,E,OAKmB,GAAvBH,GACJ3M,GAAUuM,IACbO,GAAS,GAINxa,KAAKoZ,OAAOpZ,KAAKya,gBAAgB5L,KAAY0F,EAAQjP,SAIpDkV,IACJL,GAAOtL,EAAMpD,GAJd+O,GAAS,EAQNA,GAAU9M,EAAOoG,YAAcpG,EAAOqG,WACzCQ,EAAQnI,KAAK,IAGbmI,EAAQ4E,OACRa,EAAStP,KAAK6J,GAEdgG,EAAc7P,KAAKgD,G,MAMvB1N,KAAK2F,WAAW,gBAAiB4U,GAE7Bva,KAAKyF,IAAI,mBAAoB,CAEhC,MAAMiV,EAAmB1a,KAAKC,MAAMya,iBAE9B5U,EAAQkU,EAASxJ,OAGvB,GAFgB2J,EAAMrU,EAERwD,EAAI,EAAIwQ,EAAMrO,EAAG,CAC9BuO,EAASW,MAAK,CAACC,EAAGC,IAAMC,EAAAA,GAAqBD,EAAEpV,IAAI,WAAYgG,EAAGmP,EAAEnV,IAAI,WAAYgG,KAEpF,IAAIsP,EAAQhB,EAAMtO,EAiBlB,GAfAtF,EAAAA,GAAY6T,GAAWzF,IACtB,IAAIxP,EAASwP,EAAQxP,SACjBxC,EAAUgS,EAAQ9O,IAAI,WACtBlD,aAAmByY,EAAAA,KACtBjW,GAAUxC,EAAQoE,OAEnB5B,GAAUwP,EAAQ9O,IAAI,eAAgB,GAEtC8O,EAAQjI,IAAI,SAAU,CAAEuM,KAAMiB,EAAMtO,EAAGyP,IAAKnB,EAAMrO,EAAGqN,MAAOiB,EAAMvO,EAAG0P,OAAQH,IAC7ExG,EAAQ5O,WAAW,aAAc,CAAEkT,KAAMiB,EAAMtO,EAAGyP,IAAKnB,EAAMrO,EAAGqN,MAAOiB,EAAMvO,EAAG0P,OAAQH,IACxFA,EAAQpT,KAAKV,IAAI8T,EAAQhW,EAAQwP,EAAQ4G,IAAMpW,GAC3CwP,EAAQlL,QAAUqR,GACrBA,EAAiBjQ,SAAS4N,UAAU9D,EAAS,E,IAG3CwG,EAAQ,EAAG,CAEdf,EAASoB,UACT,IAAIC,EAAaN,EAEjB5U,EAAAA,GAAY6T,GAAWzF,IACtB,IAAI+G,EAAS/G,EAAQ9O,IAAI,UACzB,GAAI6V,EAAQ,CACX,IAAIL,EAAMK,EAAOL,IAAMF,EACnBG,EAASI,EAAOJ,OAASH,EACzBE,EAAMI,IACTJ,EAAMI,EACNH,EAASD,EAAM1G,EAAQxP,UAExBwP,EAAQjI,IAAI,SAAU,CAAEuM,KAAMyC,EAAOzC,KAAMoC,IAAKA,EAAKnC,MAAOwC,EAAOxC,MAAOoC,OAAQA,IAClFG,EAAaC,EAAOJ,OAASH,EAAQxG,EAAQ9O,IAAI,eAAgB,E,UAKhE,CACJuU,EAASoB,UACTpB,EAASW,MAAK,CAACC,EAAGC,IAAMC,EAAAA,GAAqBF,EAAEnV,IAAI,WAAYgG,EAAGoP,EAAEpV,IAAI,WAAYgG,KAEpF,IAAIsP,EAAQ,EAgBZ,GAfA5U,EAAAA,GAAY6T,GAAWzF,IACtB,IAAIxP,EAASwP,EAAQxP,SACjBxC,EAAUgS,EAAQ9O,IAAI,WACtBlD,aAAmByY,EAAAA,KACtBjW,GAAUxC,EAAQoE,OAEnB5B,GAAUwP,EAAQ9O,IAAI,eAAgB,GAEtC8O,EAAQjI,IAAI,SAAU,CAAEuM,KAAMiB,EAAMtO,EAAGyP,IAAKF,EAAOjC,MAAOiB,EAAMvO,EAAG0P,OAAQvT,KAAK4H,IAAIuK,EAAMrO,EAAIoO,EAAIkB,EAAQhW,KACtGwP,EAAQlL,QAAUqR,GACrBA,EAAiBjQ,SAAS4N,UAAU9D,EAAS,GAE9CwG,EAAQpT,KAAK4H,IAAIwL,EAAQhW,EAAQwP,EAAQ4G,IAAMpW,EAAO,IAGnDgW,EAAQlB,EAAI,CACfG,EAASoB,UACT,IAAIC,EAAaxB,EAEjB1T,EAAAA,GAAY6T,GAAWzF,IACtB,IAAI+G,EAAS/G,EAAQ9O,IAAI,UACzB,GAAI6V,EAAQ,CACX,IAAIL,EAAMK,EAAOL,KAAOpB,EAAKkB,GACzBG,EAASI,EAAOJ,QAAUrB,EAAKkB,GAC/BG,EAASG,IACZH,EAASG,EACTJ,EAAMC,EAAS3G,EAAQxP,UAExBwP,EAAQjI,IAAI,SAAU,CAAEuM,KAAMyC,EAAOzC,KAAMoC,IAAKA,EAAKnC,MAAOwC,EAAOxC,MAAOoC,OAAQA,IAClFG,EAAaH,EAAS3G,EAAQxP,SAAWwP,EAAQ9O,IAAI,eAAgB,E,OAM3E,CAEUgV,eAAAA,CAAgB5L,GACzB,OAAO7O,KAAKkL,cAAc0D,QAAQC,EACnC,CAKO1C,OAAAA,GACNnM,KAAK6L,MAAMuD,MAAM3I,IAChBA,EAAKd,WAAW,mBAAmB,GACnCc,EAAKiJ,KAAK,EAAG,EAAE,IAGhB1P,KAAK8L,MAAMsD,MAAM3I,IAChBA,EAAKd,WAAW,mBAAmB,GACnCc,EAAKiJ,KAAK,EAAG,EAAE,GAEjB,CAEU6L,QAAAA,GACTzb,MAAMyb,WAIN,MAAMrN,EAASlO,KAAKyF,IAAI,UACpByI,GACHA,EAAOL,SAET,EAx/CAxD,OAAAC,eAAAJ,EAAA,a,gDAAkC,YAClCG,OAAAC,eAAAJ,EAAA,c,gDAA0CC,EAAAA,EAAYqR,WAAWC,OAAO,CAACvR,EAAQwR,a,8HCqB5E,MAAgBC,UAAqCC,EAAAA,EAA3DxR,WAAAA,G,oBAWCC,OAAAC,eAAA,gB,gDAAgD,KAEhDD,OAAAC,eAAA,mB,iDAA6B,IAK7BD,OAAAC,eAAA,uB,gDAAqE,KAOrED,OAAAC,eAAA,wB,gDAA6CtK,KAAKyK,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAC,MAO3FoK,OAAAC,eAAA,sB,gDAA2CK,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,OAO5F6H,OAAAC,eAAA,yB,gDAA8CK,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,OAO/F6H,OAAAC,eAAA,yB,gDAA8CtK,KAAKyK,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAEgF,YAAY,EAAOH,MAAOtC,EAAAA,GAAMuC,OAAQvC,EAAAA,GAAM0C,SAAU,gBAKrJmF,OAAAC,eAAA,c,yDAEAD,OAAAC,eAAA,qB,iDAAkC,IAElCD,OAAAC,eAAA,kB,gDAA2B,IAC3BD,OAAAC,eAAA,gB,gDAAyB,IAEzBD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,oB,yDAEAD,OAAAC,eAAA,kB,iDAA4B,IAQ5BD,OAAAC,eAAA,mB,gDAAwE,IAAIuR,EAAAA,KAE5ExR,OAAAC,eAAA,0B,gDAAuE,KAQvED,OAAAC,eAAA,mB,yDAEAD,OAAAC,eAAA,wB,iDAAqC,IAErCD,OAAAC,eAAA,sB,yDAEAD,OAAAC,eAAA,2B,iDAA4B,IAE5BD,OAAAC,eAAA,qB,iDAAsB,IAStBD,OAAAC,eAAA,mB,gDAA+BtK,KAAKyK,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAC3EoL,UAAW,CAAC,OAAQ,UACpBnG,SAAU,WACV4W,WAAYjP,EAAAA,EAAUnM,IAAIV,KAAKC,MAAO,CACrCoL,UAAW,CAAC,SAAU,cACtB/J,KAAMtB,KAAKC,MAAMC,gBAAgBuF,IAAI,qBAIvC4E,OAAAC,eAAA,iB,gDAAmD,CAAC,GAu3BrD,CAr3BWiR,QAAAA,GAETvb,KAAKwN,cAAcK,UACnB7N,KAAK2M,iBAAiBkB,UACtB7N,KAAK4M,iBAAiBiB,UACtB7N,KAAK+b,gBAAgBlO,UACrB7N,KAAKgc,WAAWnO,UAChB/N,MAAMyb,UACP,CAEU7P,SAAAA,GACT5L,MAAM4L,YAEN1L,KAAK2F,WAAW,mBAAmB,GAEnC3F,KAAK4L,WAAWlB,KAAK1K,KAAKic,WAAWhQ,OAAO0L,OAAOC,IAClD,GAAoB,UAAhBA,EAAOtG,KACVnL,EAAAA,GAAYyR,EAAOC,WAAYvS,IAC9BtF,KAAKkc,gBAAgB5W,EAAS,SAEzB,GAAoB,SAAhBsS,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,SAAU,CAAC,eACnC,GAAoB,aAAhBH,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,SAAU,CAAC,eACnC,GAAoB,gBAAhBH,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,SAAU,CAAC,eACnC,GAAoB,gBAAhBH,EAAOtG,KACjBtR,KAAKkc,gBAAgBtE,EAAOO,cACtB,IAAoB,cAAhBP,EAAOtG,KAGjB,MAAM,IAAI8G,MAAM,6BAFhBpY,KAAKmc,kBAAkBvE,EAAOjR,MAAO,CAAC,S,MAMxC,MAAMyV,EAAWpc,KAAKyF,IAAI,YACtB2W,IACHA,EAAS3V,KAAOzG,KAChBoc,EAASrD,eAEV/Y,KAAKyK,SAASC,KAAK0R,GACnBpc,KAAKqc,WAAaD,EAASE,UAAU,IAAIC,EAAAA,EAASvc,UAAMuH,EAAW,CAAC,GAAI,IACxEvH,KAAKqc,WAAWG,SAASC,QAAQ,QACjCzc,KAAKqc,WAAW9b,OAAO,CAAE+B,QAAS,EAAGoa,iBAAanV,EAAWoV,iBAAapV,EAAWwC,aAAa,IAClG/J,KAAKqc,WAAWpQ,OAAOwQ,SACxB,CAEUG,aAAAA,CAAcC,EAAgBC,GAExC,CAYOpN,IAAAA,CAAKhM,EAAeC,EAAaoZ,EAAmB3F,GAC1D,GAAGpX,KAAKyF,IAAI,YAAY,GAGvB,GAFAzF,KAAK4c,cAAclZ,EAAOC,GAEtB3D,KAAKyF,IAAI,WAAa/B,GAAS1D,KAAKyF,IAAI,QAAU9B,EAAK,CAC1D,IAAIqZ,EAAahd,KAAKid,YAClBC,EAAald,KAAKmd,YAElBnZ,EAAehE,KAAKyF,IAAI,eAAgB,IAAOkC,KAAKV,IAAI,EAAItD,EAAMD,GAElEA,GAAUM,IACbN,GAASM,GAGNL,EAAM,EAAIK,IACbL,EAAM,EAAIK,GAGPN,EAAQC,KACVD,EAAOC,GAAO,CAACA,EAAKD,IAGjBgC,EAAAA,GAAeqX,KACnBA,EAAW/c,KAAKyF,IAAI,wBAAyB,IAGzC2R,IACJA,EAAW,OAGZ,IAAIrT,EAAgB/D,KAAK+G,WAAW,gBAAiB/G,KAAKyF,IAAI,gBAAiB,MAC3E2X,EAAoBrZ,EAEZ,IAARJ,GAAuB,IAAVD,IAEf0T,EADG1T,EAAQ1D,KAAKyF,IAAI,QAAS,GAClB,QAGA,OAIC,IAAV/B,GAAuB,IAARC,IAEjByT,EADGzT,EAAM3D,KAAKyF,IAAI,MAAO,GACd,MAGA,SAIb,IAAI7B,EAAe5D,KAAKyF,IAAI,eAAgB,GACxC5B,EAAe7D,KAAKyF,IAAI,eAAgB3B,KAExC4B,EAAAA,GAAe9B,KAClBG,EAAgBqZ,EAAoBxZ,GAGrC,IAAIyZ,EAAwB,EAoD5B,GAlDI3X,EAAAA,GAAe7B,KAClBwZ,EAAgBD,EAAoBvZ,GAIpB,UAAbuT,GACCvT,EAAe,GAEd,GAAKF,EAAMD,GAAS2Z,IACvB1Z,EAAMD,EAAQ,EAAI2Z,GAKhB,GAAK1Z,EAAMD,GAASK,IACvBJ,EAAMD,EAAQ,EAAIK,GAGfJ,EAAM,GAAKA,EAAMD,EAAQ,EAAIK,IAEhCL,EAAQC,EAAM,EAAII,KAKfF,EAAe,GAEd,GAAKF,EAAMD,GAAS2Z,IACvB3Z,EAAQC,EAAM,EAAI0Z,GAKhB,GAAK1Z,EAAMD,GAASK,IACvBL,EAAQC,EAAM,EAAII,GAEfL,EAAQ,GAAKC,EAAMD,EAAQ,EAAIK,IAElCJ,EAAMD,EAAQ,EAAIK,IAIhB,GAAKJ,EAAMD,GAASK,IACvBJ,EAAMD,EAAQ,EAAIK,GAGf,GAAKJ,EAAMD,GAASK,IACvBL,EAAQC,EAAM,EAAII,GAGC,MAAhBF,GAAwC,MAAhBD,GAAyBF,GAAS1D,KAAKyF,IAAI,UAAY9B,GAAO3D,KAAKyF,IAAI,OAAS,CAC3G,MAAM+T,EAAQxZ,KAAKwZ,MACfA,GACHA,EAAM7D,qBAAqB3V,MAAM,E,CAInC,IAAMgd,GAAcA,EAAWM,SAAWN,EAAWO,IAAM7Z,GAAU1D,KAAKyF,IAAI,UAAY/B,KAAYwZ,GAAcA,EAAWI,SAAWJ,EAAWK,IAAM5Z,GAAQ3D,KAAKyF,IAAI,QAAU9B,GACrL,OAID,GAAIoZ,EAAW,EAAG,CACjB,IACIC,EAAYE,EADZM,EAASxd,KAAKyF,IAAI,uBAYtB,GAVIzF,KAAKyF,IAAI,UAAY/B,IACxBsZ,EAAahd,KAAKyd,QAAQ,CAAEC,IAAK,QAASH,GAAI7Z,EAAOqZ,SAAUA,EAAUS,OAAQA,KAE9Exd,KAAKyF,IAAI,QAAU9B,IACtBuZ,EAAald,KAAKyd,QAAQ,CAAEC,IAAK,MAAOH,GAAI5Z,EAAKoZ,SAAUA,EAAUS,OAAQA,KAG9Exd,KAAKid,YAAcD,EACnBhd,KAAKmd,YAAcD,EAEfF,EACH,OAAOA,EAEH,GAAIE,EACR,OAAOA,C,MAIRld,KAAKsM,IAAI,QAAS5I,GAClB1D,KAAKsM,IAAI,MAAO3I,E,MAIb3D,KAAKid,aACRjd,KAAKid,YAAYU,OAEd3d,KAAKmd,aACRnd,KAAKmd,YAAYQ,MAIrB,CAOA,UAAWjQ,GACV,OAAO1N,KAAK4d,OACb,CAGOzB,iBAAAA,CAAkB7W,EAA+C+F,GACvE/F,EAASoP,OAAO,WAAW,GAC3B1U,KAAK6d,cAAcvY,EAAU+F,GAC7BrL,KAAK8d,cAAe,EACpB9d,KAAK+d,iBAAiBzY,GAEtB,MAAM0Y,EAAQ1Y,EAASG,IAAI,SACrBiS,EAAY1X,KAAK2M,iBAEjBsR,EAAO3Y,EAASG,IAAI,QACtBuY,GAASC,GACZvG,EAAUjN,SAAS4N,UAAU4F,GAG9B,MAAM3c,EAAOgE,EAASG,IAAI,YACtBuY,GAAS1c,GACZoW,EAAUjN,SAAS4N,UAAU/W,EAE/B,CAEOyc,gBAAAA,CAAiBG,EAAgDC,GAAmB,CAmCpFnQ,iBAAAA,GACP,CAKOoQ,0BAAAA,GACP,CAEOC,gBAAAA,GACP,CAEUC,iBAAAA,GACTte,KAAKue,SAAW,CAAC,EACjBve,KAAKic,WAAW7M,MAAMoP,IACrBxe,KAAK+d,iBAAiBS,EAAU,IAGjCrY,EAAAA,GAAYnG,KAAKye,mBAAoBD,IACpCxe,KAAK+d,iBAAiBS,EAAU,GAElC,CAOOxJ,gBAAAA,GAUN,GATAlV,MAAMkV,mBAEFhV,KAAKyF,IAAI,eACZzF,KAAKqc,WAAW/P,IAAI,WAAW,GAG/BtM,KAAKqc,WAAW/P,IAAI,WAAW,GAG5BtM,KAAKqN,QAAQ,UAAYrN,KAAKqN,QAAQ,OAAQ,CACjD,MAAMmM,EAAQxZ,KAAKwZ,MACfA,GACHA,EAAM3E,gBAGP,IAAInR,EAAQ1D,KAAKyF,IAAI,QAAS,GAC1B9B,EAAM3D,KAAKyF,IAAI,MAAO,GAEtBzB,EAAehE,KAAKyF,IAAI,eAAgB,IAAOkC,KAAKV,IAAI,EAAItD,EAAMD,GAEtE,GAAIA,GAASM,EAAc,CAC1B,IAAI2L,EAAQjM,EAAQM,EACpBN,GAASM,EACThE,KAAK0U,OAAO,QAAShR,GACjB1D,KAAKqN,QAAQ,QAChBrN,KAAK0U,OAAO,MAAO/Q,EAAMgM,E,CAG3B,GAAIhM,EAAM,EAAIK,EAAc,CAC3B,IAAI2L,EAAQhM,EAAM,EAAIK,EACtBL,EAAM,EAAIK,EACVhE,KAAK0U,OAAO,MAAO/Q,GAEf3D,KAAKqN,QAAQ,UAChBrN,KAAK0U,OAAO,QAAShR,EAAQiM,E,EAMhC,MAAMyM,EAAWpc,KAAKyF,IAAI,YAO1B,GANA2W,EAASS,OAAS7c,KAAKyF,IAAI,SAC3B2W,EAASU,KAAO9c,KAAKyF,IAAI,OACzB2W,EAASsC,UAAYtC,EAAS3W,IAAI,YAAY,GAC9C2W,EAASuC,YAAcvC,EAASwC,cAAgBxC,EAASU,KAAOV,EAASS,QACzET,EAASyC,YAEL7e,KAAKqN,QAAQ,WAAY,CAC5B,MAAMkH,EAAUvU,KAAKyF,IAAI,WACzB,GAAI8O,EAAS,CACZ,MAAMuK,EAAe1C,EAAS3W,IAAI,aAClC8O,EAAQwK,OAAO,QACfxK,EAAQwK,OAAO/e,KAAK0b,UAAUsD,eAC9BzK,EAAQ0K,eAEJH,IACHvK,EAAQjI,IAAI,YAAamC,EAAAA,GAAiB8F,EAAQ9O,IAAI,aAAcqZ,IACpEvK,EAAQ2K,MAAMD,e,EAIlB,CAEOE,oBAAAA,GACN,MAAM5K,EAAUvU,KAAKyF,IAAI,WACrB8O,GACHvU,KAAKyF,IAAI,YAAY2Z,oBAAoB7K,EAE3C,CAEO8K,aAAAA,GACNvf,MAAMuf,gBACNrf,KAAKmf,sBACN,CAKOnH,YAAAA,CAAawB,GACnBxZ,KAAKwZ,MAAQA,EACIxZ,KAAKyF,IAAI,YAEjB+T,MAAQA,EACjBA,EAAMhM,cAAc/C,SAASC,KAAK1K,KAAKwN,eACvCgM,EAAM7M,iBAAiBlC,SAASC,KAAK1K,KAAK2M,kBAE1C6M,EAAM8F,qBAAqB7U,SAASC,KAAK1K,KAAKgc,YAE9Chc,KAAKkM,GAAG,SAAS,KAChBsN,EAAM7D,qBAAqB3V,KAAK,IAEjCA,KAAKkM,GAAG,OAAO,KACdsN,EAAM7D,qBAAqB3V,KAAK,IAGjCwZ,EAAMtO,cAAcqU,UAAU,SAAS,KACtCvf,KAAKwf,eAAe,IAErBhG,EAAMtO,cAAcqU,UAAU,UAAU,KACvCvf,KAAKwf,eAAe,IAGrBhG,EAAMT,YAAY/Y,KACnB,CAKOyf,YAAAA,CAAana,GAEnB,OADAtF,KAAK0f,kBAAkBpa,GAAU,GAC1BxF,MAAM2f,aAAana,EAC3B,CAKOqa,YAAAA,CAAara,GAEnB,OADAtF,KAAK0f,kBAAkBpa,GAAU,GAC1BxF,MAAM6f,aAAara,EAC3B,CAEOoa,iBAAAA,CAAkBpa,EAAmCsa,GAC3D,MAAMC,EAAK,cACLX,EAAQ5Z,EAASG,IAAI,SACvByZ,GACHA,EAAM5S,IAAIuT,EAAID,GAEf,MAAM3B,EAAO3Y,EAASG,IAAI,QACtBwY,GACHA,EAAK3R,IAAIuT,EAAID,GAEd,MAAME,EAAOxa,EAASG,IAAI,QACtBqa,GACHA,EAAKxT,IAAIuT,EAAID,GAEd,MAAMpa,EAAWF,EAASG,IAAI,YAC1BD,GACHA,EAAS8G,IAAIuT,EAAID,GAGlB,MAAMG,EAASza,EAASG,IAAI,UAC5B,GAAIsa,EAAQ,CACX,MAAM3W,EAAS2W,EAAOta,IAAI,UACtB2D,GACHA,EAAOkD,IAAIuT,EAAID,E,CAGlB,CAGOI,eAAAA,CAAgB1a,EAAmCvC,GACzD,MAAMmc,EAAQ5Z,EAASG,IAAI,SACrBwa,EAAI,UACNf,GACHA,EAAMvZ,WAAWsa,EAAGld,GAErB,MAAMkb,EAAO3Y,EAASG,IAAI,QACtBwY,GACHA,EAAKtY,WAAWsa,EAAGld,GAEpB,MAAM+c,EAAOxa,EAASG,IAAI,QACtBqa,GACHA,EAAKna,WAAWsa,EAAGld,GAEpB,MAAMyC,EAAWF,EAASG,IAAI,YAC1BD,GACHA,EAASG,WAAWsa,EAAGld,GAGxB,MAAMgd,EAASza,EAASG,IAAI,UAC5B,GAAIsa,EAAQ,CACX,MAAM3W,EAAS2W,EAAOta,IAAI,UACtB2D,GACHA,EAAOzD,WAAWsa,EAAGld,E,CAGxB,CAOO8a,aAAAA,CAAcvY,EAA+C4a,EAAqBC,G,UACxF,MAAM/D,EAAWpc,KAAKyF,IAAI,YAC1B,IAAI2a,EAAI,QAER,MAAMlB,EAAQ5Z,EAASG,IAAI,SAC3B,GAAKyZ,EAGA,CACJ,IAAI7T,EAAY6T,EAAMzZ,IAAI,aACtB4a,GAAS,EACTF,GAC2B,IAAjB,OAAT9U,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,IAIoB,IAAjB,OAAThV,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,GAIPA,IACS,QAAZC,EAAApB,EAAM7V,cAAM,IAAAiX,GAAAA,EAAE7V,SAASgO,YAAYyG,GACnC9C,EAASE,UAAUhX,EAAU4a,GAC7BhB,EAAMrR,UACNuO,EAASmE,OAAO9H,YAAYyG,G,MApB7B9C,EAASE,UAAUhX,EAAU4a,GAwB9B,MAAMjC,EAAO3Y,EAASG,IAAI,QAE1B,GAAKwY,EAGA,CACJ,IAAI5S,EAAY4S,EAAKxY,IAAI,aACrB4a,GAAS,EACTF,GAC2B,IAAjB,OAAT9U,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,IAIoB,IAAjB,OAAThV,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,GAIPA,IACQ,QAAXG,EAAAvC,EAAK5U,cAAM,IAAAmX,GAAAA,EAAE/V,SAASgO,YAAYwF,GAClC7B,EAASqE,SAASnb,EAAU4a,GAC5BjC,EAAKpQ,UACLuO,EAAS6B,KAAKxF,YAAYwF,G,MApB3B7B,EAASqE,SAASnb,EAAU4a,GAwB7B,MAAMJ,EAAOxa,EAASG,IAAI,QAC1B,GAAKqa,EAGA,CACJ,IAAIO,GAAS,EACThV,EAAYyU,EAAKra,IAAI,aACrB0a,GAC2B,IAAjB,OAAT9U,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,IAIoB,IAAjB,OAAThV,QAAS,IAATA,OAAS,EAATA,EAAW4N,QAAQmH,MACtBC,GAAS,GAGPA,IACQ,QAAXK,EAAAZ,EAAKzW,cAAM,IAAAqX,GAAAA,EAAEjW,SAASgO,YAAYqH,GAClC1D,EAASuE,SAASrb,EAAU4a,GAC5BJ,EAAKjS,UACLuO,EAASwE,MAAMnI,YAAYqH,G,MAnB5B1D,EAASuE,SAASrb,EAAU4a,GAuBxBC,GAAU7a,EAASG,IAAI,aAC3B2W,EAASyE,aAAavb,EAAU4a,GAGjClgB,KAAK8gB,eAAexb,EACrB,CAEUwb,cAAAA,CAAexb,GACxB,IAAIya,EAASza,EAASG,IAAI,UACtBsb,EAAa/gB,KAAKyF,IAAI,UAM1B,GAJKsa,IAAUgB,GAAezb,EAASG,IAAI,aAC1Csa,EAASgB,EAAW/gB,KAAKC,MAAOD,KAAMsF,IAGnCya,EAAQ,CACXA,EAAOtZ,KAAOzG,KACd,MAAMoJ,EAAS2W,EAAOta,IAAI,UAEtB2D,IACHA,EAAOoL,aAAalP,GACpBA,EAASoP,OAAO,SAAUqL,GACrB3W,EAAOC,QACXrJ,KAAK4M,iBAAiBnC,SAASC,KAAKtB,G,CAIxC,CAEO4X,aAAAA,GACNlhB,MAAMkhB,gBAEN,MAAMxH,EAAQxZ,KAAKwZ,MACfA,IACHA,EAAMZ,qBACNY,EAAM8F,qBAAqBE,iBAG5Bxf,KAAKyF,IAAI,YAAYwb,mBAErBjhB,KAAKqW,cAAe,CACrB,CAKO6F,eAAAA,CAAgB5W,GACtBxF,MAAMoc,gBAAgB5W,GACtB,MAAM8W,EAAWpc,KAAKyF,IAAI,YACpByZ,EAAQ5Z,EAASG,IAAI,SACvByZ,IACH9C,EAASmE,OAAO9H,YAAYyG,GAC5BA,EAAMrR,WAEP,MAAMiS,EAAOxa,EAASG,IAAI,QACtBqa,IACH1D,EAASwE,MAAMnI,YAAYqH,GAC3BA,EAAKjS,WAEN,MAAMoQ,EAAO3Y,EAASG,IAAI,QACtBwY,IACH7B,EAAS6B,KAAKxF,YAAYwF,GAC1BA,EAAKpQ,WAEN,MAAMrI,EAAWF,EAASG,IAAI,YAC1BD,IACH4W,EAAS8E,UAAUzI,YAAYjT,GAC/BA,EAASqI,WAEV,MAAMkS,EAASza,EAASG,IAAI,UAExBsa,GACHA,EAAOlS,SAET,CAEUsT,YAAAA,GACTnhB,KAAK2F,WAAW,YAAa3F,KAAKohB,uBAAyBphB,KAAKyF,IAAI,YAAYmZ,cAChF,MAAMvC,EAAarc,KAAKqc,WACxB,IAAKA,EAAWvI,WAAY,CAC3B,MAAMwH,EAASe,EAAWgF,cACpBC,EAAS3Z,KAAK4Z,KAAKjG,EAAOxC,MAAQwC,EAAOzC,MAC/C,IAAIjW,EAAOyZ,EAAW5W,IAAI,QAC1BU,EAAAA,GAAYnG,KAAK6T,WAAYvO,IAC5B,MAAM4Z,EAAQ5Z,EAASG,IAAI,SAC3B,GAAIyZ,IAAUA,EAAMpL,WAAY,CAC/B,MAAMwH,EAAS4D,EAAMmC,cACX1Z,KAAK4Z,KAAKjG,EAAOxC,MAAQwC,EAAOzC,MAElCyI,IACP1e,EAAOsc,EAAMtc,KAAK4e,W,KAIrBnF,EAAW/P,IAAI,OAAQ1J,E,CAExB,IAAIc,EAAQ1D,KAAKyF,IAAI,QAAS,GAC1B9B,EAAM3D,KAAKyF,IAAI,MAAO,GAC1BzF,KAAKyF,IAAI,YAAYgc,YAAYpF,EAAY3Y,EAAwB,IAAfC,EAAMD,GAC7D,CAEOiQ,qBAAAA,CAAsBzO,EAAkBiJ,GAE9CjJ,EADiBlF,KAAKyF,IAAI,YACNwR,eAAe/R,GAEnClF,KAAK0hB,gBAAkBxc,EACvBlF,KAAK2hB,cAAgBxT,EAErBnO,KAAK4hB,eACN,CAMOA,aAAAA,GACN,MAAMzT,EAAenO,KAAK2hB,cAC1B,IAAIzc,EAAWlF,KAAK0hB,gBACpB,MAAMnN,EAAUvU,KAAKyF,IAAI,WACnB2W,EAAWpc,KAAKyF,IAAI,YAEtBC,EAAAA,GAAeR,KAElBiB,EAAAA,GAAYnG,KAAK0N,QAASA,IACzB,GAAIA,EAAOjI,IAAI,cAAgBzF,KAAM,CACpC,MAAMsF,EAAWtF,KAAK6hB,cAAcnU,EAAQxI,EAAWlF,KAAKyF,IAAI,oBAE5D0I,IAAiD,GAAjCA,EAAa8K,QAAQvL,IACxCA,EAAOoU,mBAAmBxc,GAC1BoI,EAAOqU,kBAAkBzc,GACzBoI,EAAOsU,UAAU9N,gBAAkB5O,IAGnCoI,EAAO+G,oBAAoBnP,GAC3BoI,EAAOgH,OAAO,kBAAmBpP,G,KAKhCtF,KAAKyF,IAAI,iBACZP,EAAWlF,KAAKiiB,kBAAkB/c,EAAUlF,KAAKyF,IAAI,kBAAmB,MAGzEzF,KAAKyX,cAAc,kBAAmBvS,GAElCqP,IACH6H,EAASgD,oBAAoB7K,GAExB7O,EAAAA,GAAYR,GAYhBqP,EAAQnI,KAAK,IAXbpM,KAAKkiB,mBAAmB3N,EAASrP,GACjCkX,EAAS+F,gBAAgB5N,EAASrP,GAE9BA,EAAWlF,KAAKyF,IAAI,QAAS,IAAMP,EAAWlF,KAAKyF,IAAI,MAAO,GACjE8O,EAAQnI,KAAK,GAGbmI,EAAQ4E,KAAK,KAQlB,CAEU+I,kBAAAA,CAAmB3N,EAAkBrP,GAC9CqP,EAAQ2K,MAAM5S,IAAI,OAAQtM,KAAK4V,eAAe1Q,GAC/C,CAcO+c,iBAAAA,CAAkB/c,EAAkBkd,GAC1C,OAAOld,CACR,CAKOmd,gBAAAA,GACN,IAAI9N,EAAUvU,KAAKyF,IAAI,WACnB8O,GACHA,EAAQ4E,MAEV,CAKOmJ,gBAAAA,GACN,IAAI/N,EAAUvU,KAAKyF,IAAI,WACnB8O,GACHA,EAAQnI,MAEV,CAKOmW,qBAAAA,CAAsBrE,EAAwCsE,GAErE,CAEOC,WAAAA,GACN3iB,MAAM2iB,cACNziB,KAAK0iB,YAAa,EAClB1iB,KAAK8d,cAAe,CACrB,CAQO6E,oBAAAA,CAAqBC,GAC3B,MAAMxG,EAAWpc,KAAKyF,IAAI,YAC1B,OAAO2W,EAASnF,eAAe2L,EAAaxG,EAASwC,aACtD,CASO3H,cAAAA,CAAe/R,GACrB,OAAOlF,KAAKyF,IAAI,YAAYwR,eAAe/R,EAC5C,CAUO2d,gBAAAA,CAAiB3d,GACvB,OAAOlF,KAAKyF,IAAI,YAAYod,iBAAiB3d,EAC9C,CAOOmK,WAAAA,CAAYnK,GAClB,OAAOlF,KAAKyF,IAAI,YAAY4J,YAAYnK,EACzC,CAcO4d,SAAAA,CAAU5E,EAAwC6E,EAAwCC,EAAuBC,GACvH,OAAO,CACR,CASOC,eAAAA,CAAgBC,GACtB,OAAOnjB,KAAKic,WAAWvR,KAAKyY,EAC7B,CAKOC,gBAAAA,CAAiBxF,GAAqB,CAOtCwD,oBAAAA,GACN,MAAO,GACR,EAz9BA/W,OAAAC,eAAAqR,EAAA,a,gDAAkC,SAClCtR,OAAAC,eAAAqR,EAAA,c,gDAA0CC,EAAAA,EAAUJ,WAAWC,OAAO,CAACE,EAAKD,a,mFCpMvE,MAAO2H,UAAiBC,EAAAA,EAA9BlZ,WAAAA,G,oBAKCC,OAAAC,eAAA,oB,gDAAuC,IAIxC,EAFCD,OAAAC,eAAA+Y,EAAA,a,gDAAkC,aAClChZ,OAAAC,eAAA+Y,EAAA,c,gDAA0CC,EAAAA,EAAK9H,WAAWC,OAAO,CAAC4H,EAAS3H,c,0BC4CtE,MAAO6H,UAAkBC,EAAAA,EAA/BpZ,WAAAA,G,oBAKCC,OAAAC,eAAA,oB,gDAAoC,IAIrC,EAFCD,OAAAC,eAAAiZ,EAAA,a,gDAAkC,cAClClZ,OAAAC,eAAAiZ,EAAA,c,gDAA0CC,EAAAA,EAAMhI,WAAWC,OAAO,CAAC8H,EAAU7H,c,eCnBxE,MAAgB+H,UAAqBlY,EAAAA,EAA3CnB,WAAAA,G,oBAKCC,OAAAC,eAAA,oB,gDAA6B,MAC7BD,OAAAC,eAAA,e,gDAAwB,IACxBD,OAAAC,eAAA,a,gDAAsB,IACtBD,OAAAC,eAAA,kB,iDAA4B,IAE5BD,OAAAC,eAAA,iB,gDAA6B,IAK7BD,OAAAC,eAAA,c,yDAEAD,OAAAC,eAAA,Y,gDAAgB,IAEhBD,OAAAC,eAAA,Y,gDAAgB,IAEhBD,OAAAC,eAAA,wB,yDAEAD,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,iB,yDAsBAD,OAAAC,eAAA,c,gDAAgD,IAAIoZ,EAAAA,GACnDC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAM2iB,EAASO,KAAK5jB,KAAKC,MAAO,CAC/BoL,UAAWoD,EAAAA,GAAiBzO,KAAK4gB,MAAMiD,SAASpe,IAAI,YAAa,IAAKzF,KAAKyF,IAAI,YAAa,MAC1F,CAACzF,KAAK4gB,MAAMiD,eAwBhBxZ,OAAAC,eAAA,a,gDAA2C,IAAIoZ,EAAAA,GAC9CC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAMojB,EAAAA,EAAKF,KAAK5jB,KAAKC,MAAO,CAC3BoL,UAAWoD,EAAAA,GAAiBzO,KAAKie,KAAK4F,SAASpe,IAAI,YAAa,IAAKzF,KAAKyF,IAAI,YAAa,MACzF,CAACzF,KAAKie,KAAK4F,eAwBfxZ,OAAAC,eAAA,kB,gDAAoD,IAAIoZ,EAAAA,GACvDC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAM6K,EAAAA,EAASqY,KAAK5jB,KAAKC,MAAO,CAC/BoL,UAAWoD,EAAAA,GAAiBzO,KAAKkhB,UAAU2C,SAASpe,IAAI,YAAa,CAAC,OAAQ,SAAUzF,KAAKyF,IAAI,YAAa,MAC5G,CAACzF,KAAKkhB,UAAU2C,eA0BpBxZ,OAAAC,eAAA,e,gDAAkD,IAAIoZ,EAAAA,GACrDC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAM6iB,EAAUK,KAAK5jB,KAAKC,MAAO,CAChCoL,UAAWoD,EAAAA,GAAiBzO,KAAKugB,OAAOsD,SAASpe,IAAI,YAAa,IAAKzF,KAAKyF,IAAI,YAAa,MAC3F,CAACzF,KAAKugB,OAAOsD,eAUjBxZ,OAAAC,eAAA,a,yDAmDAD,OAAAC,eAAA,c,wDA6LD,CArWQqW,QAAAA,CAASrb,EAAmC+F,GAClD,MAAMyU,EAAO9f,KAAK4gB,MAAMmD,OAMxB,OALAjE,EAAKtL,aAAalP,GAClBA,EAASoP,OAAO,OAAQoL,GACxBA,EAAKxT,IAAI,YAAamC,EAAAA,GAAiBqR,EAAKra,IAAI,aAAc4F,IAC9DrL,KAAKyG,KAAKsV,gBAAgBtR,SAASC,KAAKoV,GACxC9f,KAAK4gB,MAAMlW,KAAKoV,GACTA,CACR,CAmBOW,QAAAA,CAASnb,EAAmC+F,GAClD,MAAM4S,EAAOje,KAAKie,KAAK8F,OAOvB,OANA9F,EAAKzJ,aAAalP,GAClBA,EAASoP,OAAO,OAAQuJ,GACxBA,EAAK3R,IAAI,YAAamC,EAAAA,GAAiBwP,EAAKxY,IAAI,aAAc4F,IAE9DrL,KAAKyG,KAAK+G,cAAc/C,SAASC,KAAKuT,GACtCje,KAAKie,KAAKvT,KAAKuT,GACRA,CACR,CAmBO4C,YAAAA,CAAavb,EAAmC+F,GACtD,MAAM7F,EAAWxF,KAAKkhB,UAAU6C,OAOhC,OANAve,EAASgP,aAAalP,GACtBE,EAAS8G,IAAI,YAAamC,EAAAA,GAAiBjJ,EAASC,IAAI,aAAc4F,IAEtErL,KAAKyG,KAAK+G,cAAc/C,SAASC,KAAKlF,GACtCF,EAASoP,OAAO,WAAYlP,GAC5BxF,KAAKkhB,UAAUxW,KAAKlF,GACbA,CACR,CAmBO8W,SAAAA,CAAUhX,EAAmC+F,GAEnD,MAAM6T,EAAQlf,KAAKugB,OAAOwD,OAQ1B,OANA7E,EAAM5S,IAAI,YAAamC,EAAAA,GAAiByQ,EAAMzZ,IAAI,aAAc4F,IAChErL,KAAKyG,KAAKsV,gBAAgBtR,SAAS4N,UAAU6G,EAAO,GAEpDA,EAAM1K,aAAalP,GACnBA,EAASoP,OAAO,QAASwK,GACzBlf,KAAKugB,OAAO7V,KAAKwU,GACVA,CACR,CAyBON,UAAAA,GACN,OAAO,CACR,CAKOoF,SAAAA,GACN,OAAOhkB,KAAK4e,aAAe5e,KAAKyF,IAAI,kBAAmB,GACxD,CAEOwb,gBAAAA,GAEP,CAsCUvV,SAAAA,GACT5L,MAAM4L,YACN1L,KAAKsM,IAAI,cAAc,GAEvB,MAAM2X,EAAQjkB,KAAKikB,MACfA,IACHjkB,KAAK4L,WAAWlB,KAAKuZ,EAAMhY,OAAOC,GAAG,eAAgBY,IACpD9M,KAAKkkB,iBAAiBpX,EAAM,KAG7B9M,KAAK4L,WAAWlB,KAAKuZ,EAAMhY,OAAOC,GAAG,mBAAoBY,IACxD9M,KAAKmkB,eAAerX,EAAM,KAG3B9M,KAAK4L,WAAWlB,KAAKuZ,EAAMhY,OAAOC,GAAG,qBAAsBY,IAC1D9M,KAAKokB,iBAAiBtX,EAAM,KAG/B,CAEOM,cAAAA,GACNtN,MAAMsN,iBACFpN,KAAKqN,QAAQ,oBAChBrN,KAAK+L,KAAKE,OAAOoY,KAAK,cAAc,KACnCrkB,KAAKyG,KAAK+Y,eAAe,GAG5B,CAGO8E,QAAAA,GAGN,GAFAxkB,MAAMwkB,WAEFtkB,KAAKqN,QAAQ,OAAQ,CACxB,MAAM4W,EAAQjkB,KAAKikB,MACnB,GAAIA,EAAO,CACV,MAAMlI,EAAkB/b,KAAKyG,KAAKsV,gBAC5BwI,EAAMvkB,KAAKyF,IAAI,OACV,QAAP8e,EACHxI,EAAgBtR,SAASC,KAAKuZ,GAEf,QAAPM,GACRxI,EAAgBtR,SAASgO,YAAYwL,E,EAIzC,CAEUC,gBAAAA,CAAiBpX,GAC1B9M,KAAKwkB,gBAAkBxkB,KAAK4O,QAAQ9B,EAAM+B,OAC1C,MAAMpI,EAAOzG,KAAKyG,KAClBzG,KAAKykB,WAAahe,EAAKhB,IAAI,SAC3BzF,KAAK0kB,SAAWje,EAAKhB,IAAI,MAC1B,CAEU0e,cAAAA,CAAeQ,GACxB3kB,KAAKwkB,qBAAkBjd,CACxB,CAEU6c,gBAAAA,CAAiBtX,GAC1B,MAAM4E,EAAY1R,KAAKwkB,gBACvB,GAAI9S,EAAW,CACd,MAAM7C,EAAQ7O,KAAK4O,QAAQ9B,EAAM+B,OAE3B+V,EAAY5kB,KAAKykB,WACjBI,EAAU7kB,KAAK0kB,SACfI,EAAQ9kB,KAAK+kB,QAAQlW,EAAO6C,GAAa/J,KAAKV,IAAI,EAAI4d,EAAUD,GAAc,EAAI5kB,KAAKyF,IAAI,iBAAkB,GACnHzF,KAAKyG,KAAKiJ,KAAKkV,EAAYE,EAAOD,EAAUC,EAAO,E,CAErD,CAEUC,OAAAA,CAAQC,EAAiBC,GAClC,OAAO,CACR,CAQOC,oBAAAA,CAAqBhgB,GAC3B,OAAIlF,KAAK0e,WACA1e,KAAK8c,KAAO5X,GAAYlF,KAAK2e,aAG7BzZ,EAAWlF,KAAK6c,QAAU7c,KAAK2e,WAEzC,CAUOS,mBAAAA,CAAoB+F,GAAqB,CAEzCC,WAAAA,GACNplB,KAAKqlB,YACLrlB,KAAKslB,QAAS,CACf,CAKOrO,cAAAA,CAAe/R,GACrB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAUzB,OARA5X,GAAuBvB,EAAMD,EAK5BwB,EAJIlF,KAAKyF,IAAI,YAIF9B,EAAMuB,EAHNxB,EAAQwB,CAOrB,CAKO2d,gBAAAA,CAAiB3d,GACvB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAWzB,OATK9c,KAAKyF,IAAI,YAIbP,EAAWvB,EAAMuB,EAHjBA,GAAsBxB,EAMvBwB,GAAuBvB,EAAMD,CAG9B,CAKO2L,WAAAA,CAAYnK,GAClB,OAAIlF,KAAKyF,IAAI,YACL,EAAIP,EAELA,CACR,CAKO2Z,SAAAA,GAEP,CAEU0G,gBAAAA,CAAiBnc,EAAgBlE,EAAkBzC,EAAqBC,GACjF,IAAI+D,EAAOzG,KAAKyG,KAEhB,MAAM/C,EAAQ+C,EAAKhB,IAAI,QAAS,GAC1B9B,EAAM8C,EAAKhB,IAAI,MAAO,GAKxBP,EAHexB,GAASC,EAAMD,IAAUjB,EAAc,OAG3ByC,EAFdxB,GAASC,EAAMD,IAAUhB,EAAc,MAGvD0G,EAAOzD,WAAW,WAAW,GAG7ByD,EAAOzD,WAAW,WAAW,EAE/B,CAEU6f,gBAAAA,CAAiBjR,EAAkB1F,GAC5C,MAAM2K,EAAQxZ,KAAKwZ,MACfA,IACHjF,EAAQjI,IAAI,UAAWtM,KAAKsN,SAASsH,SAAS/F,IACzC2K,EAAMJ,OAAOvK,IACjB0F,EAAQnI,OAGX,CAEO2M,WAAAA,GAAgB,EAhYvB1O,OAAAC,eAAAmZ,EAAA,a,gDAAkC,iBAClCpZ,OAAAC,eAAAmZ,EAAA,c,gDAA0ClY,EAAAA,EAASiQ,WAAWC,OAAO,CAACgI,EAAa/H,a,8FCnE9E,MAAO+J,UAAsBhC,EAAAA,EAAnCrZ,WAAAA,G,oBAUCC,OAAAC,eAAA,c,gDAA0BuC,EAAAA,EAAUnM,IAAIV,KAAKC,MAAO,CAAE6E,MAAOtC,EAAAA,GAAMyC,YAAY,EAAOoG,UAAW,CAAC,OAAQ,IAAK,YAidhH,CA/cQK,SAAAA,GACN1L,KAAKgiB,UAAU3W,UAAYoD,EAAAA,GAAiBzO,KAAKgiB,UAAU3W,UAAW,CAAC,WAAY,MAEnFvL,MAAM4L,YACN1L,KAAKyX,cAAc,SAAU,KAE7B,MAAMiO,EAAe1lB,KAAKie,KAAK4F,SAC/B6B,EAAapZ,IAAI,SAAU9J,EAAAA,IAC3BkjB,EAAapZ,IAAI,QAAS,GAC1BoZ,EAAapZ,IAAI,QAAQ,CAACnD,EAASwc,KAClCxc,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAO,EAAGkc,EAAS5gB,SAAS,IAGrC/E,KAAKsM,IAAI,QAAQ,CAACnD,EAASwc,KAC1Bxc,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAOkc,EAAS7gB,QAAS,EAAE,GAErC,CAEOwf,QAAAA,GACNxkB,MAAMwkB,WAEN,MAAM7d,EAAOzG,KAAKyG,KAClBA,EAAK4V,WAAW1W,WAAW,WAAY3F,KAAKyF,IAAI,WAChDgB,EAAK4V,WAAW/P,IAAI,KAAM,KAE1B,MAAM5H,EAAW,WACXtC,EAAS,SAEf,GAAIpC,KAAKqN,QAAQ3I,IAAa1E,KAAKqN,QAAQjL,GAAS,CACnD,MAAMoX,EAAQxZ,KAAKwZ,MACboM,EAAenf,EAAKgE,SAS1B,GAPIzK,KAAKyF,IAAIrD,GACZqE,EAAKsY,OAAO3c,GAGZqE,EAAKof,UAAUzjB,GAGZoX,EAAO,CACV,GAAIxZ,KAAKyF,IAAIf,GAAW,CACvB,MAAM+F,EAAW+O,EAAMhE,iBAAiB/K,UACT,GAA3BA,EAASwO,QAAQxS,IACpBgE,EAASyN,YAAY,EAAGzR,GAEzBA,EAAKsY,OAAOra,GACZkhB,EAAavN,UAAUrY,K,KAGnB,CACJ,MAAMyK,EAAW+O,EAAM/M,oBAAoBhC,UACZ,GAA3BA,EAASwO,QAAQxS,IACpBgE,EAAS4N,UAAU5R,GAEpBA,EAAKof,UAAUnhB,GAEfkhB,EAAavN,UAAUrY,KAAM,E,CAI9ByG,EAAK4V,WAAW4C,eAChBjf,KAAKugB,OAAOnR,MAAM8P,IACjBA,EAAMD,cAAc,IAErBjf,KAAK+L,KAAK+Z,kB,CAEXrf,EAAK+Y,e,CAGNxf,KAAKikB,MAAMte,WAAW,SAAUc,EAAKsV,gBAAgBhX,SACtD,CAGUggB,OAAAA,CAAQgB,EAAgBC,GACjC,OAAQA,EAAOxa,EAAIua,EAAOva,GAAKxL,KAAK8E,OACrC,CAKOmS,cAAAA,CAAe/R,GACrB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAYzB,OARA5X,GAFAA,GAAYlF,KAAKimB,MAEMtiB,EAAMD,GAAS1D,KAAKkmB,IAK1ChhB,EAJIlF,KAAKyF,IAAI,YAIF9B,EAAMuB,EAHNxB,EAAQwB,CAOrB,CAKO2d,gBAAAA,CAAiB3d,GACvB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAazB,OAXK9c,KAAKyF,IAAI,YAIbP,EAAWvB,EAAMuB,EAHjBA,GAAsBxB,EAMvBwB,EAAWA,GAAYvB,EAAMD,GAAS1D,KAAKkmB,IAE3ChhB,GAAYlF,KAAKimB,GAGlB,CAKOpH,SAAAA,GACN,MAAMpY,EAAOzG,KAAKyG,KACZ4C,EAAS5C,EAAK4C,OACpB,GAAIA,EAAQ,CACX,MAAME,EAAIF,EAAO8c,aACjBnmB,KAAKkmB,IAAMlmB,KAAK4e,aAAerV,EAC/BvJ,KAAKimB,KAAOxf,EAAK+E,IAAMnC,EAAO5D,IAAI,cAAe,IAAM8D,C,CAEzD,CAKO0X,gBAAAA,GACN,MAAMxa,EAAOzG,KAAKyG,KACZ+E,EAAI/E,EAAK+E,IAAMiD,EAAAA,GAAuBhI,EAAKhB,IAAI,UAAW,GAAIgB,EAAK3B,SAAW2B,EAAK4C,OAAQ5D,IAAI,cAAe,GACpHgB,EAAK+G,cAAclB,IAAI,IAAKd,GAC5B/E,EAAKkG,iBAAiBL,IAAI,IAAKd,GAC/B/E,EAAKmG,iBAAiBN,IAAI,IAAKtM,KAAKyL,KAEpC,MAAM+N,EAAQ/S,EAAK+S,MACnB,GAAIA,EAAO,CACV,MAAMtO,EAAgBsO,EAAMtO,cACtB8Q,EAAavV,EAAKuV,WACxB,IAAIlX,EAAQ2B,EAAKhB,IAAI,aAAc,GAE/B+F,EAAI/E,EAAK+E,IAAM1G,EAEnB,MAAMuE,EAAS5C,EAAK4C,OAChBA,IACHmC,GAAKnC,EAAO5D,IAAI,cAAe,IAG5BuW,EAAWvR,SAAS+F,OAAS,GAChC1L,EAAQ2B,EAAKuV,WAAWlX,QACxB2B,EAAK6F,IAAI,aAAcxH,EAAQ,IAG/BkX,EAAW1P,IAAI,QAASxH,GAEzBkX,EAAWzb,OAAO,CAAEiL,EAAGA,EAAGC,GAAI,EAAG1G,OAAQmG,EAAcnG,SAAW,G,CAEpE,CAKOgU,WAAAA,GACNjZ,MAAMiZ,cACN,MAAMtS,EAAOzG,KAAKyG,KACO,MAArBA,EAAKhB,IAAI,UACZgB,EAAK6F,IAAI,QAAS9J,EAAAA,IAEnB,MAAMqI,EAAiB7K,KAAKC,MAAM4K,eAClCpE,EAAK6F,IAAI,SAAUzB,GACnBpE,EAAKsV,gBAAgBzP,IAAI,QAAS9J,EAAAA,IAClCiE,EAAKuV,WAAWzb,OAAO,CAAEqK,OAAQC,GAClC,CAKO+T,UAAAA,GACN,OAAO5e,KAAKyG,KAAK3B,OAClB,CAQOshB,eAAAA,CAAgBlhB,GACtB,MAAO,CAAEsG,EAAGxL,KAAKklB,qBAAqBhgB,GAAWuG,EAAG,EACrD,CAKO4a,UAAAA,CAAWvG,EAAiB5a,EAAmBohB,EAAsBxgB,GAC3E,GAAIga,EAAM,CACJpa,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAW,GAEdA,EADGoB,EAAAA,GAAeI,IAAUA,EAAQ,EACzBga,EAAKra,IAAI,gBAAiBnB,GAG1Bwb,EAAKra,IAAI,WAAYnB,GAG7BoB,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlDwb,EAAKxT,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IAExC,IAAIsL,EAASsP,EAAKra,IAAI,SAAU,GAChC,MAAMrD,EAAS0d,EAAKra,IAAI,SAAUzF,KAAKyF,IAAI,UAAU,IAEjDzF,KAAKyF,IAAI,aACZqa,EAAKxT,IAAI,IAAK9J,EAAAA,IACTJ,IACJoO,IAAW,KAIZsP,EAAKxT,IAAI,IAAK,GACVlK,IACHoO,IAAW,IAGbsP,EAAKxT,IAAI,QAASnD,IACjBA,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAO,EAAG+G,EAAO,IAG1BxQ,KAAKulB,iBAAiBzF,EAAM5a,EAAU4a,EAAKra,IAAI,cAAe,GAAIqa,EAAKra,IAAI,cAAe,G,CAE5F,CAKOgc,WAAAA,CAAYvC,EAAmBha,EAAmBohB,EAAsBxgB,GAC9E,GAAIoZ,EAAO,CACV,IAAI5a,EAAW,GAEdA,EADGoB,EAAAA,GAAeI,IAAUA,EAAQ,EACzBoZ,EAAMzZ,IAAI,gBAAiBnB,GAG3B4a,EAAMzZ,IAAI,WAAYnB,GAG7BoB,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,MAAM9C,EAAS8c,EAAMzZ,IAAI,SAAUzF,KAAKyF,IAAI,UAAU,IAErCzF,KAAKyF,IAAI,YAEpBrD,GAKJ8c,EAAM5S,IAAI,WAAY,YACtB4S,EAAM5S,IAAI,IAAK,KALf4S,EAAM5S,IAAI,WAAY,YACtB4S,EAAM5S,IAAI,IAAK9J,EAAAA,KAQXJ,GAKJ8c,EAAM5S,IAAI,IAAK,GACf4S,EAAM5S,IAAI,WAAY,cALtB4S,EAAM5S,IAAI,SAAK/E,GACf2X,EAAM5S,IAAI,WAAY,aAQpB5G,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlD4a,EAAM5S,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IACzClF,KAAKulB,iBAAiBrG,EAAOha,EAAUga,EAAMzZ,IAAI,cAAe,GAAIyZ,EAAMzZ,IAAI,cAAe,G,CAE/F,CAKO8gB,UAAAA,CAAWtI,EAAa/Y,EAAmBohB,GACjD,GAAIrI,EAAM,CACJvY,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAW2Z,EAAKxY,IAAI,WAAY,IAChCC,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlD2Z,EAAK3R,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IAExClF,KAAKulB,iBAAiBtH,EAAM/Y,EAAU,EAAG,E,CAE3C,CAKOshB,YAAAA,CAAazG,EAAqB7a,EAAmBohB,GAC3D,GAAIvG,EAAQ,CAEX,MAAM3W,EAAS2W,EAAOta,IAAI,UAC1B,GAAI2D,EAAQ,CACN1D,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAWyb,EAAOta,IAAI,WAAY,IAElCC,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlD,IAAImiB,EAAiBzmB,KAAKyG,KAAKwb,kBAAkB/c,EAAUZ,GACvDoiB,EAAiB1mB,KAAKyG,KAAK8X,SAASkI,GACpCrT,GAAK,EAKT,GAJIpT,KAAKyF,IAAI,cACZ2N,EAAI,GAGD2M,EAAOta,IAAI,WACd,GAAIihB,EAAgB,CACnB,IAAIC,EAAiBD,EAAejhB,IAAI,UACpCkhB,GACHvd,EAAOkD,IAAI,IAAKqa,EAAelb,IAAMkb,EAAe5hB,SAAWqO,E,MAIhEhK,EAAOkD,IAAI,IAAK,GAIlBtM,KAAKyG,KAAK8X,SAASkI,GAAkB1G,EACrC3W,EAAOkD,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IAC1ClF,KAAKulB,iBAAiBnc,EAAQlE,EAAU,EAAG,E,EAG9C,CAKO0hB,UAAAA,CAAWtlB,EAAiB4D,EAAmBohB,GACrD,GAAIhlB,EAAM,CACJoE,EAAAA,GAAeR,KACnBA,EAAW,GAEPQ,EAAAA,GAAe4gB,KACnBA,EAAc,GAGf,IAAIO,EAAK7mB,KAAKklB,qBAAqBhgB,GAC/B4hB,EAAK9mB,KAAKklB,qBAAqBoB,GAEnCtmB,KAAK+mB,eAAezlB,EAAMulB,EAAIC,E,CAEhC,CAEUC,cAAAA,CAAezlB,EAAgBulB,EAAYC,GACpDxlB,EAAKgL,IAAI,QAASnD,IAGjB,MAAMG,EAAItJ,KAAKyG,KAAM+G,cAAczI,SAC7BwE,EAAIvJ,KAAK8E,QAEXgiB,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAEbD,EAAKtd,GAAKud,EAAK,IAWnB3d,EAAQK,OAAOqd,EAAI,GACnB1d,EAAQM,OAAOqd,EAAI,GACnB3d,EAAQM,OAAOqd,EAAIxd,GACnBH,EAAQM,OAAOod,EAAIvd,GACnBH,EAAQM,OAAOod,EAAI,GAAE,GAEvB,CAKO1E,eAAAA,CAAgB5N,EAAkBrP,GACxClF,KAAKwlB,iBAAiBjR,EAAS,CAAE/I,EAAGxL,KAAKklB,qBAAqBhgB,GAAWuG,EAAG,GAC7E,CAKO2T,mBAAAA,CAAoB7K,GAC1B,MAAMnS,EAASpC,KAAKyF,IAAI,UAClBuhB,EAAM,IAEZ,IAAIzN,EAASvZ,KAAKsN,SAASsH,SAAS,CAAEpJ,EAAG,EAAGC,EAAG,IAC3CD,EAAI+N,EAAO/N,EACXC,EAAI,EACJlC,EAAIvJ,KAAK4e,aACTtV,EAAI0d,EAEJC,EAAoC,KAEpCjnB,KAAKyF,IAAI,YACRrD,GACH6kB,EAAqB,KACrBxb,EAAI8N,EAAO9N,EACXnC,EAAI0d,IAGJC,EAAqB,OACrBxb,EAAI8N,EAAO9N,EAAIub,EACf1d,EAAI0d,GAID5kB,GACH6kB,EAAqB,OACrBxb,EAAI8N,EAAO9N,EAAIub,EACf1d,EAAI0d,IAGJC,EAAqB,KACrBxb,EAAI8N,EAAO9N,EACXnC,EAAI0d,GAIN,MAAM1L,EAAS,CAAEzC,KAAMrN,EAAGsN,MAAOtN,EAAIjC,EAAG0R,IAAKxP,EAAGyP,OAAQzP,EAAInC,GACtD4d,EAAY3S,EAAQ9O,IAAI,UAEzBgJ,EAAAA,GAAkB6M,EAAQ4L,KAC9B3S,EAAQjI,IAAI,SAAUgP,GACtB/G,EAAQjI,IAAI,qBAAsB2a,GAEpC,EAxdA5c,OAAAC,eAAAmb,EAAA,a,gDAAkC,kBAClCpb,OAAAC,eAAAmb,EAAA,c,gDAA0ChC,EAAAA,EAAajI,WAAWC,OAAO,CAACgK,EAAc/J,a,8FCLnF,MAAOyL,UAAsB1D,EAAAA,EAAnCrZ,WAAAA,G,oBAUCC,OAAAC,eAAA,e,yDAEAD,OAAAC,eAAA,c,gDAA0BuC,EAAAA,EAAUnM,IAAIV,KAAKC,MAAO,CAAE8E,OAAQvC,EAAAA,GAAMyC,YAAY,EAAOoG,UAAW,CAAC,OAAQ,IAAK,YA8ejH,CA5eQK,SAAAA,GACN1L,KAAKgiB,UAAU3W,UAAYoD,EAAAA,GAAiBzO,KAAKgiB,UAAU3W,UAAW,CAAC,WAAY,MAC/ErL,KAAKgiB,UAAUtd,UAClB1E,KAAKgiB,UAAU3W,UAAUX,KAAK,YAG/B5K,MAAM4L,YACN1L,KAAKyX,cAAc,SAAU,KAE7B,MAAMiO,EAAe1lB,KAAKie,KAAK4F,SAC/B6B,EAAapZ,IAAI,QAAS9J,EAAAA,IAC1BkjB,EAAapZ,IAAI,SAAU,GAC3BoZ,EAAapZ,IAAI,QAAQ,CAACnD,EAASwc,KAClCxc,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAOkc,EAAS7gB,QAAS,EAAE,IAGpC9E,KAAKsM,IAAI,QAAQ,CAACnD,EAASiT,KAC1BjT,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAO,EAAG2S,EAASrX,SAAS,GAEtC,CAEUggB,OAAAA,CAAQgB,EAAgBC,GACjC,OAAQD,EAAOta,EAAIua,EAAOva,GAAKzL,KAAK+E,QACrC,CAEOuf,QAAAA,GACNxkB,MAAMwkB,WAEN,MAAM7d,EAAOzG,KAAKyG,KAClBA,EAAK4V,WAAW1W,WAAW,WAAY3F,KAAKyF,IAAI,WAChDgB,EAAK4V,WAAW/P,IAAI,KAAM,KAE1B,MAAM2X,EAAQjkB,KAAKikB,MACbvf,EAAW,WACXtC,EAAS,SACToX,EAAQxZ,KAAKwZ,MAEnB,GAAIxZ,KAAKqN,QAAQ3I,IAAa1E,KAAKqN,QAAQjL,GAAS,CAEnD,MAAMwjB,EAAenf,EAAKgE,SAS1B,GAPIzK,KAAKyF,IAAIrD,GACZqE,EAAKsY,OAAO3c,GAGZqE,EAAKof,UAAUzjB,GAGZoX,EAAO,CACV,GAAIxZ,KAAKyF,IAAIf,GAAW,CACvB,MAAM+F,EAAW+O,EAAM3D,mBAAmBpL,UACX,GAA3BA,EAASwO,QAAQxS,IACpBgE,EAAS4N,UAAU5R,EAAM,GAE1BA,EAAKsY,OAAOra,GACZkhB,EAAavN,UAAUrY,KAAM,E,KAEzB,CACJ,MAAMyK,EAAW+O,EAAM9M,kBAAkBjC,UACV,GAA3BA,EAASwO,QAAQxS,IACpBgE,EAAS4N,UAAU5R,GAEpBA,EAAKof,UAAUnhB,GAEfkhB,EAAavN,UAAUrY,K,CAGxByG,EAAK4V,WAAW4C,eAChBjf,KAAKugB,OAAOnR,MAAM8P,IACjBA,EAAMD,cAAc,IAErBjf,KAAK+L,KAAK+Z,kB,CAEXrf,EAAK+Y,e,CAGN,MAAMjW,EAAI9C,EAAKsV,gBAAgBjX,QAE3B0U,IACCxZ,KAAKyF,IAAIf,GACZuf,EAAM3X,IAAI,UAAW,GAGrB2X,EAAM3X,IAAI,UAAW/C,IAIvB0a,EAAMte,WAAW,QAAS4D,EAC3B,CAKOwP,WAAAA,GACNjZ,MAAMiZ,cACN,MAAMtS,EAAOzG,KAAKyG,KACQ,MAAtBA,EAAKhB,IAAI,WACZgB,EAAK6F,IAAI,SAAU9J,EAAAA,IAEpB,MAAMsI,EAAmB9K,KAAKC,MAAM6K,iBACpCrE,EAAK6F,IAAI,SAAUxB,GACnBrE,EAAKsV,gBAAgBzP,IAAI,SAAU9J,EAAAA,IACnCiE,EAAKuV,WAAW1P,IAAI,SAAUxB,EAC/B,CAEOmW,gBAAAA,GACN,MAAMxa,EAAOzG,KAAKyG,KACZgF,EAAIhF,EAAKgF,IAAMgD,EAAAA,GAAuBhI,EAAKhB,IAAI,UAAW,GAAIgB,EAAK1B,UACzE0B,EAAK+G,cAAclB,IAAI,IAAKb,GAC5BhF,EAAKkG,iBAAiBL,IAAI,IAAKb,GAC/BhF,EAAKmG,iBAAiBN,IAAI,IAAKtM,KAAKwL,KAEpC,MAAMgO,EAAQ/S,EAAK+S,MACnB,GAAIA,EAAO,CACV,MAAMtO,EAAgBsO,EAAMtO,cACtB8Q,EAAavV,EAAKuV,WACxB,IAAIjX,EAAS0B,EAAKhB,IAAI,YAAa,GAE/BuW,EAAWvR,SAAS+F,OAAS,GAChCzL,EAAS0B,EAAKuV,WAAWjX,SACzB0B,EAAK6F,IAAI,YAAavH,EAAS,IAG/BiX,EAAW1P,IAAI,SAAUvH,GAE1BiX,EAAWzb,OAAO,CAAEkL,EAAGhF,EAAKgF,IAAM1G,EAAQyG,GAAI,EAAG1G,MAAOoG,EAAcpG,QAAU,G,CAElF,CAKO8Z,UAAAA,GACN,OAAO5e,KAAKyG,KAAK2gB,aAClB,CAQOhB,eAAAA,CAAgBlhB,GACtB,MAAO,CAAEsG,EAAG,EAAGC,EAAGzL,KAAKklB,qBAAqBhgB,GAC7C,CAKOuc,WAAAA,CAAYvC,EAAmBha,EAAmBohB,EAAsBxgB,GAC9E,GAAIoZ,EAAO,CACLxZ,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAW,GAEdA,EADGoB,EAAAA,GAAeI,IAAUA,EAAQ,EACzBoZ,EAAMzZ,IAAI,gBAAiBnB,GAG3B4a,EAAMzZ,IAAI,WAAYnB,GAGlC,MAAMI,EAAW1E,KAAKyF,IAAI,YACpBrD,EAAS8c,EAAMzZ,IAAI,SAAUzF,KAAKyF,IAAI,UAAU,IAElDf,GACHwa,EAAM5S,IAAI,IAAK,GAEXlK,EACH8c,EAAM5S,IAAI,WAAY,YAGtB4S,EAAM5S,IAAI,WAAY,aAInBlK,GACH8c,EAAM5S,IAAI,IAAK,GACf4S,EAAM5S,IAAI,WAAY,cAGtB4S,EAAM5S,IAAI,SAAK/E,GACf2X,EAAM5S,IAAI,WAAY,aAIpB5G,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlD4a,EAAM5S,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IACzClF,KAAKulB,iBAAiBrG,EAAOha,EAAUga,EAAMzZ,IAAI,cAAe,GAAIyZ,EAAMzZ,IAAI,cAAe,G,CAE/F,CAKO8gB,UAAAA,CAAWtI,EAAa/Y,EAAmBohB,GACjD,GAAIrI,EAAM,CACJvY,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAW2Z,EAAKxY,IAAI,WAAY,IAChCC,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlD2Z,EAAK3R,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IACxClF,KAAKulB,iBAAiBtH,EAAM/Y,EAAU,EAAG,E,CAE3C,CAKOmhB,UAAAA,CAAWvG,EAAiB5a,EAAmBohB,EAAsBxgB,GAC3E,GAAIga,EAAM,CACJpa,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAW,GAEdA,EADGoB,EAAAA,GAAeI,IAAUA,EAAQ,EACzBga,EAAKra,IAAI,gBAAiBnB,GAG1Bwb,EAAKra,IAAI,WAAYnB,GAG7BoB,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAGlDwb,EAAKxT,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IAExC,IAAIsL,EAASsP,EAAKra,IAAI,SAAU,GAChC,MAAMrD,EAAS0d,EAAKra,IAAI,SAAUzF,KAAKyF,IAAI,UAAU,IAEjDzF,KAAKyF,IAAI,aACZqa,EAAKxT,IAAI,IAAK,GACVlK,IACHoO,IAAW,IAIPpO,IACJoO,IAAW,GAGbsP,EAAKxT,IAAI,QAASnD,IACjBA,EAAQK,OAAO,EAAG,GAClBL,EAAQM,OAAO+G,EAAQ,EAAE,IAG1BxQ,KAAKulB,iBAAiBzF,EAAM5a,EAAU4a,EAAKra,IAAI,cAAe,GAAIqa,EAAKra,IAAI,cAAe,G,CAE5F,CAKO+gB,YAAAA,CAAazG,EAAqB7a,EAAmBohB,GAC3D,GAAIvG,EAAQ,CAEX,MAAM3W,EAAS2W,EAAOta,IAAI,UAC1B,GAAI2D,EAAQ,CAEN1D,EAAAA,GAAeR,KACnBA,EAAW,GAGZ,IAAIZ,EAAWyb,EAAOta,IAAI,WAAY,IAClCC,EAAAA,GAAe4gB,IAAgBA,GAAephB,IACjDA,IAAuBohB,EAAcphB,GAAYZ,GAIlD,IAAImiB,EAAiBzmB,KAAKyG,KAAKwb,kBAAkB/c,EAAUZ,GACvDoiB,EAAiB1mB,KAAKyG,KAAK8X,SAASkI,GACpCrT,EAAI,EAKR,GAJIpT,KAAKyF,IAAI,cACZ2N,GAAK,GAGF2M,EAAOta,IAAI,WACd,GAAIihB,EAAgB,CACnB,IAAIC,EAAiBD,EAAejhB,IAAI,UACpCkhB,GACHvd,EAAOkD,IAAI,IAAKqa,EAAenb,IAAMmb,EAAe7hB,QAAUsO,E,MAI/DhK,EAAOkD,IAAI,IAAK,GAIlBtM,KAAKyG,KAAK8X,SAASkI,GAAkB1G,EAGrC3W,EAAOkD,IAAI,IAAKtM,KAAKklB,qBAAqBhgB,IAE1ClF,KAAKulB,iBAAiBnc,EAAQlE,EAAU,EAAG,E,EAG9C,CAKO0hB,UAAAA,CAAWtlB,EAAiB4D,EAAmBohB,GACrD,GAAIhlB,EAAM,CACJoE,EAAAA,GAAeR,KACnBA,EAAW,GAEPQ,EAAAA,GAAe4gB,KACnBA,EAAc,GAGf,IAAIe,EAAKrnB,KAAKklB,qBAAqBhgB,GAC/BoiB,EAAKtnB,KAAKklB,qBAAqBoB,GAEnCtmB,KAAK+mB,eAAezlB,EAAM+lB,EAAIC,E,CAEhC,CAEUP,cAAAA,CAAezlB,EAAgB+lB,EAAYC,GACpDhmB,EAAKgL,IAAI,QAASnD,IAEjB,MAAMI,EAAIvJ,KAAKyG,KAAM+G,cAAc1I,QAC7BwE,EAAItJ,KAAK+E,SAEXuiB,EAAKD,KACPC,EAAID,GAAM,CAACA,EAAIC,IAGbD,EAAK/d,GAAKge,EAAK,IAOnBne,EAAQK,OAAO,EAAG6d,GAClBle,EAAQM,OAAOF,EAAG8d,GAClBle,EAAQM,OAAOF,EAAG+d,GAClBne,EAAQM,OAAO,EAAG6d,GAClBne,EAAQM,OAAO,EAAG4d,GAAG,GAEvB,CAQOnC,oBAAAA,CAAqBhgB,GAC3B,OAAKlF,KAAK0e,WAIDxZ,EAAWlF,KAAK6c,QAAU7c,KAAK2e,aAH/B3e,KAAK8c,KAAO5X,GAAYlF,KAAK2e,WAKvC,CAKOwD,eAAAA,CAAgB5N,EAAkBrP,GACxClF,KAAKwlB,iBAAiBjR,EAAS,CAAE/I,EAAG,EAAGC,EAAGzL,KAAKklB,qBAAqBhgB,IACrE,CAKOka,mBAAAA,CAAoB7K,GAC1B,MAAMnS,EAASpC,KAAKyF,IAAI,UAClBuhB,EAAM,IAEZ,IAAIzN,EAASvZ,KAAKsN,SAASsH,SAAS,CAAEpJ,EAAG,EAAGC,EAAG,IAC3CA,EAAI8N,EAAO9N,EACXD,EAAI,EACJlC,EAAItJ,KAAK4e,aACTrV,EAAIyd,EAEJC,EAAuC,QAEvCjnB,KAAKyF,IAAI,YACRrD,GACH6kB,EAAqB,QACrBzb,EAAI+N,EAAO/N,EAAIwb,EACfzd,EAAIyd,IAGJC,EAAqB,OACrBzb,EAAI+N,EAAO/N,EACXjC,EAAIyd,GAID5kB,GACH6kB,EAAqB,OACrBzb,EAAI+N,EAAO/N,EACXjC,EAAIyd,IAGJC,EAAqB,QACrBzb,EAAI+N,EAAO/N,EAAIwb,EACfzd,EAAIyd,GAIN,MAAM1L,EAAS,CAAEzC,KAAMrN,EAAGsN,MAAOtN,EAAIjC,EAAG0R,IAAKxP,EAAGyP,OAAQzP,EAAInC,GACtD4d,EAAY3S,EAAQ9O,IAAI,UAEzBgJ,EAAAA,GAAkB6M,EAAQ4L,KAC9B3S,EAAQjI,IAAI,SAAUgP,GACtB/G,EAAQjI,IAAI,qBAAsB2a,GAEpC,CAKOpI,SAAAA,GACN,MAAMpY,EAAOzG,KAAKyG,KACZ4C,EAAS5C,EAAK4C,OACpB,GAAIA,EAAQ,CACX,MAAMC,EAAID,EAAO+d,cACjBpnB,KAAKkmB,IAAMlmB,KAAK4e,aAAetV,EAC/BtJ,KAAKimB,IAAMxf,EAAKgF,IAAMnC,C,CAExB,CAKO2N,cAAAA,CAAe/R,GACrB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAazB,OATA5X,GAFAA,GAAYlF,KAAKimB,MAEMtiB,EAAMD,GAAS1D,KAAKkmB,IAG1ChhB,EADGlF,KAAKyF,IAAI,YACD/B,EAAQwB,EAGRvB,EAAMuB,CAInB,CAKO2d,gBAAAA,CAAiB3d,GACvB,MAAMxB,EAAQ1D,KAAK6c,QAAU,EACvBlZ,EAAM3D,KAAK8c,MAAQ,EAazB,OAXI9c,KAAKyF,IAAI,YACZP,GAAsBxB,EAGtBwB,EAAWvB,EAAMuB,EAGlBA,EAAWA,GAAYvB,EAAMD,GAAS1D,KAAKkmB,IAE3ChhB,GAAYlF,KAAKimB,GAGlB,CAMO5W,WAAAA,CAAYnK,GAClB,OAAKlF,KAAKyF,IAAI,YAGPP,EAFC,EAAIA,CAGb,EAtfAmF,OAAAC,eAAA6c,EAAA,a,gDAAkC,kBAClC9c,OAAAC,eAAA6c,EAAA,c,gDAA0C1D,EAAAA,EAAajI,WAAWC,OAAO,CAAC0L,EAAczL,a,kDCtBnF,MAAOoI,UAAavY,EAAAA,EAQlB6B,cAAAA,GACNtN,MAAMsN,kBAEFpN,KAAKunB,eAAe,UAAYvnB,KAAKunB,eAAe,aACvDvnB,KAAKslB,QAAS,EAEhB,EATAjb,OAAAC,eAAAwZ,EAAA,a,gDAAkC,SAClCzZ,OAAAC,eAAAwZ,EAAA,c,gDAA0CvY,EAAAA,EAASiQ,WAAWC,OAAO,CAACqI,EAAKpI,a,gHCoTtE,MAAO8L,UAA0C7L,EAAAA,EAAvDvR,WAAAA,G,oBASCC,OAAAC,eAAA,uB,iDAAoC,IACpCD,OAAAC,eAAA,gC,iDAA6C,IAC7CD,OAAAC,eAAA,oB,iDAAwB,IACxBD,OAAAC,eAAA,qB,gDAAiC,IACjCD,OAAAC,eAAA,iB,yDACAD,OAAAC,eAAA,iB,yDAEAD,OAAAC,eAAA,oB,yDAEAD,OAAAC,eAAA,mB,gDAA+B,IAC/BD,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,wB,gDAAoC,GA++CrC,CA3+CQ0D,iBAAAA,GACNhO,KAAKynB,gBAAiB,EACtBznB,KAAKqlB,WACN,CAKOjH,0BAAAA,GACNpe,KAAK0nB,yBAA0B,EAC/B1nB,KAAKqlB,WACN,CAEU3Z,SAAAA,GACT1L,KAAKgiB,UAAU3W,UAAYoD,EAAAA,GAAiBzO,KAAKgiB,UAAU3W,UAAW,CAAC,SACvErL,KAAKyX,cAAc,OAAQ,SAC3BzX,KAAK+e,OAAO,SACZjf,MAAM4L,WACP,CAEOsJ,gBAAAA,GAGN,GAFAlV,MAAMkV,mBAEFhV,KAAKqN,QAAQ,gBAAiB,CACbrN,KAAKmV,cAAcwS,cAElC3nB,KAAK4nB,SACR5nB,KAAK4nB,QAAQ/Z,UAGf,IAAI8Z,EAAe3nB,KAAKyF,IAAI,gBACxBkiB,IACH3nB,KAAK4nB,QAAU,IAAIC,EAAAA,GAAc,CAChCF,EAAapI,UAAU,qBAAqB,KAC3Cvf,KAAK0nB,yBAA0B,CAAI,IAEpCC,EAAapI,UAAU,qBAAqB,KAC3Cvf,KAAK0nB,yBAA0B,CAAI,M,CAMvC,IAAII,GAAY,EAchB,IAbI9nB,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,iBAAmBrN,KAAKqN,QAAQ,mBAC9Fya,GAAY,EACZ9nB,KAAKqc,WAAW/P,IAAI,OAAQ,MAIzBtM,KAAK0iB,YAAc1iB,KAAKynB,gBAAkBznB,KAAK+nB,cAAgBD,GAAa9nB,KAAKunB,eAAe,UAAYvnB,KAAKunB,eAAe,WAAavnB,KAAKqN,QAAQ,aAAerN,KAAKqN,QAAQ,aAAerN,KAAKqN,QAAQ,gBAAkBrN,KAAKqN,QAAQ,gBAAkBrN,KAAKqN,QAAQ,cAAgBrN,KAAKqN,QAAQ,iBAAmBrN,KAAKqN,QAAQ,4BAChVrN,KAAKgoB,aACLhoB,KAAKynB,gBAAiB,GAGvBznB,KAAKioB,mBAEDjoB,KAAK0nB,0BAA4B1nB,KAAK2R,YAAc3R,KAAKyF,IAAI,YAAY,GAAO,CAEnF,MAAM+T,EAAQxZ,KAAKwZ,MACnB,IAAI0O,GAAQ,EAEZ,GAAI1O,EAAO,CACV,MAAM2O,EAASnoB,KAAKyF,IAAI,YAAYsB,WAAW,UACjC,KAAVohB,EACH3O,EAAM3N,MAAMuD,MAAM3I,IACK,aAAlBA,EAAKiV,YACRwM,GAAQ,E,IAIQ,KAAVC,GACR3O,EAAM1N,MAAMsD,MAAM3I,IACK,aAAlBA,EAAKiV,YACRwM,GAAQ,E,IAMRA,GACHloB,KAAKooB,sBAENpoB,KAAK0nB,yBAA0B,C,CAGhC1nB,KAAKqoB,cAEDroB,KAAK0iB,YAAc1iB,KAAK+nB,cAAgB/nB,KAAKqN,QAAQ,UAAYrN,KAAKqN,QAAQ,QAAUrN,KAAKunB,eAAe,QAAUvnB,KAAKunB,eAAe,iBAAmBvnB,KAAKunB,eAAe,iBAAmBvnB,KAAKunB,eAAe,QAAUvnB,KAAKunB,eAAe,SAAWvnB,KAAKunB,eAAe,UAAYvnB,KAAKunB,eAAe,WAAavnB,KAAKqN,QAAQ,kBAClVrN,KAAKsoB,qBACLtoB,KAAKuoB,oBACLvoB,KAAKse,qBAGNte,KAAKwoB,WAAaxoB,KAAK6H,WAExB,CAEUogB,gBAAAA,GACLjoB,KAAK0iB,aAAe1iB,KAAKyoB,cAC5BzoB,KAAK0nB,yBAA0B,EAC/B1nB,KAAKyoB,aAAc,EAErB,CAEOhG,WAAAA,GACN3iB,MAAM2iB,cACNziB,KAAKyoB,aAAc,CACpB,CAEUJ,UAAAA,GAEV,CAEUK,WAAAA,CAAY/hB,GACrB,MAAMgiB,EAAe3oB,KAAKyF,IAAI,gBACxBmjB,EAAY5oB,KAAK6oB,qBAEvB,IAAIjmB,EAAO,GAQX,OALCA,EADG+lB,EACIC,EAAUE,OAAOniB,EAAOgiB,GAGxBC,EAAUE,OAAOniB,OAAOY,EAAWvH,KAAK+G,WAAW,sBAEpDnE,CACR,CAEU2lB,iBAAAA,GACT,MAAMthB,EAAMjH,KAAK+G,WAAW,OACtBwI,EAAMvP,KAAK+G,WAAW,OAE5B,GAAIrB,EAAAA,GAAeuB,IAAQvB,EAAAA,GAAe6J,GAAM,CAE/C,MAAMzH,EAAc9H,KAAKyF,IAAI,eACvBuC,EAAOhI,KAAK+G,WAAW,QACvBgiB,EAAe/oB,KAAK+G,WAAW,gBAC/BiiB,EAAehpB,KAAK+G,WAAW,gBAAmBiB,EAExD,IAAIrB,EAAQoiB,EAAe/gB,EACvBihB,EAAkB,EAClBC,EAAiBjiB,EAErB,GAAIa,EAAa,CAGhB,GAFAnB,EAAQ3G,KAAKmpB,gBAETxiB,EAAQoiB,EACX,KAAOpiB,EAAQoiB,GACdpiB,GAASqB,EAIXkhB,EAASviB,EAELuiB,GAAU,IACbA,EAAS,EACLlhB,EAAO,IAETkhB,EADGxjB,EAAAA,GAAe1F,KAAKopB,aACdppB,KAAKopB,YAGLzhB,KAAK0hB,IAAI,IAAK,MAK1BJ,EAAkBthB,KAAK2hB,IAAIN,EAAehhB,GAAQL,KAAK4hB,OAAS5hB,KAAK2hB,IAAIJ,GAAUvhB,KAAK4hB,OAEpFN,EAAkB,IACrBtiB,EAAQgB,KAAK0hB,IAAI,GAAI1hB,KAAK2hB,IAAIJ,GAAUvhB,KAAK4hB,OAAS,I,CAKxD,MAAMnN,EAAWpc,KAAKyF,IAAI,YACpB+jB,EAAqBpN,EAAS3W,IAAI,sBAClCgkB,EAAmBrN,EAAS3W,IAAI,mBAAoB+jB,GAE1D,IAAIE,EAAY/hB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMhiB,KAAK2hB,IAAI3hB,KAAKsI,IAAIjI,IAASL,KAAK4hB,SAExE,MAAMK,EAAejiB,KAAKC,MAAMI,EAAO0hB,GAEvC,IAAIG,EAAiB,EAEjB5hB,EAAAA,GAAY2hB,EAAe,EAAG,IAAM,GAAK,IAC5CC,EAAiB,GAGd5hB,EAAAA,GAAY2hB,EAAe,GAAI,IAAM,GAAK,IAC7CC,EAAiB,IAGlB,IAAIC,EAAY9hB,EAAO6hB,EAGnBxX,EAAI,EACJ+N,EAAI,EACJlL,GAAYpR,IAEhB,KAAO6C,EAAQqiB,GAAc,CAC5B,IAAI1jB,EACAtF,KAAK6T,UAAUrD,OAAS6B,EAAI,GAC/B/M,EAAW,IAAIiX,EAAAA,EAASvc,UAAMuH,EAAW,CAAC,GAC1CvH,KAAK+pB,WAAWrf,KAAKpF,GACrBtF,KAAKgqB,gBAAgB1kB,IAGrBA,EAAWtF,KAAK6T,UAAUxB,GAG3BrS,KAAK6d,cAAcvY,EAAU,IAC7BtF,KAAKggB,gBAAgB1a,GAAU,GAE/BA,EAASoP,OAAO,QAAS/N,GACzB,MAAMuY,EAAQ5Z,EAASG,IAAI,SACvByZ,GACHA,EAAM5S,IAAI,OAAQtM,KAAK0oB,YAAY/hB,IAGpC3G,KAAK+d,iBAAiBzY,GAEtB,IAAI2kB,EAAYtjB,EAchB,GAbKmB,GAIAmhB,EAAkB,EACrBgB,EAAYtiB,KAAK0hB,IAAI,GAAI1hB,KAAK2hB,IAAIJ,GAAUvhB,KAAK4hB,OAASlX,EAAI,IAJ/D4X,GAAajiB,EAYVyhB,EAAkB,CACrB,IAAIS,EAAavjB,EAAQmjB,EAEzB,GAAIhiB,EAAa,CAChB,GAAImhB,EAAkB,EAAG,CAExBa,EADsB9pB,KAAKmqB,cAAcxjB,EAAOsjB,EAAW,IAC/BjiB,I,CAE7BkiB,EAAavjB,EAAQmjB,C,CAGtB,KAAOI,EAAaD,EAAmB,MAAPjiB,GAAsB,CACrD,IAAIoiB,EACApqB,KAAKqqB,eAAe7Z,OAAS4P,EAAI,GACpCgK,EAAgB,IAAI7N,EAAAA,EAASvc,UAAMuH,EAAW,CAAC,GAC/CvH,KAAKqqB,eAAe3f,KAAK0f,GACzBpqB,KAAKgqB,gBAAgBI,IAGrBA,EAAgBpqB,KAAKqqB,eAAejK,GAGrCpgB,KAAK6d,cAAcuM,EAAe,CAAC,UAAU,GAC7CpqB,KAAKggB,gBAAgBoK,GAAe,GACpCA,EAAc1V,OAAO,QAASwV,GAE9B,MAAMI,EAAaF,EAAc3kB,IAAI,SACjC6kB,IACCd,EACHc,EAAWhe,IAAI,OAAQtM,KAAK0oB,YAAYwB,IAGxCI,EAAW3kB,WAAW,WAAW,IAInC3F,KAAK+d,iBAAiBqM,GACtBF,GAAcJ,EACd1J,G,EAMF,GAFAzZ,EAAQsjB,EAEJ/U,GAAYvO,EACf,MAGD,IAAI+iB,EAAY/hB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMhiB,KAAK2hB,IAAI3hB,KAAKsI,IAAIjI,IAASL,KAAK4hB,SACxE,GAAIG,EAAY,IAAM5hB,EAAa,CAElC,IAAIyiB,EAAW5iB,KAAKC,MAAMD,KAAKsI,IAAItI,KAAK2hB,IAAI3hB,KAAKsI,IAAIyZ,IAAc/hB,KAAK4hB,SAAW,EAEnF5iB,EAAQsB,EAAAA,GAAYtB,EAAO4jB,E,CAE5BlY,IAEA6C,EAAWvO,C,CAGZ,IAAK,IAAI6jB,EAAInY,EAAGmY,EAAIxqB,KAAK6T,UAAUrD,OAAQga,IAC1CxqB,KAAKggB,gBAAgBhgB,KAAK6T,UAAU2W,IAAI,GAGzC,IAAK,IAAIA,EAAIpK,EAAGoK,EAAIxqB,KAAKqqB,eAAe7Z,OAAQga,IAC/CxqB,KAAKggB,gBAAgBhgB,KAAKqqB,eAAeG,IAAI,GAG9CrkB,EAAAA,GAAYnG,KAAK0N,QAASA,IACrBA,EAAO+c,QACV/c,EAAO0I,gB,IAITpW,KAAKmhB,c,CAEP,CAGOpD,gBAAAA,CAAiBzY,EAA+CQ,GACtE,IAAIsW,EAAWpc,KAAKyF,IAAI,YACpBkB,EAAQrB,EAASG,IAAI,SACrBmB,EAAWtB,EAASG,IAAI,YAExBP,EAAWlF,KAAK0qB,gBAAgB/jB,GAEhC2f,EAAcphB,EACdylB,EAAkB3qB,KAAK0qB,gBAAgB/jB,EAAQ3G,KAAK+G,WAAW,SAE/DrB,EAAAA,GAAekB,KAClB0f,EAActmB,KAAK0qB,gBAAgB9jB,GACnC+jB,EAAkBrE,GAGfhhB,EAASG,IAAI,YACA,MAAZmB,IACH+jB,EAAkBzlB,GAIpB,IAAI0lB,EAAmBtE,EAEnBuE,EAAgBvlB,EAASG,IAAI,iBACZ,MAAjBolB,IACHD,EAAmB5qB,KAAK0qB,gBAAgBG,IAGzCzO,EAASqF,YAAYnc,EAASG,IAAI,SAAUP,EAAU0lB,EAAkB9kB,GAExE,MAAMmY,EAAO3Y,EAASG,IAAI,QAmB1B,GAlBA2W,EAASmK,WAAWtI,EAAM/Y,EAAUohB,GAChCrI,IACCtX,GAAS3G,KAAKyF,IAAI,YAAa,IAClCwY,EAAKc,OAAO,QACZd,EAAKgB,gBAEGhB,EAAK6M,OAAO,UACpB7M,EAAK4H,UAAU,QACf5H,EAAKgB,iBAIP7C,EAASiK,WAAW/gB,EAASG,IAAI,QAASP,EAAU0lB,EAAkB9kB,GACtEsW,EAASwK,WAAWthB,EAASG,IAAI,YAAaP,EAAUylB,GAExD3qB,KAAK8gB,eAAexb,GACpB8W,EAASoK,aAAalhB,EAASG,IAAI,UAAWP,EAAUohB,IAEnDhhB,EAASG,IAAI,WAAY,CAC7B,MAAMJ,EAAWrF,KAAKyF,IAAI,YACtBJ,GACHA,EAASC,E,CAGZ,CAGUgjB,kBAAAA,GACT,IAAIS,EAAuB/oB,KAAK+qB,gBAAgB/qB,KAAKyF,IAAI,QAAS,IAC9DujB,EAAuBhpB,KAAK+qB,gBAAgB/qB,KAAKyF,IAAI,MAAO,IAEhE,MAAMue,EAAYhkB,KAAKyF,IAAI,YAAYue,YACvC,IAAIgH,EAA0BhrB,KAAKmqB,cAAcpB,EAAcC,EAAchF,GAAW,GAEpFiH,EAAoBxc,EAAAA,GAAqBuc,EAAWhjB,MACxDhI,KAAKyX,cAAc,oBAAqBwT,GAExClC,EAAe9gB,EAAAA,GAAY8gB,EAAckC,GACzCjC,EAAe/gB,EAAAA,GAAY+gB,EAAciC,GAEzCD,EAAahrB,KAAKmqB,cAAcpB,EAAcC,EAAchF,GAAW,GAEvE,IAAIhc,EAAOgjB,EAAWhjB,KACtB+gB,EAAeiC,EAAW/jB,IAC1B+hB,EAAegC,EAAWzb,IAEtBvP,KAAK+G,WAAW,kBAAoBgiB,GAAgB/oB,KAAK+G,WAAW,kBAAoBiiB,GAAgBhpB,KAAK+G,WAAW,UAAYiB,IAEvIhI,KAAKyX,cAAc,eAAgBsR,GACnC/oB,KAAKyX,cAAc,eAAgBuR,GAEnChpB,KAAKyX,cAAc,OAAQzP,GAE7B,CASO+iB,eAAAA,CAAgB7lB,GACtB,MAAM+B,EAAMjH,KAAK+G,WAAW,OACtBwI,EAAMvP,KAAK+G,WAAW,OAE5B,OAAK/G,KAAKyF,IAAI,eAINkC,KAAK0hB,IAAI1hB,KAAKujB,GAAIhmB,GAAayC,KAAK2hB,IAAI/Z,GAAO5H,KAAK4hB,OAAS5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,QAAW5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,QAAU5hB,KAAK4hB,QAHjIrkB,GAAYqK,EAAMtI,GAAOA,CAKlC,CAQOyjB,eAAAA,CAAgB/jB,GAEtB,MAAMM,EAAMjH,KAAK+G,WAAW,OACtBwI,EAAMvP,KAAK+G,WAAW,OAE5B,GAAK/G,KAAKyF,IAAI,eAGT,CACJ,GAAIkB,GAAS,EAAG,CACf,IAAIwkB,EAAcnrB,KAAKyF,IAAI,eACvBC,EAAAA,GAAeylB,KAClBxkB,EAAQwkB,E,CAGV,OAAQxjB,KAAK2hB,IAAI3iB,GAASgB,KAAK4hB,OAAS5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,SAAY5hB,KAAK2hB,IAAI/Z,GAAO5H,KAAK4hB,OAAS5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,O,CAT5H,OAAQ5iB,EAAQM,IAAQsI,EAAMtI,EAWhC,CAKOmkB,oBAAAA,CAAqBzkB,GAE3B,MAAMM,EAAMjH,KAAK+G,WAAW,YACtBwI,EAAMvP,KAAK+G,WAAW,YAE5B,GAAK/G,KAAKyF,IAAI,eAGT,CACJ,GAAIkB,GAAS,EAAG,CACf,IAAIwkB,EAAcnrB,KAAKyF,IAAI,eACvBC,EAAAA,GAAeylB,KAClBxkB,EAAQwkB,E,CAGV,OAAQxjB,KAAK2hB,IAAI3iB,GAASgB,KAAK4hB,OAAS5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,SAAY5hB,KAAK2hB,IAAI/Z,GAAO5H,KAAK4hB,OAAS5hB,KAAK2hB,IAAIriB,GAAOU,KAAK4hB,O,CAT5H,OAAQ5iB,EAAQM,IAAQsI,EAAMtI,EAWhC,CAUOokB,IAAAA,CAAK1kB,EAAerC,EAAkBuD,GAC5ClB,EAAQkB,GAAalB,EAAQkB,GAAavD,EAE1C,MAAMY,EAAWlF,KAAK0qB,gBAAgB/jB,GACtC,OAAO3G,KAAKgiB,UAAU5F,SAAS8I,qBAAqBhgB,EACrD,CAUOomB,IAAAA,CAAK3kB,EAAerC,EAAkBuD,GAC5ClB,EAAQkB,GAAalB,EAAQkB,GAAavD,EAE1C,MAAMY,EAAWlF,KAAK0qB,gBAAgB/jB,GACtC,OAAO3G,KAAKgiB,UAAU5F,SAAS8I,qBAAqBhgB,EACrD,CAKOqmB,sBAAAA,CAAuBjmB,EAAuCkmB,EAAeC,EAAuBC,GAC1G,OAAO1rB,KAAKgiB,UAAU5F,SAAS8I,qBAAqBllB,KAAK2rB,qBAAqBrmB,EAAUkmB,EAAOC,EAAeC,GAC/G,CAKOC,oBAAAA,CAAqBrmB,EAAuCkmB,EAAeC,EAAuBC,GACxG,IAAI/kB,EAAQrB,EAASG,IAAI+lB,GAGzB,GADoBlmB,EAASG,IAAI,gBAChB,CAEhBkB,EAAQA,EAAQ+kB,EADDpmB,EAASoB,UACcklB,wBAAwBtmB,EAAUkmB,E,MAGxE7kB,EAAQ3G,KAAKwoB,YAAc7hB,EAAQ3G,KAAKwoB,YAAckD,EAGvD,OAAO1rB,KAAK0qB,gBAAgB/jB,EAC7B,CAKOklB,sBAAAA,CAAuBvmB,EAAuCkmB,EAAeC,EAAuBC,GAC1G,OAAO1rB,KAAKgiB,UAAU5F,SAAS8I,qBAAqBllB,KAAK8rB,qBAAqBxmB,EAAUkmB,EAAOC,EAAeC,GAC/G,CAKOI,oBAAAA,CAAqBxmB,EAAuCkmB,EAAeC,EAAuBC,GACxG,IAAI/kB,EAAQrB,EAASG,IAAI+lB,GAGzB,GADoBlmB,EAASG,IAAI,gBAChB,CAEhBkB,EAAQA,EAAQ+kB,EADDpmB,EAASoB,UACcqlB,wBAAwBzmB,EAAUkmB,E,MAGxE7kB,EAAQ3G,KAAKwoB,YAAc7hB,EAAQ3G,KAAKwoB,YAAckD,EAGvD,OAAO1rB,KAAK0qB,gBAAgB/jB,EAC7B,CAOOqlB,YAAAA,GACN,OAAOhsB,KAAK0qB,gBAAgB1qB,KAAK6H,YAClC,CAQOA,SAAAA,GACN,MAAMZ,EAAMU,KAAKV,IAAIjH,KAAK+G,WAAW,YAAajD,KAAW9D,KAAK+G,WAAW,gBAAiBjD,MACxFyL,EAAM5H,KAAK4H,IAAIvP,KAAK+G,WAAW,WAAYjD,KAAW9D,KAAK+G,WAAW,eAAgBjD,MAC5F,IAAI+D,EAAY7H,KAAKyF,IAAI,YAAa,GAUtC,OARIoC,EAAYZ,IACfY,EAAYZ,GAGTY,EAAY0H,IACf1H,EAAY0H,GAGN1H,CACR,CAKOokB,YAAAA,CAAatlB,GACnB,OAAOA,CACR,CAEUulB,YAAAA,CAAalkB,GAEtB,OAAI,EAAIA,IAAS,GAChBA,GAAQ,EACDhI,KAAKksB,aAAalkB,IAEnBA,CACR,CAEUmkB,OAAAA,CAAQllB,GACjB,OAAOA,CACR,CAEUmlB,OAAAA,CAAQ7c,GACjB,OAAOA,CACR,CAEO8O,gBAAAA,GACN,GAAIre,KAAKyF,IAAI,mBAAoB,CAChC,IAAIiI,EAAS1N,KAAK0N,OAAO,GACzB,GAAIA,EAAQ,CACX,IAAIsG,EAAatG,EAAOsG,aAExB,GAAItG,EAAOmG,UAAUrD,OAAS,EAAG,CAE5BwD,EAAa,GAChBA,IAED,IAKIwX,EACAa,EANApY,EAAWvG,EAAOuG,WAClBA,EAAWvG,EAAOmG,UAAUrD,QAC/ByD,IAMGvG,EAAOjI,IAAI,UAAYzF,MAC1BwrB,EAAQ,SACRa,EAAK,OAEG3e,EAAOjI,IAAI,UAAYzF,OAC/BwrB,EAAQ,SACRa,EAAK,OAGN,IAAIC,EAAed,EAAQ,UAE3B,GAAIA,EACH,IAAK,IAAInZ,EAAI2B,EAAY3B,EAAI4B,EAAU5B,IAAK,CAC3C,IAAI8H,EAAM,EACNoS,EAAQ,EAEZpmB,EAAAA,GAAYnG,KAAK0N,QAASA,IACzB,IAAKA,EAAOjI,IAAI,oBAAqB,CACpC,IAAIH,EAAWoI,EAAOmG,UAAUxB,GAChC,GAAI/M,EAAU,CACb,IAAIqB,EAAQrB,EAASG,IAAI6mB,GAAuB5e,EAAOjI,IAAI4mB,GAEtD3mB,EAAAA,GAAYiB,KAChBwT,GAAOxT,EACP4lB,GAAS5kB,KAAKsI,IAAItJ,G,MAMtBR,EAAAA,GAAYnG,KAAK0N,QAASA,IACzB,IAAKA,EAAOjI,IAAI,oBAAqB,CACpC,IAAIH,EAAWoI,EAAOmG,UAAUxB,GAChC,GAAI/M,EAAU,CACb,IAAIqB,EAAQrB,EAASG,IAAI6mB,GAAuB5e,EAAOjI,IAAI4mB,GAEtD3mB,EAAAA,GAAYiB,KAChBrB,EAASgH,IAAKkf,EAAQ,QAAiBe,GACvCjnB,EAASgH,IAAKkf,EAAQ,MAAerR,GACrC7U,EAASgH,IAAKkf,EAAQ,eAAwB7kB,EAAQ4lB,EAAQ,K,SAUxE,CAEUnE,mBAAAA,GACT,MAAMnhB,EAAMjH,KAAK+G,WAAW,YACtBwI,EAAMvP,KAAK+G,WAAW,YAEtBylB,EAAaxsB,KAAKyF,IAAI,OACtBgnB,EAAazsB,KAAKyF,IAAI,OAE5B,IAAIinB,EAAW1sB,KAAKyF,IAAI,WAAY,GAChCknB,EAAW3sB,KAAKyF,IAAI,WAAY,GAEhCzF,KAAKyF,IAAI,iBACgB,MAAxBzF,KAAKyF,IAAI,cACZinB,EAAW,IAEgB,MAAxB1sB,KAAKyF,IAAI,cACZknB,EAAW,KAIb,MAAM3I,EAAYhkB,KAAKyF,IAAI,YAAYue,YACjC4I,EAAwB5sB,KAAKyF,IAAI,yBACvC,IAAIY,EAAerG,KAAKyF,IAAI,gBAE5B,GAAIC,EAAAA,GAAeuB,IAAQvB,EAAAA,GAAe6J,GAAM,CAC/C,IAAIwZ,EAAexZ,EACfyZ,EAAe/hB,EAmGnB,GAjGAd,EAAAA,GAAYnG,KAAK0N,QAASA,IACzB,IAAKA,EAAOjI,IAAI,gBAAiB,CAChC,IAAIonB,EACAC,EACJ,MAAMC,EAAiBrf,EAAO3G,WAAW,kBAEzC,GAAI2G,EAAOjI,IAAI,WAAazF,MAC3B,IAAK+sB,EAAgB,CACpB,IAAIC,EAAOtf,EAAO3G,WAAW,QACzBkmB,EAAOvf,EAAO3G,WAAW,QAGF,GAAvB2G,EAAOsG,cAAqBtG,EAAOuG,YAAcvG,EAAOmG,UAAUrD,SACrEwc,OAAOzlB,EACP0lB,OAAO1lB,GAGRslB,EAAYnf,EAAO3G,WAAW,gBAAiBimB,GAC/CF,EAAYpf,EAAO3G,WAAW,gBAAiBkmB,E,OAG5C,GAAIvf,EAAOjI,IAAI,WAAazF,OAC3B+sB,EAAgB,CAEpB,IAAIG,EAAOxf,EAAO3G,WAAW,QACzBomB,EAAOzf,EAAO3G,WAAW,QAGF,GAAvB2G,EAAOsG,cAAqBtG,EAAOuG,YAAcvG,EAAOmG,UAAUrD,SACrE0c,OAAO3lB,EACP4lB,OAAO5lB,GAGRslB,EAAYnf,EAAO3G,WAAW,gBAAiBmmB,GAC/CJ,EAAYpf,EAAO3G,WAAW,gBAAiBomB,E,CAI5Czf,EAAOoG,YAAepG,EAAO0f,cAC7B1nB,EAAAA,GAAemnB,KAClB9D,EAAephB,KAAKV,IAAI8hB,EAAc8D,IAGnCnnB,EAAAA,GAAeonB,KAClB9D,EAAerhB,KAAK4H,IAAIyZ,EAAc8D,I,KAM1C9sB,KAAKic,WAAW7M,MAAMie,IACrB,GAAIA,EAAM5nB,IAAI,iBAAkB,CAC/B,IAAIkB,EAAQ0mB,EAAM5nB,IAAI,SACT,MAATkB,IACHoiB,EAAephB,KAAKV,IAAI8hB,EAAcpiB,GACtCqiB,EAAerhB,KAAK4H,IAAIyZ,EAAcriB,IAEvCA,EAAQ0mB,EAAM5nB,IAAI,YACL,MAATkB,IACHoiB,EAAephB,KAAKV,IAAI8hB,EAAcpiB,GACtCqiB,EAAerhB,KAAK4H,IAAIyZ,EAAcriB,G,KAKrCoiB,EAAeC,KACjBD,EAAcC,GAAgB,CAACA,EAAcD,IAG3CrjB,EAAAA,GAAe8mB,GAEjBzD,EADG1iB,EACYmmB,EAGAvlB,EAGRZ,GACJX,EAAAA,GAAe1F,KAAKstB,YACvBvE,EAAe/oB,KAAKstB,UAIlB5nB,EAAAA,GAAe+mB,GAEjBzD,EADG3iB,EACYomB,EAGAld,EAGRlJ,GACJX,EAAAA,GAAe1F,KAAKutB,YACvBvE,EAAehpB,KAAKutB,UAIlBxE,IAAiBC,EAAc,CAClC,IAAIwE,EAAOzE,EAIX,GAHAA,GAAgB/oB,KAAKytB,aACrBzE,GAAgBhpB,KAAKytB,aAEjB1E,EAAe9hB,EAAK,CACvB,IAAImM,EAAIoa,EAAOvmB,EACN,GAALmM,IACHA,EAAIpT,KAAKytB,cAGV1E,EAAeyE,EAAOpa,EACtB4V,EAAewE,EAAOpa,EAEtB/M,GAAe,C,CAGhB,IAAIqnB,EAAc1tB,KAAKmqB,cAAcpB,EAAcC,EAAchF,EAAW3d,GAC5E0iB,EAAe2E,EAAYzmB,IAC3B+hB,EAAe0E,EAAYne,G,CAG5B,IAAIoe,EAAmB5E,EACnB6E,EAAmB5E,EAEnBrZ,EAAQqZ,EAAeD,EAE3BA,GAAgBpZ,EAAQ+c,EACxB1D,GAAgBrZ,EAAQgd,EAExB,IAAI3B,EAA0BhrB,KAAKmqB,cAAcpB,EAAcC,EAAchF,GAE7E+E,EAAeiC,EAAW/jB,IAC1B+hB,EAAegC,EAAWzb,IAE1BwZ,EAAe9gB,EAAAA,GAAiB8gB,EAAc9hB,EAAKsI,GACnDyZ,EAAe/gB,EAAAA,GAAiB+gB,EAAc/hB,EAAKsI,GAGnDyb,EAAahrB,KAAKmqB,cAAcpB,EAAcC,EAAchF,GAAW,GAElE3d,IACJ0iB,EAAeiC,EAAW/jB,IAC1B+hB,EAAegC,EAAWzb,KAG3B,MAAMoY,EAAe3nB,KAAKyF,IAAI,gBA+B9B,GA9BIkiB,IACHqD,EAAahrB,KAAK6tB,UAAU9E,EAAcC,EAAcgC,EAAWhjB,KAAM2f,EAAa5gB,WAAW,oBAAqB4gB,EAAa5gB,WAAW,WAAY,IAAK4gB,EAAa5gB,WAAW,oBAAqB4gB,EAAa5gB,WAAW,WAAY,IAAK4gB,EAAa5gB,WAAW,qBAAsB4gB,EAAa5gB,WAAW,OAAQ,KAE/TikB,EAAW/jB,IAAMA,IACpB+jB,EAAW/jB,IAAMA,GAGd+jB,EAAWzb,IAAMA,IACpByb,EAAWzb,IAAMA,GAGlBwZ,EAAeiC,EAAW/jB,IAC1B+hB,EAAegC,EAAWzb,KAGvBlJ,IACCX,EAAAA,GAAe8mB,KAClBzD,EAAephB,KAAK4H,IAAIwZ,EAAcyD,IAGnC9mB,EAAAA,GAAe+mB,KAClBzD,EAAerhB,KAAKV,IAAI+hB,EAAcyD,KAIpCG,IACH7D,EAAe4E,GAAoBC,EAAmBD,GAAoBjB,EAC1E1D,EAAe4E,GAAoBA,EAAmBD,GAAoBhB,GAGvEtmB,EAAc,CAEhB0iB,EADGrjB,EAAAA,GAAe8mB,GACHA,EAGAmB,EAIf3E,EADGtjB,EAAAA,GAAe+mB,GACHA,EAGAmB,EAGZ5E,EAAeD,GAAgB,OAClCA,GAAgB/oB,KAAKytB,aACrBzE,GAAgBhpB,KAAKytB,cAGtB,IAAI9d,EAAQqZ,EAAeD,EAE3BA,GAAgBpZ,EAAQ+c,EACxB1D,GAAgBrZ,EAAQgd,C,CAGrB3sB,KAAKyF,IAAI,iBAERsjB,GAAgB,IACnBA,EAAe4E,GAAoB,EAAIhmB,KAAKV,IAAIylB,EAAU,OAGvD3D,EAAe9hB,IAClB8hB,EAAe9hB,GAEZ+hB,EAAezZ,IAClByZ,EAAezZ,IAIjB,IAAIue,EAAMnmB,KAAKV,IAAI,GAAIU,KAAK4Z,KAAK5Z,KAAK2hB,IAAItpB,KAAK+G,WAAW,gBAAiB,KAAO,GAAKY,KAAKomB,MAAQ,GAEhGrqB,EAAQuE,EAAAA,GAAYjI,KAAKorB,qBAAqBrC,GAAe+E,GAC7DnqB,EAAMsE,EAAAA,GAAYjI,KAAKorB,qBAAqBpC,GAAe8E,GAE/D9tB,KAAKyX,cAAc,oBAAqBsR,GACxC/oB,KAAKyX,cAAc,oBAAqBuR,GACxChpB,KAAKyX,cAAc,qBAAsBuT,EAAWhjB,MAEpDhI,KAAK0P,KAAKhM,EAAOC,E,CAEnB,CAGUqkB,UAAAA,GACT,IAAIwE,EAAaxsB,KAAKyF,IAAI,OACtBgnB,EAAazsB,KAAKyF,IAAI,OAEtBwB,EAAMnD,IACNyL,GAAOzL,IAEP4oB,EAAW1sB,KAAKyF,IAAI,WAAY,GAChCknB,EAAW3sB,KAAKyF,IAAI,WAAY,GAEhCzF,KAAKyF,IAAI,iBACgB,MAAxBzF,KAAKyF,IAAI,cACZinB,EAAW,IAEgB,MAAxB1sB,KAAKyF,IAAI,cACZknB,EAAW,KAIb,IAAIqB,EAAUlqB,IA+Cd,GA7CAqC,EAAAA,GAAYnG,KAAK0N,QAASA,IACzB,IAAKA,EAAOjI,IAAI,gBAAiB,CAChC,IAAIonB,EACAC,EAUJ,GATIpf,EAAOjI,IAAI,WAAazF,MAC3B6sB,EAAYnf,EAAO3G,WAAW,QAC9B+lB,EAAYpf,EAAO3G,WAAW,SAEtB2G,EAAOjI,IAAI,WAAazF,OAChC6sB,EAAYnf,EAAO3G,WAAW,QAC9B+lB,EAAYpf,EAAO3G,WAAW,SAG3BrB,EAAAA,GAAemnB,IAAcnnB,EAAAA,GAAeonB,GAAY,CAC3D7lB,EAAMU,KAAKV,IAAIA,EAAK4lB,GACpBtd,EAAM5H,KAAK4H,IAAIA,EAAKud,GAEpB,IAAI3c,EAAO2c,EAAYD,EAEnB1c,GAAQ,IACXA,EAAOxI,KAAKsI,IAAI6c,EAAY,MAGzB3c,EAAO6d,IACVA,EAAU7d,E,MAMdnQ,KAAKic,WAAW7M,MAAMie,IACrB,GAAIA,EAAM5nB,IAAI,iBAAkB,CAC/B,IAAIkB,EAAQ0mB,EAAM5nB,IAAI,SACT,MAATkB,IACHM,EAAMU,KAAKV,IAAIA,EAAKN,GACpB4I,EAAM5H,KAAK4H,IAAIA,EAAK5I,IAErBA,EAAQ0mB,EAAM5nB,IAAI,YACL,MAATkB,IACHM,EAAMU,KAAKV,IAAIA,EAAKN,GACpB4I,EAAM5H,KAAK4H,IAAIA,EAAK5I,G,KAKnB3G,KAAKyF,IAAI,eAAgB,CAC5B,IAAI0lB,EAAcnrB,KAAKyF,IAAI,eACvBC,EAAAA,GAAeylB,IACdlkB,GAAO,IACVA,EAAMkkB,GAGJlkB,GAAO,GACV,IAAImR,MAAM,mD,CAiBZ,GAbY,IAARnR,GAAqB,IAARsI,IAChBA,EAAM,GACNtI,GAAO,IAGJvB,EAAAA,GAAe8mB,KAClBvlB,EAAMulB,GAEH9mB,EAAAA,GAAe+mB,KAClBld,EAAMkd,GAIHxlB,IAAQnD,KAAYyL,KAASzL,IAGhC,OAFA9D,KAAK2F,WAAW,gBAAY4B,QAC5BvH,KAAK2F,WAAW,gBAAY4B,GAIzBN,EAAMsI,KACRtI,EAAKsI,GAAO,CAACA,EAAKtI,IAGpB,MAAMgnB,EAAahnB,EACbinB,EAAa3e,EAGnB,IAAI4e,EAAanuB,KAAKwc,SAAS4R,KAAK,MAAOnnB,GACvConB,EAAaruB,KAAKwc,SAAS4R,KAAK,MAAO7e,GAE3CvP,KAAKopB,YAAcniB,EAEfvB,EAAAA,GAAeyoB,KAClBlnB,EAAMknB,GAGHzoB,EAAAA,GAAe2oB,KAClB9e,EAAM8e,GAIPpnB,EAAMjH,KAAKmsB,QAAQllB,GACnBsI,EAAMvP,KAAKosB,QAAQ7c,GAGfA,EAAMtI,GAAO,EAAIU,KAAK0hB,IAAI,GAAI,MAC7B9Z,EAAMtI,IAAQ,EACjBjH,KAAKytB,cAAgBle,EAAMtI,GAAO,EAGlCjH,KAAKsuB,UAAU/e,GAGhBtI,GAAOjH,KAAKytB,aACZle,GAAOvP,KAAKytB,cAIbxmB,IAAQsI,EAAMtI,GAAOylB,EACrBnd,IAAQA,EAAMtI,GAAO0lB,EAEjB3sB,KAAKyF,IAAI,iBAERwB,EAAM,GAAKgnB,GAAc,IAC5BhnB,EAAM,GAGHsI,EAAM,GAAK2e,GAAc,IAC5B3e,EAAM,IAIRvP,KAAKstB,SAAWrmB,EAChBjH,KAAKutB,SAAWhe,EAEhB,IAAIlJ,EAAerG,KAAKyF,IAAI,gBACxB8oB,EAAwBvuB,KAAKyF,IAAI,yBAAyB,GAC1D8oB,IACHloB,EAAekoB,GAGhB,IAAIC,EAASnoB,EACTX,EAAAA,GAAe+mB,KAClB+B,GAAS,GAGV,IAAIxK,EAAYhkB,KAAKyF,IAAI,YAAYue,YAEjCgH,EAA0BhrB,KAAKmqB,cAAcljB,EAAKsI,EAAKyU,EAAWwK,GAYtE,GAVAvnB,EAAM+jB,EAAW/jB,IACjBsI,EAAMyb,EAAWzb,IAGjByb,EAAahrB,KAAKmqB,cAAcljB,EAAKsI,EAAKyU,GAAW,GAErD/c,EAAM+jB,EAAW/jB,IACjBsI,EAAMyb,EAAWzb,IAGblJ,EAAc,CAEhBY,EADGvB,EAAAA,GAAe8mB,GACZA,EAGAxsB,KAAKstB,SAIX/d,EADG7J,EAAAA,GAAe+mB,GACZA,EAGAzsB,KAAKutB,SAGRhe,EAAMtI,GAAO,OAChBA,GAAOjH,KAAKytB,aACZle,GAAOvP,KAAKytB,cAGb,IAAI9d,EAAQJ,EAAMtI,EAClBA,GAAO0I,EAAQ+c,EACfnd,GAAOI,EAAQgd,C,CAGhBwB,EAAanuB,KAAKwc,SAAS4R,KAAK,MAAOnnB,GACvConB,EAAaruB,KAAKwc,SAAS4R,KAAK,MAAO7e,GAEnC7J,EAAAA,GAAeyoB,KAClBlnB,EAAMknB,GAGHzoB,EAAAA,GAAe2oB,KAClB9e,EAAM8e,GAGHL,GAAWlqB,MACdkqB,EAAWze,EAAMtI,GAIlB,IAAIsjB,EAAW5iB,KAAKC,MAAMD,KAAKsI,IAAItI,KAAK2hB,IAAI3hB,KAAKsI,IAAIV,EAAMtI,IAAQU,KAAK4hB,SAAW,EAEnFtiB,EAAMgB,EAAAA,GAAYhB,EAAKsjB,GACvBhb,EAAMtH,EAAAA,GAAYsH,EAAKgb,GAIvB,MAAM5C,EAAe3nB,KAAKyF,IAAI,gBAuB9B,GAtBIkiB,IACHqD,EAAahrB,KAAK6tB,UAAU5mB,EAAKsI,EAAKyb,EAAWhjB,KAAM2f,EAAa5gB,WAAW,WAAY4gB,EAAa5gB,WAAW,MAAO,IAAK4gB,EAAa5gB,WAAW,WAAY4gB,EAAa5gB,WAAW,MAAO,IAAK4gB,EAAa5gB,WAAW,OAAQ,IACvOE,EAAM+jB,EAAW/jB,IACjBsI,EAAMyb,EAAWzb,KAIlBvP,KAAKyX,cAAc,gBAAiB9P,KAAK4H,IAAI,EAAG5H,KAAK4Z,MAAMhS,EAAMtI,GAAO+mB,EAAUhuB,KAAKyF,IAAI,gBAAiB,QAC5GzF,KAAKyuB,iBAEDzuB,KAAKyF,IAAI,iBACZzF,KAAKmpB,gBAAkBliB,EACvBA,EAAMjH,KAAKstB,SACX/d,EAAMvP,KAAKutB,SAEPtmB,GAAO,IACVA,EAAMgnB,GAAc,EAAItmB,KAAKV,IAAIylB,EAAU,QAMzChnB,EAAAA,GAAeuB,IAAQvB,EAAAA,GAAe6J,KACrCvP,KAAK+G,WAAW,cAAgBE,GAAOjH,KAAK+G,WAAW,cAAgBwI,GAAK,CAE/EvP,KAAK2F,WAAW,WAAYsB,GAC5BjH,KAAK2F,WAAW,WAAY4J,GAC5BvP,KAAK0uB,YAAYznB,EAAKsI,GAEtB,MAAMwN,EAAW/c,KAAKyF,IAAI,wBAAyB,GAC7C+X,EAASxd,KAAKyF,IAAI,uBAExBzF,KAAK2uB,eAAe,CAAEjR,IAAK,MAAOH,GAAItW,EAAK8V,WAAUS,WACrDxd,KAAK2uB,eAAe,CAAEjR,IAAK,MAAOH,GAAIhO,EAAKwN,WAAUS,U,CAGxD,CAEUiR,cAAAA,GACV,CAEUH,SAAAA,CAAU/e,GAEnB,IAAIqf,EAAmBjnB,KAAK2hB,IAAI3hB,KAAKsI,IAAIV,IAAQ5H,KAAK4hB,OAGlDsF,EAAQlnB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMiF,IAGpCC,GAAgB,GAEhB7uB,KAAKytB,aAAeoB,CACrB,CAEUH,WAAAA,CAAYI,EAAcC,GAEpC,CAGU5E,aAAAA,CAAcljB,EAAasI,EAAayU,EAAmBgL,GAEhEhL,GAAa,IAChBA,EAAY,GAGbA,EAAYrc,KAAKC,MAAMoc,GAEvB,IAAIiK,EAAqBhnB,EACrBinB,EAAqB3e,EAErB0f,EAAa1f,EAAMtI,EAGJ,IAAfgoB,IACHA,EAAatnB,KAAKsI,IAAIV,IAIvB,IAAIqf,EAAmBjnB,KAAK2hB,IAAI3hB,KAAKsI,IAAIgf,IAAetnB,KAAK4hB,OAGzDsF,EAAQlnB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMiF,IAGpCC,GAAgB,GAEhB,IAAI/J,EAAgB+J,EAChBG,IACHlK,EAAQ,GAILkK,GACH/nB,EAAMU,KAAKgiB,MAAM1iB,EAAM4nB,GAASA,EAEhCtf,EAAM5H,KAAK4Z,KAAKhS,EAAMsf,GAASA,IAG/B5nB,EAAMU,KAAK4Z,KAAKta,EAAM4nB,GAASA,EAAQ/J,EAEvCvV,EAAM5H,KAAKgiB,MAAMpa,EAAMsf,GAASA,EAAQ/J,GAIrC7d,EAAM,GAAKgnB,GAAc,IAC5BhnB,EAAM,GAGHsI,EAAM,GAAK2e,GAAc,IAC5B3e,EAAM,GAGPqf,EAAWjnB,KAAK2hB,IAAI3hB,KAAKsI,IAAIgf,IAAetnB,KAAK4hB,OACjDsF,EAAQlnB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMiF,IAChCC,GAAgB,IAGhB,IAAI7mB,EAAOL,KAAK4Z,KAAM0N,EAAajL,EAAa6K,GAASA,EACrDnF,EAAY/hB,KAAK0hB,IAAI,GAAI1hB,KAAKgiB,MAAMhiB,KAAK2hB,IAAI3hB,KAAKsI,IAAIjI,IAASL,KAAK4hB,SAGpE2F,EAAsBvnB,KAAK4Z,KAAKvZ,EAAO0hB,GAGvCwF,EAAc,EACjBA,EAAc,GAENA,GAAe,GAAKA,EAAc,IAC1CA,EAAc,GAIflnB,EAAOL,KAAK4Z,KAAKvZ,GAAQ0hB,EAAYwF,IAAgBxF,EAAYwF,EAGjE,IAAIC,EAAenvB,KAAKyF,IAAI,gBAC5B,GAAIC,EAAAA,GAAeypB,GAAe,CAEjC,IAAIC,EAAannB,EAAAA,GAAWD,EAAMmnB,GAC9BA,EAAeE,OAAOC,WAAatnB,IAASonB,IAC/CpnB,EAAOonB,EACK,GAARpnB,IACHA,EAAO,G,CAKV,IAAIuiB,EAAmB,EAEnBb,EAAY,IAEfa,EAAW5iB,KAAKC,MAAMD,KAAKsI,IAAItI,KAAK2hB,IAAI3hB,KAAKsI,IAAIyZ,IAAc/hB,KAAK4hB,SAAW,EAE/EvhB,EAAOC,EAAAA,GAAYD,EAAMuiB,IAI1B,IAIIgF,EAJAC,EAAW7nB,KAAKgiB,MAAM1iB,EAAMe,GA8BhC,OA5BAf,EAAMgB,EAAAA,GAAYD,EAAOwnB,EAAUjF,GAQlCgF,EAJIP,EAIOrnB,KAAKgiB,MAAMpa,EAAMvH,GAHjBL,KAAK4Z,KAAKhS,EAAMvH,GAMxBunB,IAAaC,GAChBD,KAGDhgB,EAAMtH,EAAAA,GAAYD,EAAOunB,EAAUhF,IAEzB2D,IACT3e,GAAYvH,GAGTf,EAAMgnB,IACThnB,GAAYe,GAIbA,EAAOhI,KAAKksB,aAAalkB,GAElB,CAAEf,IAAKA,EAAKsI,IAAKA,EAAKvH,KAAMA,EACpC,CAQO4N,cAAAA,CAAe1Q,EAAkBuqB,GACvC,MAAM9G,EAAe3oB,KAAKyF,IAAI,sBAAuBzF,KAAKyF,IAAI,iBACxDmjB,EAAY5oB,KAAK6oB,qBACjB6G,EAAgB1vB,KAAKyF,IAAI,wBAAyB,GAClDkqB,EAAW3vB,KAAK+G,WAAW,oBAAqB,GAAK2oB,EACrD/oB,EAAQsB,EAAAA,GAAYjI,KAAK+qB,gBAAgB7lB,GAAWyqB,GAE1D,OAAIhH,EACIC,EAAUE,OAAOniB,EAAOgiB,GAGxBC,EAAUE,OAAOniB,OAAOY,EAAWooB,EAE5C,CASO9N,aAAAA,CAAcnU,EAAkBxI,GACtC,IAGIK,EACAqqB,EAJAC,EAAkB7vB,KAAK+G,WAAW,QAAW/G,KAAKyF,IAAI,YAAYsB,WAAW,UAC7EJ,EAAQ3G,KAAK+qB,gBAAgB7lB,GAYjC,GARAiB,EAAAA,GAAYuH,EAAOmG,WAAW,CAACvO,EAAU+M,KACxC,MAAMlC,EAAOxI,KAAKsI,IAAI3K,EAASG,IAAIoqB,GAAalpB,SAClCY,IAAVhC,GAAuB4K,EAAOyf,KACjCrqB,EAAQ8M,EACRud,EAAUzf,E,IAIC,MAAT5K,EACH,OAAOmI,EAAOmG,UAAUtO,EAE1B,CAWOuqB,YAAAA,CAAapsB,EAAeC,EAAaoZ,GAC/C,MAAM9V,EAAMjH,KAAK+G,WAAW,WAAY,GAClCwI,EAAMvP,KAAK+G,WAAW,WAAY,GACV,MAA1B/G,KAAK+G,WAAW,QAA4C,MAA1B/G,KAAK+G,WAAW,QACrD/G,KAAK0P,MAAMhM,EAAQuD,IAAQsI,EAAMtI,IAAOtD,EAAMsD,IAAQsI,EAAMtI,GAAM8V,EAEpE,CAUU8Q,SAAAA,CAAU5mB,EAAasI,EAAavH,EAAc+nB,EAAiBC,EAAiBC,GAE7F,GADWjwB,KAAKyF,IAAI,gBACV,CACT,IAAIK,EAAgB6B,KAAKC,MAAMooB,EAAUD,GAAWE,EAChDC,EAAevoB,KAAKC,OAAO2H,EAAMtI,GAAOe,GAExCgc,EAAYhkB,KAAKyF,IAAI,YAAYue,YAErC,GAAIte,EAAAA,GAAeI,IAAUJ,EAAAA,GAAewqB,GAAe,CAC1D,IAAIC,GAAS,EACTC,EAAI,EACJjgB,EAAqB,KAAbZ,EAAMtI,GACdopB,EAAOppB,EACPqpB,EAAO/gB,EACPghB,EAAQvoB,EAEZ,KAAiB,GAAVmoB,GAMN,GALAA,EAASnwB,KAAKwwB,WAAWH,EAAMC,EAAMC,EAAOzqB,GAC5CsqB,IACIA,EAAI,MACPD,GAAS,GAELA,EAoBJlpB,EAAMopB,EACN9gB,EAAM+gB,EACNtoB,EAAOuoB,MAtBK,CACRH,EAAI,GAAKzoB,KAAKC,MAAMwoB,EAAI,IAC3BC,EAAOppB,EAAMkJ,EAAOigB,EAChBnpB,GAAO,GAAKopB,EAAO,IACtBA,EAAO,KAIRC,EAAO/gB,EAAMY,EAAOigB,EAChBE,GAAQ,GAAKA,EAAO,IACvBA,EAAO,IAIT,IAAItF,EAAahrB,KAAKmqB,cAAckG,EAAMC,EAAMtM,GAAW,GAC3DqM,EAAOrF,EAAW/jB,IAClBqpB,EAAOtF,EAAWzb,IAClBghB,EAAQvF,EAAWhjB,I,GAWvB,MAAO,CAAEf,IAAKA,EAAKsI,IAAKA,EAAKvH,KAAMA,EACpC,CAKUwoB,UAAAA,CAAWvpB,EAAasI,EAAavH,EAAclC,GAC5D,IAAIoqB,GAAgB3gB,EAAMtI,GAAOe,EACjC,IAAK,IAAIqK,EAAI,EAAGA,EAAIvM,EAAOuM,IAC1B,GAAIpK,EAAAA,GAAYioB,EAAe7d,EAAG,IAAMvM,GAASoqB,EAAe7d,GAAKvM,EACpE,OAAO,EAGT,OAAO,CACR,CAOOsb,oBAAAA,GACN,IAAI7R,EAAMvP,KAAK+G,WAAW,eAAgB/G,KAAK+G,WAAW,QACtDE,EAAMjH,KAAK+G,WAAW,eAAgB/G,KAAK+G,WAAW,QAE1D,OAAIrB,EAAAA,GAAe6J,IAAQ7J,EAAAA,GAAeuB,GAClCjH,KAAK+G,WAAW,OAAQ,IAAMwI,EAAMtI,GAErC,GACR,CAKOwpB,YAAAA,CAAa3qB,GACN,MAATA,IACHA,EAAQ,GAGwC,KAA7C9F,KAAKyF,IAAI,YAAYsB,WAAW,YACnCjB,IAAU,GAGX,IAAIa,EAAQ3G,KAAK+qB,gBAAgB/qB,KAAK+G,WAAW,kBAAmB,IAIpE,OAHAJ,GAAS3G,KAAK+G,WAAW,OAAQ,GAAKjB,EACtCa,EAAQsB,EAAAA,GAAiBtB,EAAO3G,KAAK+G,WAAW,eAAgB,GAAI/G,KAAK+G,WAAW,eAAgB,IAE7F/G,KAAK6iB,iBAAiB7iB,KAAK0qB,gBAAgB/jB,GACnD,EAjgDA0D,OAAAC,eAAAkd,EAAA,a,gDAAkC,cAClCnd,OAAAC,eAAAkd,EAAA,c,gDAA0C7L,EAAAA,EAAKH,WAAWC,OAAO,CAAC+L,EAAU9L,a,mJCoevE,MAAgBgV,UAAiBC,EAAAA,EAAvCvmB,WAAAA,G,oBAUCC,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,oB,yDAEAD,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,oB,yDACAD,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,oB,yDAEAD,OAAAC,eAAA,mB,iDAAgC,IAChCD,OAAAC,eAAA,oB,iDAA8B,IAE9BD,OAAAC,eAAA,4B,iDAAgC,IAIhCD,OAAAC,eAAA,kB,gDAA4E,CAAC,IAE7ED,OAAAC,eAAA,2B,yDAEAD,OAAAC,eAAA,W,gDAAuB,IACvBD,OAAAC,eAAA,W,gDAAuB,IAEvBD,OAAAC,eAAA,iB,gDAA+C,CAAC,IAOhDD,OAAAC,eAAA,sB,gDAA2CtK,KAAKyK,SAASC,KAAKC,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAC,MAOzFoK,OAAAC,eAAA,mB,gDAA2D,IAAIuR,EAAAA,KAE/DxR,OAAAC,eAAA,iB,iDAA8B,IAE9BD,OAAAC,eAAA,sB,gDAA2C,KAE3CD,OAAAC,eAAA,yB,gDAA4D,CAAC,IAE7DD,OAAAC,eAAA,uB,gDAAuD,CAAC,IAExDD,OAAAC,eAAA,qB,gDAAiC,IACjCD,OAAAC,eAAA,qB,gDAAiC,IACjCD,OAAAC,eAAA,qB,gDAAiC,IACjCD,OAAAC,eAAA,qB,gDAAiC,IAEjCD,OAAAC,eAAA,qB,iDAAkC,IAElCD,OAAAC,eAAA,qB,gDAAyB,CACxB,SACA,aACA,YACA,gBAGDD,OAAAC,eAAA,qB,gDAAyB,CACxB,SACA,aACA,YACA,gBAGDD,OAAAC,eAAA,sB,yDACAD,OAAAC,eAAA,sB,yDAGAD,OAAAC,eAAA,0B,yDACAD,OAAAC,eAAA,0B,yDAGAD,OAAAC,eAAA,2B,yDACAD,OAAAC,eAAA,2B,yDAEAD,OAAAC,eAAA,uB,gDAA2B,IAAIiS,EAAAA,EAASvc,UAAMuH,EAAW,CAAC,KAE1D8C,OAAAC,eAAA,mB,yDAEAD,OAAAC,eAAA,uB,yDACAD,OAAAC,eAAA,uB,yDAEAD,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,gB,wDA06CD,CAx6CWoB,SAAAA,GACT1L,KAAK4wB,OAAOlmB,KAAK,YAAa,YAAa,gBAAiB,iBAC5D1K,KAAK6wB,YAAYnmB,KAAK,SAAU,SAAU,aAAc,aAAc,YAAa,YAAa,aAAc,cAE9G1K,KAAK8wB,eAAe,MAAO,GAC3B9wB,KAAK8wB,eAAe,MAAO,GAE3B9wB,KAAK8wB,eAAe,aAAc,iBAClC9wB,KAAK8wB,eAAe,aAAc,iBAElC9wB,KAAK8wB,eAAe,iBAAkB,qBACtC9wB,KAAK8wB,eAAe,iBAAkB,qBAEtC9wB,KAAK8wB,eAAe,gBAAiB,oBACrC9wB,KAAK8wB,eAAe,gBAAiB,oBAErC9wB,KAAK8wB,eAAe,iBAAkB,qBACtC9wB,KAAK8wB,eAAe,iBAAkB,qBAEtC9wB,KAAK8wB,eAAe,mBAAoB,OACxC9wB,KAAK8wB,eAAe,mBAAoB,OAExC9wB,KAAK8wB,eAAe,oBAAqB,QACzC9wB,KAAK8wB,eAAe,oBAAqB,QAIzChxB,MAAM4L,YAEN1L,KAAKsM,IAAI,eAAe,GAExBtM,KAAK4L,WAAWlB,KAAK1K,KAAKic,WAAWhQ,OAAO0L,OAAOC,IAClD,GAAoB,UAAhBA,EAAOtG,KACVnL,EAAAA,GAAYyR,EAAOC,WAAY2G,IAC9Bxe,KAAK+wB,iBAAiBvS,EAAU,SAE3B,GAAoB,SAAhB5G,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,eACxB,GAAoB,aAAhBH,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,eACxB,GAAoB,gBAAhBH,EAAOtG,KACjBtR,KAAKmc,kBAAkBvE,EAAOG,eACxB,GAAoB,gBAAhBH,EAAOtG,KACjBtR,KAAK+wB,iBAAiBnZ,EAAOO,cACvB,IAAoB,cAAhBP,EAAOtG,KAGjB,MAAM,IAAI8G,MAAM,6BAFhBpY,KAAKmc,kBAAkBvE,EAAOjR,M,MAMhC3G,KAAKiC,OAAOC,OAAO,SAAe,CAAEI,QAAS,EAAGS,SAAS,IAEzD/C,KAAKuf,UAAU,cAAc,KAC5Bvf,KAAK+L,KAAKE,OAAOoY,KAAK,cAAc,KACnCrkB,KAAK+hB,mBAAmB,GACvB,IAGH/hB,KAAKuf,UAAU,YAAY,KAC1Bvf,KAAK+L,KAAKE,OAAOoY,KAAK,cAAc,KACnCrkB,KAAK+hB,mBAAmB,GACvB,IAGH/hB,KAAKgxB,iBACN,CAEU7U,iBAAAA,CAAkBqC,GAC3B,MAAM9G,EAAY/M,EAAAA,EAAUjK,IAAIV,KAAKC,MAAO,CAAC,GAC7Cue,EAAU9G,UAAYA,EACtB1X,KAAKyK,SAASC,KAAKgN,GAEnB8G,EAAU9Q,OAAS1N,KAEnB,MAAMmjB,EAAe3E,EAAU2E,aAC/BA,EAAazO,OAAO,WAAW,GAE/B,MAAMjO,EAA2B0c,EAAazc,UAC9C,GAAID,EAAM,CACTA,EAAK0V,kBAAkBgH,EAAc,CAAC,QAAS,WAE/C,MAAMpD,EAASoD,EAAa1d,IAAI,UAChC,GAAIsa,EAAQ,CACX,MAAM3W,EAAS2W,EAAOta,IAAI,UACtB2D,GACHA,EAAOzD,WAAW,WAAW,E,CAG/B,MAAMH,EAAW2d,EAAa1d,IAAI,YAC9BD,GACHkS,EAAUpL,IAAI,OAAQ9G,GAEvBiB,EAAKgY,kBAAkB/T,KAAKyY,E,CAE9B,CAEU4N,gBAAAA,CAAiBvS,GAC1B,MAAM2E,EAAe3E,EAAU2E,aACzB1c,EAA2B0c,EAAazc,UAC9CD,EAAKyV,gBAAgBiH,GAErBhd,EAAAA,GAAcM,EAAKgY,kBAAmB0E,GAEtC,MAAMzL,EAAY8G,EAAU9G,UACxBA,GACHA,EAAU7J,SAEZ,CAEUojB,aAAAA,GACTnxB,MAAMmxB,gBAENjxB,KAAKkxB,cAAgB,GACrBlxB,KAAKmxB,cAAgB,GACrBnxB,KAAKoxB,kBAAoB,GACzBpxB,KAAKqxB,kBAAoB,GAEzBrxB,KAAKsxB,mBAAqB,GAC1BtxB,KAAKuxB,mBAAqB,GAEtBvxB,KAAKwxB,cACRrrB,EAAAA,GAAYnG,KAAKwxB,cAAiD9T,IAEjE,GADc1d,KAAKyF,IAAUiY,EAAM,SACxB,CACV1d,KAAKkxB,cAAcxmB,KAAUgT,GAC7B,IAAI8N,EAAQxrB,KAAKyF,IAAUiY,EAAM,QACjC1d,KAAKsxB,mBAAmB5mB,KAAK8gB,IAEI,GAA7BA,EAAMvS,QAAQ,WACjBjZ,KAAKoxB,kBAAkB1mB,KAAK8gB,EAAMiG,MAAM,WAAW,IAGnDzxB,KAAKoxB,kBAAkB1mB,KAAK8gB,E,KAM5BxrB,KAAK0xB,cACRvrB,EAAAA,GAAYnG,KAAK0xB,cAAiDhU,IAGjE,GAFc1d,KAAKyF,IAAUiY,EAAM,SAExB,CACV1d,KAAKmxB,cAAczmB,KAAUgT,GAC7B,IAAI8N,EAAQxrB,KAAKyF,IAAUiY,EAAM,QACjC1d,KAAKuxB,mBAAmB7mB,KAAK8gB,IAEI,GAA7BA,EAAMvS,QAAQ,WACjBjZ,KAAKqxB,kBAAkB3mB,KAAK8gB,EAAMiG,MAAM,WAAW,IAGnDzxB,KAAKqxB,kBAAkB3mB,KAAK8gB,E,IAKjC,CAEUjQ,QAAAA,GACTzb,MAAMyb,WAENvb,KAAKue,SAAW,CAAC,EACjB,MAAM/E,EAAQxZ,KAAKwZ,MACfA,GACHA,EAAM9L,OAAO+K,YAAYzY,MAG1BmG,EAAAA,GAAmBnG,KAAKyF,IAAI,SAASiI,OAAQ1N,MAC7CmG,EAAAA,GAAmBnG,KAAKyF,IAAI,SAASiI,OAAQ1N,KAC9C,CAGU8uB,IAAAA,CAAiDpR,EAAU/W,GACpE,IAAIoR,GAhjCOc,EAgjCQ7Y,KAAK+G,WAAW2W,GAhjCE5E,EAgjCWnS,EA/iCrC,MAARkS,EACIC,EAEY,MAATA,EACHD,EAEGC,EAAQD,EACXC,EAGAD,GAXT,IAAaA,EAA0BC,EAijCrC9Y,KAAK2F,WAAW+X,EAAK3F,EACtB,CAGUgX,IAAAA,CAAiDrR,EAAU/W,GACpE,IAAIoR,GApiCOc,EAoiCQ7Y,KAAK+G,WAAW2W,GApiCE5E,EAoiCWnS,EAniCrC,MAARkS,EACIC,EAEY,MAATA,EACHD,EAEGC,EAAQD,EACXC,EAGAD,GAXT,IAAaA,EAA0BC,EAqiCrC9Y,KAAK2F,WAAW+X,EAAK3F,EACtB,CAEU4Z,iBAAAA,CAAkBrsB,GAE3B,MAAMyI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YAE1B,IAAKsI,EAAM0c,SAAWxc,EAAMwc,OAC3B,OAAO,EAER,MAAMoH,EAAoB7xB,KAAKyF,IAAI,oBAAqB,GACxD,GAAIosB,EAAoB,EAAG,CAC1B,IAAI7d,EAAahU,KAAKgU,aAGlBlO,EAFW9F,KAAKiU,WAEGD,EAEvB,GAAIjG,GAAS6jB,GACZ,GAAI7jB,EAAMtI,IAAI,YAAYmZ,aAAe9Y,EAAQ+rB,EAAoB,EACpE,OAAO,OAGJ,GAAI5jB,GAAS2jB,GACb3jB,EAAMxI,IAAI,YAAYmZ,aAAe9Y,EAAQ+rB,EAAoB,EACpE,OAAO,C,CAKV,OAAyC,MAArCvsB,EAASG,IAAIzF,KAAK8xB,UAAgE,MAArCxsB,EAASG,IAAIzF,KAAK+xB,QAIpE,CAEUf,eAAAA,GACT,MAAMjjB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBusB,EAAQjkB,EAAMhH,WAAW,QACzBkrB,EAAWxjB,EAAAA,GAAuBujB,GAElCE,EAAQjkB,EAAMlH,WAAW,QACzBorB,EAAW1jB,EAAAA,GAAuByjB,GAElCE,EAAUrkB,EAAMtI,IAAI,YAAYsB,WAAW,UAC3CsrB,EAAUpkB,EAAMxI,IAAI,YAAYsB,WAAW,UAE3CurB,EAAO,OACPC,EAAM,MACNC,EAAO,OACPrZ,EAAO,OAEW,cAApBpL,EAAM2N,WACT1b,KAAK8xB,QAAU9xB,KAAKyF,IAAUusB,EAAQI,EAAWjZ,GACjDnZ,KAAKyyB,YAAczyB,KAAKyF,IAAU6sB,EAAOL,EAAWG,EAAWjZ,GAC/DnZ,KAAK0yB,WAAa1yB,KAAKyF,IAAU8sB,EAAMN,EAAWG,EAAWjZ,GAC7DnZ,KAAK2yB,YAAc3yB,KAAKyF,IAAU+sB,EAAOP,EAAWG,EAAWjZ,KAG/DnZ,KAAK8xB,QAAgBE,EAAQI,EAC7BpyB,KAAKyyB,YAAoBH,EAAOL,EAAWG,EAC3CpyB,KAAK0yB,WAAmBH,EAAMN,EAAWG,EACzCpyB,KAAK2yB,YAAoBH,EAAOP,EAAWG,GAGpB,cAApBnkB,EAAMyN,WACT1b,KAAK+xB,QAAU/xB,KAAKyF,IAAUysB,EAAQG,EAAWlZ,GACjDnZ,KAAK4yB,YAAc5yB,KAAKyF,IAAU6sB,EAAOH,EAAWE,EAAWlZ,GAC/DnZ,KAAK6yB,WAAa7yB,KAAKyF,IAAU8sB,EAAMJ,EAAWE,EAAWlZ,GAC7DnZ,KAAK8yB,YAAc9yB,KAAKyF,IAAU+sB,EAAOL,EAAWE,EAAWlZ,KAG/DnZ,KAAK+xB,QAAgBG,EAAQG,EAC7BryB,KAAK4yB,YAAoBN,EAAOH,EAAWE,EAC3CryB,KAAK6yB,WAAmBN,EAAMJ,EAAWE,EACzCryB,KAAK8yB,YAAoBN,EAAOL,EAAWE,EAE7C,CAEUU,MAAAA,GACT,MAAMhlB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YACpButB,EAAchzB,KAAKiC,OAAOoK,OAAO,UACjC4mB,EAAyBjzB,KAAKyF,IAAI,0BAExC,GAAIutB,EAAa,CAChB,IAAIrsB,EAAQ,EACRssB,IACHtsB,EAAQ,eAGLoH,IAAU6jB,EACboB,EAAY1mB,IAAI,MAAO3F,IAEfsH,IAAU2jB,GAIlBoB,EAAY1mB,IAAI,MAAO3F,GAHvBqsB,EAAY1mB,IAAI,MAAO3F,G,CAO1B,CAGUusB,kBAAAA,GACLlzB,KAAKqN,QAAQ,gBAChBrN,KAAK4M,iBAAiBN,IAAI,cAAetM,KAAKyF,IAAI,eAEpD,CAEOwQ,YAAAA,GACN,MAAMlI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEvBzF,KAAKsM,IAAI,IAAKyB,EAAMvC,IAAMiD,EAAAA,GAAuBV,EAAMtI,IAAI,UAAW,GAAIsI,EAAMjJ,SAAWiJ,EAAM1E,OAAQ5D,IAAI,cAAe,IAC5HzF,KAAKsM,IAAI,IAAK2B,EAAMxC,IAAMgD,EAAAA,GAAuBR,EAAMxI,IAAI,UAAW,GAAIwI,EAAMlJ,UAAYkJ,EAAM5E,OAAQ5D,IAAI,aAAc,IAE5HzF,KAAK4M,iBAAiBN,IAAI,IAAKtM,KAAKyL,KACpCzL,KAAK4M,iBAAiBN,IAAI,IAAKtM,KAAKwL,IACrC,CAGOwJ,gBAAAA,GACNlV,MAAMkV,mBAENhV,KAAKue,SAAW,CAAC,GAEbve,KAAKqN,QAAQ,eAAiBrN,KAAKqN,QAAQ,eAAiBrN,KAAKqN,QAAQ,mBAAqBrN,KAAKqN,QAAQ,mBAAqBrN,KAAKqN,QAAQ,kBAAoBrN,KAAKqN,QAAQ,kBAAoBrN,KAAKqN,QAAQ,mBAAqBrN,KAAKqN,QAAQ,qBACpPrN,KAAKixB,gBACLjxB,KAAKgxB,kBACLhxB,KAAK+nB,cAAe,IAGjB/nB,KAAKqN,QAAQ,UAAYrN,KAAKqN,QAAQ,YACzCrN,KAAK+nB,cAAe,GAGrB/nB,KAAKsM,IAAI,QAAStM,KAAKyF,IAAI,SAASX,SACpC9E,KAAKsM,IAAI,SAAUtM,KAAKyF,IAAI,SAASV,UAErC/E,KAAKkzB,qBAEL,MAAMnlB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YAG1B,IAAI0tB,EAEJ,OAHyBnzB,KAAKyF,IAAI,qBAIjC,IAAK,OACJ0tB,EAAgBnzB,KAAKyyB,YACrB,MACD,IAAK,MACJU,EAAgBnzB,KAAK0yB,WACrB,MACD,IAAK,OACJS,EAAgBnzB,KAAK2yB,YACrB,MACD,QACCQ,EAAgBnzB,KAAK8xB,QAEvB9xB,KAAKozB,eAAiBD,EAGtB,IAAIE,EACJ,OAFyBrzB,KAAKyF,IAAI,qBAGjC,IAAK,OACJ4tB,EAAgBrzB,KAAK4yB,YACrB,MACD,IAAK,MACJS,EAAgBrzB,KAAK6yB,WACrB,MACD,IAAK,OACJQ,EAAgBrzB,KAAK8yB,YACrB,MACD,QACCO,EAAgBrzB,KAAK+xB,QAEvB/xB,KAAKszB,eAAiBD,EAElBrzB,KAAKqN,QAAQ,aAChBrN,KAAK+yB,SAIN/yB,KAAKiW,eAEL,MAAMsd,EAAUvzB,KAAKyF,IAAI,WAkFzB,GAhFIzF,KAAKqN,QAAQ,aACZkmB,EACCvzB,KAAK+nB,eAAiB/nB,KAAKwzB,gBAI9BxzB,KAAKyzB,SAINzzB,KAAK2N,YAIH3N,KAAK+nB,eAAiB/nB,KAAKwzB,iBAC9BxzB,KAAKwzB,gBAAiB,EAElBD,GACHvzB,KAAKyzB,SAGNttB,EAAAA,GAAYnG,KAAK6T,WAAYvO,IAC5Ba,EAAAA,GAAYnG,KAAKoxB,mBAAoB1T,IACpC,IAAI/W,EAAQrB,EAASG,IAASiY,GACjB,MAAT/W,IACC4sB,IACH5sB,GAAS3G,KAAK0zB,iBAAiBpuB,EAAUoY,IAG1C1d,KAAK8uB,KAAK,OAAQnoB,GAClB3G,KAAK+uB,KAAK,OAAQpoB,G,IAIpBR,EAAAA,GAAYnG,KAAKqxB,mBAAoB3T,IACpC,IAAI/W,EAAQrB,EAASG,IAASiY,GACjB,MAAT/W,IACC4sB,IACH5sB,GAAS3G,KAAK2zB,iBAAiBruB,EAAUoY,IAG1C1d,KAAK8uB,KAAK,OAAQnoB,GAClB3G,KAAK+uB,KAAK,OAAQpoB,G,IAIpBoH,EAAMwU,sBAAsBjd,EAAUtF,KAAKkxB,eAC3CjjB,EAAMsU,sBAAsBjd,EAAUtF,KAAKmxB,cAAc,IAG1DpjB,EAAM6lB,oBAAqB,EAC3B3lB,EAAM2lB,oBAAqB,EAEtB5zB,KAAKyF,IAAI,mBACTzF,KAAKunB,eAAe,SAAWvnB,KAAKunB,eAAe,UACtDxZ,EAAMC,qBAEHhO,KAAKunB,eAAe,SAAWvnB,KAAKunB,eAAe,UACtDtZ,EAAMD,qBAIRhO,KAAK6zB,wBAGA7zB,KAAKyF,IAAI,oBACbzF,KAAK+hB,uBAAkBxa,KAIrBvH,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,SACvCrN,KAAK6zB,wBAGD7zB,KAAK8zB,eACT/lB,EAAMqV,iBAAiBpjB,MACvBiO,EAAMmV,iBAAiBpjB,MACvBA,KAAK8zB,cAAe,GAGjB9zB,KAAK+nB,cAAgB/nB,KAAKunB,eAAe,eAAiBvnB,KAAKunB,eAAe,uBAAyBvnB,KAAKunB,eAAe,aAAevnB,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,QAAUrN,KAAK+zB,aAAe/zB,KAAK0iB,WAAY,CAChO,IAAI1O,EAAahU,KAAKgU,aAClBC,EAAWjU,KAAKiU,WAChB4d,EAAoB7xB,KAAKyF,IAAI,oBAAqB,GAUtD,GATIosB,EAAoB,GAAKD,IACxBA,EAASnsB,IAAI,YAAYmZ,cAAgB3K,EAAWD,GAAc6d,EACrE7xB,KAAKg0B,cAAe,EAGpBh0B,KAAKg0B,cAAe,IAIjBh0B,KAAKi0B,MAAQjgB,GAAchU,KAAKk0B,MAAQjgB,GAAYjU,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,QAAUrN,KAAKunB,eAAe,uBAAyBvnB,KAAK+zB,aAAe/zB,KAAK+nB,gBAAkB/nB,KAAKm0B,oBAAqB,CACxNn0B,KAAKm0B,qBAAsB,EAE3B,MAAMC,EAAMp0B,KAAKyF,IAAI,MAAO,GACtB4uB,EAAMr0B,KAAKyF,IAAI,MAAO,GACtB8tB,EAAUvzB,KAAKyF,IAAI,WAAW,GAC9BsnB,EAAiB/sB,KAAK+G,WAAW,kBAEvC,GAAI6qB,IAAa7jB,IAAU6jB,EAI1B,GAHA3jB,EAAMoQ,mBACNre,KAAKyX,cAAc,qBAAiBlQ,GACpCvH,KAAKyX,cAAc,qBAAiBlQ,GAC/BwlB,EAMJ9e,EAAMmQ,kCALN,IAAK,IAAI/L,EAAI2B,EAAY3B,EAAI4B,EAAU5B,IACtCrS,KAAKs0B,0BAA0Bt0B,KAAK6T,UAAUxB,GAAIgiB,EAAKd,GAO1D,GAAI3B,IAAa3jB,IAAU2jB,EAI1B,GAHA7jB,EAAMsQ,mBACNre,KAAKyX,cAAc,qBAAiBlQ,GACpCvH,KAAKyX,cAAc,qBAAiBlQ,GAC/BwlB,EAMJ9e,EAAMmQ,kCALN,IAAK,IAAI/L,EAAI2B,EAAY3B,EAAI4B,EAAU5B,IACtCrS,KAAKu0B,0BAA0Bv0B,KAAK6T,UAAUxB,GAAI+hB,EAAKb,GAQ1D,IAAI3B,IAAa7jB,IAAU6jB,IACK,kBAA3B5xB,KAAKyF,IAAI,cAAmC,CAC/C,MAAM+uB,EAAgBx0B,KAAK+G,WAAW,iBACjB,MAAjBytB,IACHx0B,KAAKyX,cAAc,OAAQ+c,GAC3BvmB,EAAMD,qBAEP,MAAMymB,EAAgBz0B,KAAK+G,WAAW,iBACjB,MAAjB0tB,IACHz0B,KAAKyX,cAAc,OAAQgd,GAC3BxmB,EAAMD,oB,CAIT,IAAI4jB,IAAa3jB,IAAU2jB,IACK,kBAA3B5xB,KAAKyF,IAAI,cAAmC,CAC/C,MAAMivB,EAAgB10B,KAAK+G,WAAW,iBACjB,MAAjB2tB,IACH10B,KAAKyX,cAAc,OAAQid,GAC3BzmB,EAAMD,qBAEP,MAAM2mB,EAAgB30B,KAAK+G,WAAW,iBACjB,MAAjB4tB,IACH30B,KAAKyX,cAAc,OAAQkd,GAC3B5mB,EAAMC,oB,EAKLhO,KAAKunB,eAAe,kBAAoBvnB,KAAKunB,eAAe,mBAC/DxZ,EAAMqQ,8BAGHpe,KAAKunB,eAAe,kBAAoBvnB,KAAKunB,eAAe,mBAC/DtZ,EAAMmQ,4B,EAKV,CAGUwW,cAAAA,GACT,GAAI50B,KAAKic,WAAWzL,OAAS,EAAG,CAC/B,IAAIqkB,EAAoB70B,KAAK80B,mBACJ,MAArBD,IACHA,EAAoB70B,KAAKyK,SAASC,KAAKa,EAAAA,EAAS7K,IAAIV,KAAKC,MAAO,CAAC,IACjED,KAAK80B,mBAAqBD,EAE1BA,EAAkBvoB,IAAI,QAAQ,CAACnD,EAASoI,KACvC,MAAMlI,EAASrJ,KAAKqJ,OACpB,GAAIA,EAAQ,CACX,MAAME,EAAIvJ,KAAKC,MAAMyX,UAAU5S,QACzBwE,EAAItJ,KAAKC,MAAMyX,UAAU3S,SAC/BoE,EAAQK,QAAQD,GAAID,GACpBH,EAAQM,QAAQF,EAAO,EAAJD,GACnBH,EAAQM,OAAW,EAAJF,EAAW,EAAJD,GACtBH,EAAQM,OAAW,EAAJF,GAAQD,GACvBH,EAAQM,QAAQF,GAAID,GAGpBtJ,KAAKic,WAAW7M,MAAMoP,IACrB,MAAMld,EAAOkd,EAAU2E,aAAa1d,IAAI,YAExC,GAAI4D,GACC/H,EAAM,CACT,IAAI4H,EAAO5H,EAAKmE,IAAI,QAChByD,GACHA,EAAKC,EAASoI,E,KAMnBvR,KAAK+0B,cAAcznB,SAAS0nB,KAAOH,EAAmBvnB,QAAQ,KAIhEunB,EAAkBxP,YAClBwP,EAAkB1e,cAAc,O,MAGhCnW,KAAK+0B,cAAcznB,SAAS0nB,KAAO,IAErC,CAGOC,eAAAA,GACNn1B,MAAMm1B,kBAGNj1B,KAAKk1B,GAAKl1B,KAAKwL,IACfxL,KAAKm1B,GAAKn1B,KAAKyL,IACfzL,KAAK40B,gBACN,CAEUnB,MAAAA,GACT,MAAMja,EAAQxZ,KAAKwZ,MACnB,GAAIA,EAAO,CACV,MAAM4b,EAAc5b,EAAM9L,OAAOuL,QAAQjZ,MAIzC,GAFAA,KAAKq1B,cAAgB,GAEjBD,EAAc,EAAG,CACpB,IAAI1nB,EAEJ,IAAK,IAAI2E,EAAI+iB,EAAc,EAAG/iB,GAAK,IAClC3E,EAAS8L,EAAM9L,OAAO+C,SAAS4B,GAC3B3E,EAAOjI,IAAI,WAAazF,KAAKyF,IAAI,UAAYiI,EAAOjI,IAAI,WAAazF,KAAKyF,IAAI,UAAYiI,EAAOgO,YAAc1b,KAAK0b,YACvH1b,KAAKq1B,cAAc3qB,KAAKgD,GACnBA,EAAOjI,IAAI,aAJoB4M,K,CAUvCrS,KAAKs1B,iB,CAEP,CAEO3nB,QAAAA,GAENvH,EAAAA,GAAapG,KAAKu1B,kBAAkB,CAACC,EAAM7uB,YAClCA,EAAM8uB,eAAez1B,KAAK01B,IAAK,IAGxC11B,KAAKu1B,iBAAmB,CAAC,EACzBpvB,EAAAA,GAAYnG,KAAK6T,WAAYvO,IAC5BA,EAASoP,OAAO,oBAAgBnN,GAChCjC,EAASoP,OAAO,oBAAgBnN,EAAU,GAE5C,CAEU+tB,eAAAA,GAET,MAAM1D,EAAW5xB,KAAKyF,IAAI,YACpBsI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEvB,IAAI+lB,EACAmK,EACA/D,IAAa7jB,GAChByd,EAAQ,SACRmK,EAAiB,gBAET/D,IAAa3jB,IACrBud,EAAQ,SACRmK,EAAiB,gBAGlB,IAAI7H,EAAM9tB,KAAKq1B,cAAc7kB,OACzBjL,EAAQ,EACZ,MAAM6C,EAAkBpI,KAAKyF,IAAI,mBAEjCzF,KAAKu1B,iBAAmB,CAAC,EAEzBpvB,EAAAA,GAAYnG,KAAK6T,WAAYvO,IAC5B,IAAK,IAAI+N,EAAI,EAAGA,EAAIya,EAAKza,IAAK,CAC7B,IAAIuiB,EAAgB51B,KAAKq1B,cAAchiB,GACnCwiB,EAAcD,EAAc/hB,UAAUtO,GACtCoB,EAAQrB,EAASG,IAAI+lB,GAEzB,GAAIqK,EAAa,CAChB,IAAIC,EAAaD,EAAYpwB,IAAI+lB,GACjC,GAAIpjB,EAAiB,CACpB,IAAI1C,EAAAA,GAAeiB,GAiBlB,MAhBA,GAAIjB,EAAAA,GAAeowB,GAAa,CAC/B,GAAInvB,GAAS,GAAKmvB,GAAc,EAAG,CAClCxwB,EAASoP,OAAOihB,EAAgBE,GAChC71B,KAAKu1B,iBAAiBK,EAAcF,KAAOE,EAC3CA,EAAcH,eAAez1B,KAAK01B,KAAO11B,KACzC,K,CAED,GAAI2G,EAAQ,GAAKmvB,EAAa,EAAG,CAChCxwB,EAASoP,OAAOihB,EAAgBE,GAChC71B,KAAKu1B,iBAAiBK,EAAcF,KAAOE,EAC3CA,EAAcH,eAAez1B,KAAK01B,KAAO11B,KACzC,K,QASH,GAAI0F,EAAAA,GAAeiB,IAAUjB,EAAAA,GAAeowB,GAAa,CACxDxwB,EAASoP,OAAOihB,EAAgBE,GAChC71B,KAAKu1B,iBAAiBK,EAAcF,KAAOE,EAC3CA,EAAcH,eAAez1B,KAAK01B,KAAO11B,KACzC,K,GAMJuF,GAAO,GAET,CAEUgvB,yBAAAA,CAA0BjvB,EAA+C8uB,EAAab,GAC/FptB,EAAAA,GAAYnG,KAAKsxB,oBAAqB5T,IACrC,IAAI/W,EAAQrB,EAASG,IAASiY,GACjB,MAAT/W,IACC4sB,IACH5sB,GAAS3G,KAAK4rB,wBAAwBtmB,EAAUoY,IAGjD1d,KAAK8uB,KAAK,gBAAiBnoB,GAC3B3G,KAAK+uB,KAAK,gBAAiBpoB,EAAQytB,G,GAGtC,CAEUE,yBAAAA,CAA0BhvB,EAA+C+uB,EAAad,GAC/FptB,EAAAA,GAAYnG,KAAKuxB,oBAAqB7T,IAErC,IAAI/W,EAAQrB,EAASG,IAASiY,GACjB,MAAT/W,IACC4sB,IACH5sB,GAAS3G,KAAK+rB,wBAAwBzmB,EAAUoY,IAGjD1d,KAAK8uB,KAAK,gBAAiBnoB,GAC3B3G,KAAK+uB,KAAK,gBAAiBpoB,EAAQ0tB,G,GAGtC,CAKOtI,uBAAAA,CAAwBzmB,EAAuCoY,GACrE,MAAMmY,EAAcvwB,EAASG,IAAI,gBAEjC,GAAIowB,EAAa,CAChB,MAAME,EAAkBF,EAAYnvB,UAEpC,OAAOmvB,EAAYpwB,IAAIiY,EAAY,GAAKqY,EAAgBtwB,IAAI,MAAO,GAAKzF,KAAK+rB,wBAAwB8J,EAAanY,E,CAEnH,OAAO,CACR,CAKOkO,uBAAAA,CAAwBtmB,EAAuCoY,GACrE,MAAMmY,EAAcvwB,EAASG,IAAI,gBAEjC,GAAIowB,EAAa,CAChB,MAAME,EAAkBF,EAAYnvB,UACpC,OAAOmvB,EAAYpwB,IAAIiY,EAAY,GAAKqY,EAAgBtwB,IAAI,MAAO,GAAKzF,KAAK4rB,wBAAwBiK,EAAanY,E,CAEnH,OAAO,CACR,CAKOiW,gBAAAA,CAAiBruB,EAAuCoY,GAC9D,MAAMmY,EAAcvwB,EAASG,IAAI,gBAEjC,OAAIowB,EACIA,EAAYpwB,IAAIiY,EAAY,GAAK1d,KAAK2zB,iBAAiBkC,EAAanY,GAErE,CACR,CAKOgW,gBAAAA,CAAiBpuB,EAAuCoY,GAC9D,MAAMmY,EAAcvwB,EAASG,IAAI,gBAEjC,OAAIowB,EACIA,EAAYpwB,IAAIiY,EAAY,GAAK1d,KAAK0zB,iBAAiBmC,EAAanY,GAErE,CACR,CAKOsY,kBAAAA,CAAmB9X,GACzBle,KAAK8hB,oBACN,CAEO1L,cAAAA,GACNpW,KAAKi2B,YAAa,EAClBj2B,KAAKqlB,WACN,CAEO6Q,iBAAAA,GACNl2B,KAAKm2B,mBACLn2B,KAAK+nB,cAAe,EACpB/nB,KAAKwzB,gBAAiB,EACtBxzB,KAAKo2B,uBAAwB,EAC7Bp2B,KAAKqlB,WACN,CAEO5C,WAAAA,GACN3iB,MAAM2iB,cACNziB,KAAKi2B,YAAa,EAClBj2B,KAAKm0B,qBAAsB,EAC3Bn0B,KAAK+zB,aAAc,EACnB/zB,KAAKwzB,gBAAiB,CACvB,CAEO6C,eAAAA,CAAgBtW,GACtB,IAAI3W,EAAS2W,EAAOta,IAAI,UACxB,GAAI2D,EAAQ,CACX,IAAI9D,EAAW8D,EAAO9D,SAElB+C,EAAY0X,EAAOta,IAAI,YAAaH,EAASG,IAAI,YAAa,KAC9D6C,EAAYyX,EAAOta,IAAI,YAAaH,EAASG,IAAI,YAAa,KAE9DsI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEjBqR,EAAY/I,EAAM4d,qBAAqBrmB,EAAUtF,KAAK8xB,QAASzpB,EAAWrI,KAAKyF,IAAI,MAAO,IAC1FsR,EAAY9I,EAAM6d,qBAAqBxmB,EAAUtF,KAAK+xB,QAASzpB,EAAWtI,KAAKyF,IAAI,MAAO,IAE1FoJ,EAAQ7O,KAAKs2B,SAASxf,EAAWC,GAEjC8B,EAAOvT,EAASG,IAAI,OAAQoJ,EAAMrD,GAClCsN,EAAQxT,EAASG,IAAI,QAASoJ,EAAMrD,GACpCyP,EAAM3V,EAASG,IAAI,MAAOoJ,EAAMpD,GAChCyP,EAAS5V,EAASG,IAAI,SAAUoJ,EAAMpD,GAEtCD,EAAI,EACJC,EAAI,EAEJlC,EAAIuP,EAAQD,EACZvP,EAAI4R,EAASD,EAEjB,GAAIjb,KAAKu2B,kBAAkBzf,EAAWC,GAAY,CACjD3N,EAAOzD,WAAW,WAAYoa,EAAOhZ,WAAW,WAEhD,IAAIykB,EAAQzL,EAAOta,IAAI,SAEvB,MAAMmsB,EAAW5xB,KAAKyF,IAAI,YACpBsI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEvB,QAAa8B,GAATikB,EAAoB,CACvB,IAAIgL,EAEA5E,GAAY7jB,GACF,SAATyd,EACHgL,EAAYx2B,KAAK+xB,QAEA,QAATvG,EACRgL,EAAYx2B,KAAK4yB,YAEA,QAATpH,EACRgL,EAAYx2B,KAAK8yB,YAEA,OAATtH,IACRgL,EAAYx2B,KAAK6yB,YAEd2D,IACHzf,EAAY9I,EAAM6d,qBAAqBxmB,EAAUkxB,EAAkB,EAAGx2B,KAAKyF,IAAI,MAAO,IAEtFoJ,EAAQZ,EAAMxI,IAAI,YAAY2gB,gBAAgBrP,GAE9CtL,EAAIoD,EAAMpD,EACVD,EAAIqN,EAAOtP,EAAIlB,KAIH,SAATmjB,EACHgL,EAAYx2B,KAAK8xB,QAEA,QAATtG,EACRgL,EAAYx2B,KAAKyyB,YAEA,QAATjH,EACRgL,EAAYx2B,KAAK2yB,YAEA,OAATnH,IACRgL,EAAYx2B,KAAK0yB,YAGd8D,IACH1f,EAAY/I,EAAM4d,qBAAqBrmB,EAAUkxB,EAAkB,EAAGx2B,KAAKyF,IAAI,MAAO,IAEtFoJ,EAAQd,EAAMtI,IAAI,YAAY2gB,gBAAgBtP,GAE9CtL,EAAIqD,EAAMrD,EACVC,EAAIyP,EAAS5R,EAAIhB,G,MAKnBkD,EAAIqN,EAAOtP,EAAIlB,EACfoD,EAAIyP,EAAS5R,EAAIhB,EAGlB,MAAMirB,EAAUxT,EAAOta,IAAI,WAC3B,GAAI8tB,EAAS,CACZ,MAAM/Z,EAAQxZ,KAAKwZ,MACnB,GAAIoY,GAAY7jB,EAAO,CACtB,IAAI2Y,EAAiB1mB,KAAKue,SAASzH,EAAY,IAAMC,GACrD,GAAI2P,EAAgB,CACnB,IAAI+P,EAAiB/P,EAAepL,SAChCA,EAASlS,EAAOiY,cAChBqV,EAAKjrB,EACTA,EAAIgrB,EAAexb,IAEJ,QAAXsY,EACH9nB,EAAIgrB,EAAevb,OAASI,EAAOL,IAEhB,QAAXsY,EACJ/Z,IACCkd,EAAKld,EAAMtO,cAAcnG,SAAW,EACvC0G,EAAIgrB,EAAevb,OAASI,EAAOL,IAGnCxP,GAAK6P,EAAOJ,QAKdzP,GAAK6P,EAAOJ,M,CAGdlb,KAAKue,SAASzH,EAAY,IAAMC,GAAa3N,C,KAEzC,CACJ,IAAIsd,EAAiB1mB,KAAKue,SAASzH,EAAY,IAAMC,GACrD,GAAI2P,EAAgB,CACnB,IAAI+P,EAAiB/P,EAAepL,SAChCA,EAASlS,EAAOiY,cAChBsV,EAAKnrB,EACTA,EAAIirB,EAAe3d,MAEJ,QAAXya,EACH/nB,EAAIirB,EAAe5d,KAAOyC,EAAOxC,MAEd,QAAXya,EACJ/Z,IACCmd,EAAKnd,EAAMtO,cAAcpG,QAAU,EACtC0G,EAAIirB,EAAe5d,KAAOyC,EAAOxC,MAGjCtN,GAAK8P,EAAOzC,MAKdrN,GAAK8P,EAAOzC,I,CAId7Y,KAAKue,SAASzH,EAAY,IAAMC,GAAa3N,C,EAI3CA,EAAO8M,OAAO,WACjB9M,EAAOzD,WAAW,WAAYgC,KAAKsI,IAAI1G,IACvCH,EAAOzD,WAAW,YAAagC,KAAKsI,IAAI3G,KAGzCF,EAAO7I,OAAO,CAAEiL,IAAGC,K,MAGnBrC,EAAOzD,WAAW,WAAW,E,CAGhC,CAEU4wB,iBAAAA,CAAkBK,EAAoBC,GAC/C,OAAO72B,KAAKg0B,YACb,CAKO8C,UAAAA,CAAWC,GACjB,GAAI/2B,KAAKg3B,UAAUD,GAAK,CACvB/2B,KAAKi3B,uBACLj3B,KAAK+pB,WAAa/pB,KAAKg3B,UAAUD,GACjC/2B,KAAKk2B,oBACLl2B,KAAKk3B,WAAaH,EAElB,MAAMzlB,EAAO,iBACTtR,KAAKiM,OAAOmF,UAAUE,IACzBtR,KAAKiM,OAAOoF,SAASC,EAAM,CAAEA,KAAMA,EAAMC,OAAQvR,KAAM+2B,GAAIA,G,CAG9D,CAKOI,aAAAA,GACN/wB,EAAAA,GAAapG,KAAKg3B,WAAW,CAACxB,EAAM4B,KAC/BA,GAAWp3B,KAAKq3B,gBACnBlxB,EAAAA,GAAYixB,GAAU9xB,IACrBtF,KAAKkc,gBAAgB5W,EAAS,G,IAIjCtF,KAAKg3B,UAAY,CAAC,EAClBh3B,KAAK+pB,WAAa/pB,KAAKs3B,aACxB,CAEUL,oBAAAA,GACT9wB,EAAAA,GAAYnG,KAAK+pB,YAAazkB,IAC7B,IAAIiyB,EAAUjyB,EAASiyB,QACnBA,GACHpxB,EAAAA,GAAYoxB,GAAUxX,IACrB,GAAIA,EAAQ,CACX,IAAI3W,EAAS2W,EAAOta,IAAI,UACpB2D,GACHA,EAAOzD,WAAW,WAAW,E,QAOlC3F,KAAKm0B,qBAAsB,CAC5B,CAQahb,IAAAA,CAAK4D,G,uGACjB/c,KAAK+yB,SACL,IAAIyE,EAAgC,GACpCA,EAAS9sB,KAAK+sB,EAAMte,KAAIue,KAAC,KAAA3a,GAAU4a,MAAK,KACvC33B,KAAK43B,YAAa,EAClB,IAAI7pB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YACpBwI,IAAU2jB,GACb3jB,EAAMmQ,6BAEHrQ,IAAU6jB,GACb7jB,EAAMqQ,4B,KAGRoZ,EAAS9sB,KAAK1K,KAAK4M,iBAAiBuM,KAAK4D,IACzCya,EAAS9sB,KAAK1K,KAAK63B,oBAAmB,EAAM9a,UACtC+a,QAAQC,IAAIP,EACnB,G,CAQaprB,IAAAA,CAAK2Q,G,uGACjB/c,KAAK+yB,SACL,IAAIyE,EAA2B,GAC/BA,EAAS9sB,KAAK+sB,EAAMrrB,KAAIsrB,KAAC,KAAA3a,GAAU4a,MAAK,KACvC33B,KAAKg4B,WAAY,CAAK,KAEvBR,EAAS9sB,KAAK1K,KAAK4M,iBAAiBR,KAAK2Q,IACzCya,EAAS9sB,KAAK1K,KAAK63B,oBAAmB,EAAO9a,UACvC+a,QAAQC,IAAIP,EACnB,G,CASa7X,YAAAA,CAAara,EAA+CyX,G,uHACxE,MAAMya,EAAW,CAACC,EAAM9X,aAAY+X,KAAC,KAAApyB,EAAUyX,IAE1CrX,EAAAA,GAAeqX,KACnBA,EAAW/c,KAAKyF,IAAI,yBAA0B,IAG/C,MAAM+X,EAASxd,KAAKyF,IAAI,wBAExBU,EAAAA,GAAYnG,KAAKi4B,cAAeva,IAC/B8Z,EAAS9sB,KAAKpF,EAASmY,QAAQ,CAAEC,IAAKA,EAAM,UAAkBH,GAAIjY,EAASG,IAAIiY,GAAaX,SAAUA,EAAWS,OAAQA,IAAU0a,cAAc,UAG5IJ,QAAQC,IAAIP,EACnB,G,CASa/X,YAAAA,CAAana,EAA+CyX,G,uHACxE,MAAMya,EAAW,CAACC,EAAMhY,aAAYiY,KAAC,KAAApyB,EAAUyX,IAEzCiW,EAAchzB,KAAKiC,OAAOC,OAAO,SAAU,CAAC,GAE7CwD,EAAAA,GAAeqX,KACnBA,EAAWiW,EAAYvtB,IAAI,yBAA0BzF,KAAKyF,IAAI,yBAA0B,KAGzF,MAAM+X,EAASwV,EAAYvtB,IAAI,uBAAwBzF,KAAKyF,IAAI,yBAE1DsI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YACpB8tB,EAAUvzB,KAAKyF,IAAI,WAqBzB,GAnBImsB,IAAa7jB,GAAU6jB,GAE1BzrB,EAAAA,GAAYnG,KAAKmxB,eAAgBzT,IAChC,IAAIzW,EAAMgH,EAAMlH,WAAW,OACvBc,EAAYoG,EAAMpG,YAElBnC,EAAAA,GAAeuB,IAAQA,EAAMY,IAChCA,EAAYZ,GAETssB,IACH1rB,EAAY,GAIA,MADDvC,EAASG,IAAIiY,IAExB8Z,EAAS9sB,KAAKpF,EAASmY,QAAQ,CAAEC,IAAKA,EAAM,UAAkBH,GAAI1V,EAAWkV,SAAUA,EAAWS,OAAQA,IAAU0a,c,IAInHtG,IAAa3jB,IAAU2jB,EAAU,CAEpC,IAAI3qB,EAAM8G,EAAMhH,WAAW,OACvBc,EAAYkG,EAAMlG,YAClBnC,EAAAA,GAAeuB,IAAQA,EAAMY,IAChCA,EAAYZ,GAETssB,IACH1rB,EAAY,GAGb1B,EAAAA,GAAYnG,KAAKkxB,eAAgBxT,IAEnB,MADDpY,EAASG,IAAIiY,IAExB8Z,EAAS9sB,KAAKpF,EAASmY,QAAQ,CAAEC,IAAKA,EAAM,UAAkBH,GAAI1V,EAAWkV,SAAUA,EAAWS,OAAQA,IAAU0a,c,UAKjHJ,QAAQC,IAAIP,EACnB,G,CAEOW,eAAAA,GACNn4B,KAAK+zB,aAAc,EACnB/zB,KAAKqlB,YACLrlB,KAAK6zB,uBACN,CAEUA,qBAAAA,GACT,MAAMuE,EAAgBp4B,KAAKy1B,eACvB2C,GAEHhyB,EAAAA,GAAagyB,GAAe,CAAC5C,EAAM7uB,KAC7BA,EAAMotB,aACVptB,EAAMwxB,iB,GAIV,CAEOnX,aAAAA,GACNlhB,MAAMkhB,gBACFhhB,KAAKq4B,WACRr4B,KAAKoW,iBACLpW,KAAKq4B,UAAW,EAElB,CAOO5jB,mBAAAA,CAAoBnP,GACrBtF,KAAK+G,WAAW,uBACpB/G,KAAK8hB,mBAAmBxc,GACxBtF,KAAK+hB,kBAAkBzc,IAGxB,MAAMiP,EAAUvU,KAAKyF,IAAI,WAEzB,GAAI8O,EACH,IAAKvU,KAAK8T,YAAc9T,KAAKyF,IAAI,YAGhC,GAFA8O,EAAQC,aAAalP,GAEjBA,EAAU,CACb,IAAI+C,EAAYrI,KAAKyF,IAAI,YAAa,GAClC6C,EAAYtI,KAAKyF,IAAI,YAAa,GAElC6yB,EAAgBhzB,EAASG,IAAI,YAAa4C,GAC1CkwB,EAAgBjzB,EAASG,IAAI,YAAa6C,GAE9C,MAAMyF,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEjB2uB,EAAMp0B,KAAKyF,IAAI,MAAO,GACtB4uB,EAAMr0B,KAAKyF,IAAI,MAAO,GAEtB+yB,EAAOzqB,EAAM4d,qBAAqBrmB,EAAUtF,KAAKozB,eAAiBpzB,KAAKy4B,cAAgBz4B,KAAK04B,aAAe14B,KAAKy4B,cAAgBH,EAAelE,GAC/IuE,EAAO1qB,EAAM6d,qBAAqBxmB,EAAUtF,KAAKszB,eAAiBtzB,KAAK44B,cAAgB54B,KAAK64B,aAAe74B,KAAK44B,cAAgBL,EAAelE,GAE/IxlB,EAAQ7O,KAAKs2B,SAASkC,EAAMG,GAElC,IAAIxf,GAAO,EAOX,GANAhT,EAAAA,GAAYnG,KAAKi4B,cAAezM,IACG,MAA9BlmB,EAASG,IAAI+lB,KAChBrS,GAAO,E,IAILA,EAAM,CACT,MAAMK,EAAQxZ,KAAKwZ,MACfA,GAASA,EAAMJ,OAAOvK,IACzB0F,EAAQ2K,MAAMtc,KAAKk2B,gBACnBvkB,EAAQjI,IAAI,gBAAiBtM,KAAK+4B,kBAAkBzzB,IACpDiP,EAAQjI,IAAI,UAAWtM,KAAKsN,SAASsH,SAAS,CAAEpJ,EAAGqD,EAAMrD,EAAGC,EAAGoD,EAAMpD,MAGrE8I,EAAQC,kBAAajN,E,MAItBgN,EAAQC,kBAAajN,E,OAKvBvH,KAAKg5B,aAGR,CAEOA,WAAAA,GACN,MAAMzkB,EAAUvU,KAAKyF,IAAI,WAIzB,OAHI8O,GACHA,EAAQjI,IAAI,gBAAiBtM,MAEvBF,MAAMk5B,aACd,CAEUD,iBAAAA,CAAkBzzB,GAC3B,GAAuC,UAAnCtF,KAAKyF,IAAI,uBAAoC,CAChD,MAAM8xB,EAAUjyB,EAASiyB,QACzB,GAAIA,GAAWA,EAAQ/mB,OAAS,EAAG,CAClC,MACMpH,EADSmuB,EAAQ,GACD9xB,IAAI,UAC1B,GAAI2D,EACH,OAAOA,C,EAIV,OAAOpJ,IACR,CAKO+hB,iBAAAA,CAAkBzc,GACxB,MAAM2zB,EAAiBj5B,KAAKyF,IAAI,kBAEhC,GAAIwzB,EAAgB,CAEnB,MAAM/Z,EAAQ+Z,EAAexzB,IAAI,SACjC,GAAIyZ,EAAO,CACV,IAAIga,EAAM,GACN5zB,GACH4Z,EAAM1K,aAAalP,GACnB4zB,EAAMl5B,KAAKyF,IAAI,kBAAmByZ,EAAMzZ,IAAI,OAAQzF,KAAKyF,IAAI,OAAQ,QAGrEyZ,EAAM1K,aAAaxU,KAAKm5B,gBACxBD,EAAMl5B,KAAKyF,IAAI,uBAAwBzF,KAAKyF,IAAI,kBAAmByZ,EAAMzZ,IAAI,OAAQzF,KAAKyF,IAAI,OAAQ,QAGvGyZ,EAAM5S,IAAI,OAAQ4sB,E,CAGnB,MAAME,EAAaH,EAAexzB,IAAI,cACtC,GAAI2zB,EAAY,CACf,IAAIF,EAAM,GACN5zB,GACH8zB,EAAW5kB,aAAalP,GACxB4zB,EAAMl5B,KAAKyF,IAAI,kBAAmB2zB,EAAW3zB,IAAI,OAAQ,OAGzD2zB,EAAW5kB,aAAaxU,KAAKm5B,gBAC7BD,EAAMl5B,KAAKyF,IAAI,uBAAwB2zB,EAAW3zB,IAAI,OAAQ,MAG/D2zB,EAAW9sB,IAAI,OAAQ4sB,E,EAG1B,CAEUG,mBAAAA,GACT,IAAIz2B,EAAO,OAAS5C,KAAK8xB,QASzB,OARI9xB,KAAKyF,IAAI,SAASyQ,OAAsB,cAC3CtT,GAAQ,iBAETA,GAAQ,UAAY5C,KAAK+xB,QACrB/xB,KAAKyF,IAAI,SAASyQ,OAAsB,cAC3CtT,GAAQ,iBAETA,GAAQ,IACDA,CACR,CAKO0zB,QAAAA,CAASxf,EAAmBC,GAClC,IAAIvL,EAAIxL,KAAKyF,IAAI,SAASA,IAAI,YAAYyf,qBAAqBpO,GAC3DrL,EAAIzL,KAAKyF,IAAI,SAASA,IAAI,YAAYyf,qBAAqBnO,GAG3DxH,EAAM,UAeV,OAdI9D,GAAK8D,IACR9D,GAAK8D,GAEF9D,EAAI8D,IACP9D,EAAI8D,GAGD/D,GAAK+D,IACR/D,GAAK+D,GAEF/D,EAAI+D,IACP/D,EAAI+D,GAGE,CAAE/D,EAAGA,EAAGC,EAAGA,EACnB,CAEU6tB,cAAAA,CAAeC,GACxB,OAAO,CACR,CAKOjX,gBAAAA,GACNtiB,KAAKg5B,cACLh5B,KAAK+hB,uBAAkBxa,GACvBvH,KAAK8hB,wBAAmBva,EACzB,CAEU4uB,gBAAAA,GACTr2B,MAAMq2B,mBACNn2B,KAAKyF,IAAI,SAAS0Q,cAAc,SAChCnW,KAAKyF,IAAI,SAAS0Q,cAAc,SAChCnW,KAAKw5B,eACN,CAMOA,aAAAA,GACNx5B,KAAK2F,WAAW,qBAAiB4B,GACjCvH,KAAK2F,WAAW,qBAAiB4B,GACjCvH,KAAK2F,WAAW,qBAAiB4B,GACjCvH,KAAK2F,WAAW,qBAAiB4B,GAEjCvH,KAAK2F,WAAW,YAAQ4B,GACxBvH,KAAK2F,WAAW,YAAQ4B,GACxBvH,KAAK2F,WAAW,YAAQ4B,GACxBvH,KAAK2F,WAAW,YAAQ4B,EACzB,CASO2b,eAAAA,CAAgBC,GACtB,OAAOnjB,KAAKic,WAAWvR,KAAK,CAC3ByY,aAAcA,GAEhB,CAOA,iBAAWmU,GACV,OAAOt3B,KAAKq3B,cACb,CAKOoC,iBAAAA,CAAkBl0B,GACxB,MAAMwI,EAAQ/N,KAAKyF,IAAI,SAGvB,GAFiBzF,KAAKyF,IAAI,aAEVsI,GAASA,EAAMmI,OAAsB,YAAa,CACjE,MAAMwjB,EAAe3rB,EAAM2rB,eACrBC,EAAe5rB,EAAMhH,WAAW,eAAgBgH,EAAMhH,WAAW,MAAO,IACxE6yB,EAAKF,EAAe15B,KAAKyF,IAAI,YAAa,IAEhD,IAAIkB,GAAS7C,IAEb,KAAO6C,EAAQgzB,GAAc,CAC5B,MAAMr0B,EAAWtF,KAAK6T,UAAUtO,GAChC,IAAID,EAkBH,MAlBa,CACb,MAAMgtB,EAAOhtB,EAASgtB,KAStB,GAPC3rB,EADG2rB,EACKA,EAAa,OAGbhtB,EAASG,IAAI,SAAU,GAEhCkB,GAASizB,IAELjzB,EAAQgzB,GAIX,MAHAp0B,G,GAYJ,OAAOA,CACR,EA1gDA8E,OAAAC,eAAAomB,EAAA,a,gDAAkC,aAClCrmB,OAAAC,eAAAomB,EAAA,c,gDAA0CC,EAAAA,EAAOnV,WAAWC,OAAO,CAACiV,EAAShV,c,eCpuBxE,MAAgBme,UAAyBnJ,EAA/CtmB,WAAAA,G,oBAwBCC,OAAAC,eAAA,Y,gDAAwB,IACxBD,OAAAC,eAAA,Y,gDAAwB,GAsrBzB,CA3rBWwvB,aAAAA,CAAcC,EAAsCz0B,GAC7D,OAAOtF,KAAKg6B,WAAW10B,EAAUy0B,EAClC,CAKO/I,eAAAA,GACNlxB,MAAMkxB,kBAEN,MAAMjjB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEjBw0B,EAAe,eACfC,EAAY,YAEdnsB,EAAMmI,OAA0B+jB,KAC9Bj6B,KAAKyF,IAAI,wBACbzF,KAAKyyB,YAAczyB,KAAK8xB,UAItB/jB,EAAMmI,OAAsBgkB,KAC1Bl6B,KAAKyF,IAAI,qBACbzF,KAAKyyB,YAAczyB,KAAK8xB,UAItB7jB,EAAMiI,OAA0B+jB,KAC9Bj6B,KAAKyF,IAAI,wBACbzF,KAAK4yB,YAAc5yB,KAAK+xB,UAItB9jB,EAAMiI,OAAsBgkB,KAC1Bl6B,KAAKyF,IAAI,qBACbzF,KAAK4yB,YAAc5yB,KAAK+xB,SAG3B,CAGO/c,gBAAAA,GACNlV,MAAMkV,mBAEN,MAAMjH,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SAEjBqoB,EAAM9tB,KAAK6T,UAAUrD,OACrBwD,EAAarM,KAAK4H,IAAI,EAAGvP,KAAKgU,aAAe,GAC7CC,EAAWtM,KAAKV,IAAIjH,KAAKiU,WAAa,EAAG6Z,EAAM,GAErD,GAAI/f,EAAM0c,QAAUxc,EAAMwc,OACzB,IAAK,IAAIpY,EAAI2B,EAAY3B,GAAK4B,EAAU5B,IAAK,CAC5C,IAAI/M,EAAWtF,KAAK6T,UAAUxB,GAC9BrS,KAAKm6B,gBAAgB70B,E,CAGxB,CAEO2vB,eAAAA,GACN,MAAMzb,EAAQxZ,KAAKwZ,MACfA,IACHxZ,KAAKo6B,IAAM5gB,EAAMtO,cAAcnG,SAC/B/E,KAAKq6B,IAAM7gB,EAAMtO,cAAcpG,SAGhC,MAAMiJ,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YAEpB60B,EAAkBt6B,KAAKu6B,QAAQ1W,SACjC7jB,KAAKqN,QAAQ,SACmB,MAA/BitB,EAAgB70B,IAAI,SACvB60B,EAAgBhuB,IAAI,OAAQtM,KAAKyF,IAAI,SAInCzF,KAAKqN,QAAQ,gBAC0B,MAAtCitB,EAAgB70B,IAAI,gBACvB60B,EAAgBhuB,IAAI,cAAetM,KAAKyF,IAAI,gBAI1CzF,KAAKqN,QAAQ,WACqB,MAAjCitB,EAAgB70B,IAAI,WACvB60B,EAAgBhuB,IAAI,SAAUtM,KAAKyF,IAAI,WAIzC,IAAIF,EAAQ,EACRi1B,EAAe,EACfnoB,EAAI,EAERlM,EAAAA,GAAYyrB,EAASlkB,QAASA,IAC7B,GAAIA,aAAkBmsB,EAAkB,CACvC,MAAMtG,EAAU7lB,EAAOjI,IAAI,WAEvB8tB,GAAgB,GAALlhB,GACdmoB,KAGIjH,GAAW7lB,EAAOjI,IAAI,cAC1B+0B,G,CAIE9sB,IAAW1N,OACduF,EAAQi1B,EAAe,GAExBnoB,GAAG,IAGCrS,KAAKyF,IAAI,eACbF,EAAQ,EACRi1B,EAAe,GAGK,IAAjBA,IACHA,EAAe,EACfj1B,EAAQ,GAGT,MAAMk1B,EAAY1sB,EAAMtI,IAAI,YACtBi1B,EAAYzsB,EAAMxI,IAAI,YAEtBb,EAAoB,oBACpBC,EAAkB,kBAElB81B,EAAiBF,EAAUh1B,IAAIb,EAAmB,GAClDg2B,EAAiBH,EAAUh1B,IAAIZ,EAAiB,GAEhDg2B,EAAiBH,EAAUj1B,IAAIb,EAAmB,GAClDk2B,EAAiBJ,EAAUj1B,IAAIZ,EAAiB,GAQtD,GANA7E,KAAKy4B,aAAekC,EAAkBp1B,EAAQi1B,GAAiBI,EAAiBD,GAChF36B,KAAK04B,aAAeiC,GAAkBp1B,EAAQ,GAAKi1B,GAAgBI,EAAiBD,GAEpF36B,KAAK44B,aAAeiC,EAAkBt1B,EAAQi1B,GAAiBM,EAAiBD,GAChF76B,KAAK64B,aAAegC,GAAkBt1B,EAAQ,GAAKi1B,GAAgBM,EAAiBD,GAEhF9sB,EAAM0c,QAAUxc,EAAMwc,QACzB,GAAIzqB,KAAKi2B,YAAcj2B,KAAK+nB,cAAgB/nB,KAAK+zB,aAAe/zB,KAAKqN,QAAQ,QAAUrN,KAAKqN,QAAQ,QAAUrN,KAAK0iB,WAAY,CAC9H,MAAMoL,EAAM9tB,KAAK6T,UAAUrD,OAE3B,IAAIwD,EAAarM,KAAK4H,IAAI,EAAGvP,KAAKgU,aAAe,GAC7CC,EAAWtM,KAAKV,IAAIjH,KAAKiU,WAAa,EAAG6Z,EAAM,GAEnD,IAAK,IAAIzb,EAAI,EAAGA,EAAI2B,EAAY3B,IAC/BrS,KAAK+6B,cAAc/6B,KAAK6T,UAAUxB,IAAI,GAEvC,IAAI6C,EAAWlV,KAAK6T,UAAUG,GAE9B,IAAK,IAAI3B,EAAI2B,EAAY3B,GAAK4B,EAAU5B,IAAK,CAC5C,IAAI/M,EAAWtF,KAAK6T,UAAUxB,GAC9B,GAA8B,MAA1B/M,EAASG,IAAI,WAA+C,MAA1BH,EAASG,IAAI,UAAmB,CAErE,GADAyP,EAAW5P,EACP+M,EAAI,GAAK2B,EAAa,EACzB,IAAK,IAAIwW,EAAInY,EAAI,EAAGmY,GAAK,EAAGA,IAAK,CAChC,IAAIllB,EAAWtF,KAAK6T,UAAU2W,GAC9B,GAA8B,MAA1BllB,EAASG,IAAI,WAA+C,MAA1BH,EAASG,IAAI,UAAmB,CACrEyP,EAAW5P,EACX,K,EAIH,K,CAGAtF,KAAK+6B,cAAcz1B,GAAU,E,CAG/B,IAAK,IAAI+M,EAAI2B,EAAY3B,GAAK4B,EAAU5B,IAAK,CAC5C,IAAI/M,EAAWtF,KAAK6T,UAAUxB,GAC9BrS,KAAKg7B,gBAAgB11B,EAAU4P,GACD,MAA1B5P,EAASG,IAAI,WAA+C,MAA1BH,EAASG,IAAI,YAClDyP,EAAW5P,E,CAIb,IAAK,IAAI+M,EAAI4B,EAAW,EAAG5B,EAAIyb,EAAKzb,IACnCrS,KAAK+6B,cAAc/6B,KAAK6T,UAAUxB,IAAI,E,OAKxCrS,KAAKq4B,UAAW,EAEjBr4B,KAAK8hB,mBAAmB9hB,KAAKyF,IAAI,oBACjC3F,MAAMm1B,iBACP,CAGUkF,eAAAA,CAAgB70B,GACzB,IAAIqgB,EAAWrgB,EAASG,IAAI,YAC5B,IAAKkgB,EAAU,CAEdA,EAAW3lB,KAAK85B,cAAc95B,KAAKu6B,QAASj1B,GAC5CA,EAASgH,IAAI,WAAYqZ,GACzBA,EAASnR,aAAalP,GAEtB,MAAM2zB,EAAiB3zB,EAASG,IAAI,kBACpC,GAAIwzB,EAAgB,CACnB,MAAMgC,EAAkBhC,EAAexzB,IAAI,mBAC3C,GAAIw1B,EAAiB,CACpB,MAAMC,EAAKD,EAAgBh5B,OAAOoK,OAAO,WACzClG,EAAAA,GAAYg1B,EAAAA,GAAiBC,IAC5B,MAAMz0B,EAAQgf,EAAUlgB,IAAI21B,EAASp7B,KAAKyF,IAAI21B,IAC9CH,EAAgB3uB,IAAI8uB,EAASz0B,GAC7Bu0B,EAAG5uB,IAAI8uB,EAASz0B,EAAM,G,EAKzB,IAAI00B,EAA6C/1B,EAASG,IAAI,iBAC1D41B,GACHl1B,EAAAA,GAAYk1B,GAAgB1V,IAC3BA,EAAS9X,SAAS,IAIpBwtB,EAAgB,GAChB/1B,EAASoP,OAAO,gBAAiB2mB,GAEjCr7B,KAAKic,WAAW7M,MAAMoP,IACrB,MAAM9G,EAAY8G,EAAU9G,UACtB4jB,EAAgBt7B,KAAK85B,cAActb,EAAU+b,QAASj1B,GACxD+1B,GACHA,EAAc3wB,KAAK4wB,GAEpBA,EAAc31B,WAAW,OAAQ6Y,EAAU+b,SAC3C7iB,EAAUjN,SAASC,KAAK4wB,EAAc,G,CAGzC,CAEOpY,eAAAA,CAAgBC,GAStB,OARAhd,EAAAA,GAAYnG,KAAK6T,WAAYvO,IAC5B,MAAMqgB,EAAWrgB,EAASG,IAAI,YAC1BkgB,IACHA,EAAS9X,UACTvI,EAASgH,IAAI,gBAAY/E,G,IAIpBzH,MAAMojB,gBAAgBC,EAC9B,CAEU6X,eAAAA,CAAgB11B,EAA+Ci2B,GACxE,IAAI5V,EAAWrgB,EAASG,IAAI,YAO5B,MAAM+1B,EAASx7B,KAAK8xB,QACd2J,EAASz7B,KAAK+xB,QAEd2J,EAASp2B,EAASG,IAAI+1B,GACtBG,EAASr2B,EAASG,IAAIg2B,GAE5B,GAAc,MAAVC,GAA4B,MAAVC,EAAgB,CACrC,MAAMC,EAAa57B,KAAKyyB,YAClBoJ,EAAa77B,KAAK4yB,YAElBvqB,EAAYrI,KAAKyF,IAAI,YAAaH,EAASG,IAAI,YAAa,KAC5D6C,EAAYtI,KAAKyF,IAAI,YAAaH,EAASG,IAAI,YAAa,KAE5Dq2B,EAAgB97B,KAAKyF,IAAI,gBAAiBH,EAASG,IAAI,gBAAiB4C,IACxE0zB,EAAgB/7B,KAAKyF,IAAI,gBAAiBH,EAASG,IAAI,gBAAiB6C,IAExExD,EAAQ6gB,EAASlgB,IAAI,SACrBV,EAAS4gB,EAASlgB,IAAI,UAEtB8tB,EAAUvzB,KAAKyF,IAAI,WAEnBsI,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YAEpBu2B,EAASjuB,EAAMtI,IAAI,SACnBw2B,EAAOluB,EAAMtI,IAAI,OAEjBy2B,EAASjuB,EAAMxI,IAAI,SACnB02B,EAAOluB,EAAMxI,IAAI,OAEvB,IAAI22B,EACAh8B,EACAi8B,EACAxhB,EAEAwZ,EAAMr0B,KAAKyF,IAAI,MAAO,GACtB2uB,EAAMp0B,KAAKyF,IAAI,MAAO,GAEtB62B,GAAO,EACPC,GAAO,EAEX,GAAItuB,EAAMiI,OAA0B,iBAAmBnI,EAAMmI,OAA0B,gBAAiB,CAEvG,IAAI/Q,EAAgBnF,KAAKy4B,aAAeqD,EAAgB,GACpD12B,EAAcpF,KAAK04B,aAAerwB,EAAY,GAElD,GAAIvD,aAAiBkW,EAAAA,GAAS,CAC7B,IAAIwhB,GAAkBp3B,EAAcD,IAAkB,EAAIL,EAAM6B,OAAS,EACzExB,GAAiBq3B,EACjBp3B,GAAeo3B,C,CAShB,GANAJ,EAAIruB,EAAM4d,qBAAqBrmB,EAAUs2B,EAAYz2B,EAAeivB,GACpEh0B,EAAI2N,EAAM4d,qBAAqBrmB,EAAUk2B,EAAQp2B,EAAagvB,GAE9DjvB,EAAgBnF,KAAK44B,aAAemD,EAAgB,GACpD32B,EAAcpF,KAAK64B,aAAevwB,EAAY,GAE1CvD,aAAkBiW,EAAAA,GAAS,CAC9B,IAAIwhB,GAAkBp3B,EAAcD,IAAkB,EAAIJ,EAAO4B,OAAS,EAC1ExB,GAAiBq3B,EACjBp3B,GAAeo3B,C,CAGhBH,EAAIpuB,EAAM6d,qBAAqBxmB,EAAUu2B,EAAY12B,EAAekvB,GACpExZ,EAAI5M,EAAM6d,qBAAqBxmB,EAAUm2B,EAAQr2B,EAAaivB,GAE9D/uB,EAASoP,OAAO,QAAS,CAAElJ,EAAG4wB,GAAKh8B,EAAIg8B,GAAK,EAAG3wB,EAAG4wB,GAAKxhB,EAAIwhB,GAAK,G,MAE5D,GAAItuB,IAAU6jB,EAAU,CAE5B,IAAIzsB,EAAgBnF,KAAKy4B,aAAeqD,EAAgB,GACpD12B,EAAcpF,KAAK04B,aAAerwB,EAAY,GAElD,GAAIvD,aAAiBkW,EAAAA,GAAS,CAC7B,IAAIwhB,GAAkBp3B,EAAcD,IAAkB,EAAIL,EAAM6B,OAAS,EACzExB,GAAiBq3B,EACjBp3B,GAAeo3B,C,CAOhB,GAJAJ,EAAIruB,EAAM4d,qBAAqBrmB,EAAUs2B,EAAYz2B,EAAeivB,GACpEh0B,EAAI2N,EAAM4d,qBAAqBrmB,EAAUk2B,EAAQp2B,EAAagvB,GAC9DiI,EAAIpuB,EAAM6d,qBAAqBxmB,EAAUm2B,EAAQnzB,EAAW+rB,GAExDr0B,KAAK4yB,cAAgB5yB,KAAK+xB,QAC7BlX,EAAI5M,EAAM6d,qBAAqBxmB,EAAUu2B,EAAYE,EAAe1H,QAGpE,GAAId,EAAS,CACZ,IAAIkJ,EAAen3B,EAASG,IAAI,gBAE/BoV,EADG4hB,EACCxuB,EAAM6d,qBAAqB2Q,EAAchB,EAAQM,EAAgBU,EAAa/1B,UAAuBjB,IAAI,QAGzGwI,EAAM+d,c,MAIXnR,EAAI5M,EAAM+d,eAGZ1mB,EAASoP,OAAO,QAAS,CAAElJ,EAAG4wB,GAAKh8B,EAAIg8B,GAAK,EAAG3wB,EAAG4wB,IAElDE,GAAO,C,MAEH,GAAItuB,IAAU2jB,EAAU,CAC5B,IAAIzsB,EAAgBnF,KAAK44B,aAAemD,EAAgB,GACpD32B,EAAcpF,KAAK64B,aAAevwB,EAAY,GAElD,GAAIvD,aAAkBiW,EAAAA,GAAS,CAC9B,IAAIwhB,GAAkBp3B,EAAcD,IAAkB,EAAIJ,EAAO4B,OAAS,EAC1ExB,GAAiBq3B,EACjBp3B,GAAeo3B,C,CAOhB,GAJAH,EAAIpuB,EAAM6d,qBAAqBxmB,EAAUu2B,EAAY12B,EAAekvB,GACpExZ,EAAI5M,EAAM6d,qBAAqBxmB,EAAUm2B,EAAQr2B,EAAaivB,GAC9Dj0B,EAAI2N,EAAM4d,qBAAqBrmB,EAAUk2B,EAAQnzB,EAAW+rB,GAExDp0B,KAAKyyB,cAAgBzyB,KAAK8xB,QAC7BsK,EAAIruB,EAAM4d,qBAAqBrmB,EAAUs2B,EAAYE,EAAe1H,QAGpE,GAAIb,EAAS,CACZ,IAAImJ,EAAep3B,EAASG,IAAI,gBAE/B22B,EADGM,EACC3uB,EAAM4d,qBAAqB+Q,EAAclB,EAAQM,EAAgBY,EAAah2B,UAAuBjB,IAAI,QAGzGsI,EAAMie,c,MAIXoQ,EAAIruB,EAAMie,eAIZsQ,GAAO,EAEPh3B,EAASoP,OAAO,QAAS,CAAElJ,EAAGpL,EAAGqL,EAAG4wB,GAAKxhB,EAAIwhB,GAAK,G,CAGnDr8B,KAAK28B,sBAAsBr3B,EAAUqgB,EAAWyW,EAAGh8B,EAAGi8B,EAAGxhB,EAAGyhB,EAAMC,GAE7DH,EAAIJ,GAAU57B,EAAI47B,GAAYI,EAAIH,GAAQ77B,EAAI67B,GAAUI,EAAIH,GAAUrhB,GAAKqhB,GAAYG,GAAKF,GAAQthB,EAAIshB,GAASz2B,EAAAA,GAAY02B,IAAM12B,EAAAA,GAAY22B,GACnJr8B,KAAK+6B,cAAcz1B,GAAU,GAG7BtF,KAAK+6B,cAAcz1B,GAAU,GAG9B,IAAIg2B,EAAgBh2B,EAASG,IAAI,iBAC7B61B,GACHn1B,EAAAA,GAAYm1B,GAAgB3V,IAC3B3lB,KAAK28B,sBAAsBr3B,EAAUqgB,EAAUyW,EAAGh8B,EAAGi8B,EAAGxhB,EAAGyhB,EAAMC,EAAK,IAIxEv8B,KAAK48B,qBAAqBt3B,EAAUi2B,E,CAEtC,CAEUoB,qBAAAA,CAAsBr3B,EAA+CqgB,EAAoByW,EAAWh8B,EAAWi8B,EAAWxhB,EAAWyhB,EAAeC,GAC7J,MAAMz3B,EAAQ6gB,EAASlgB,IAAI,SACrBV,EAAS4gB,EAASlgB,IAAI,UACtBo3B,EAAWlX,EAASlgB,IAAI,YACxBq3B,EAAYnX,EAASlgB,IAAI,aAEzBs3B,EAAM/8B,KAAKs2B,SAAS8F,EAAGC,GACvBW,EAAMh9B,KAAKs2B,SAASl2B,EAAGya,GAEvBoiB,EAAe33B,EAASG,IAAI,SAElC,GAAIw3B,EAAc,CACjB,MAAMpuB,EAAQ7O,KAAKs2B,SAAS2G,EAAazxB,EAAGyxB,EAAaxxB,GACzDwxB,EAAazxB,EAAIqD,EAAMrD,EAAIxL,KAAKk1B,GAChC+H,EAAaxxB,EAAIoD,EAAMpD,EAAIzL,KAAKm1B,E,CASjC,GANAiH,EAAIW,EAAIvxB,EACRpL,EAAI48B,EAAIxxB,EAER6wB,EAAIU,EAAItxB,EACRoP,EAAImiB,EAAIvxB,EAEJ/F,EAAAA,GAAeZ,GAAQ,CAC1B,MAAM03B,GAAmBp8B,EAAIg8B,EAAKt3B,GAAS,EAC3Cs3B,GAAKI,EACLp8B,GAAKo8B,C,CAGN,GAAI92B,EAAAA,GAAem3B,IAAaA,EAAWl1B,KAAKsI,IAAI7P,EAAIg8B,GAAI,CAC3D,MAAMI,GAAmBp8B,EAAIg8B,EAAKS,GAAY,EAC9CT,GAAKI,EACLp8B,GAAKo8B,C,CAGN,GAAI92B,EAAAA,GAAeX,GAAS,CAC3B,MAAMy3B,GAAmB3hB,EAAIwhB,EAAKt3B,GAAU,EAC5Cs3B,GAAKG,EACL3hB,GAAK2hB,C,CAGN,GAAI92B,EAAAA,GAAeo3B,IAAcA,EAAYn1B,KAAKsI,IAAI4K,EAAIwhB,GAAI,CAC7D,MAAMG,GAAmB3hB,EAAIwhB,EAAKS,GAAa,EAC/CT,GAAKG,EACL3hB,GAAK2hB,C,CAGFx8B,KAAKyF,IAAI,0BACR62B,IACHl8B,EAAIuH,KAAKV,IAAIU,KAAK4H,IAAI,EAAGnP,GAAIJ,KAAKq6B,KAClC+B,EAAIz0B,KAAKV,IAAIU,KAAK4H,IAAI,EAAG6sB,GAAIp8B,KAAKq6B,MAG/BkC,IACHF,EAAI10B,KAAKV,IAAIU,KAAK4H,IAAI,EAAG8sB,GAAIr8B,KAAKo6B,KAClCvf,EAAIlT,KAAKV,IAAIU,KAAK4H,IAAI,EAAGsL,GAAI7a,KAAKo6B,OAIpC90B,EAASoP,OAAO,OAAQ0nB,GACxB92B,EAASoP,OAAO,QAAStU,GACzBkF,EAASoP,OAAO,MAAO2nB,GACvB/2B,EAASoP,OAAO,SAAUmG,GAE1B8K,EAAShgB,WAAW,QAASvF,EAAIg8B,GACjCzW,EAAShgB,WAAW,SAAUkV,EAAIwhB,GAClC1W,EAASrZ,IAAI,IAAK8vB,GAClBzW,EAASrZ,IAAI,IAAKuO,GAAKA,EAAIwhB,GAC5B,CAEUpF,oBAAAA,GACTn3B,MAAMm3B,uBACN9wB,EAAAA,GAAYnG,KAAK+pB,YAAazkB,IAC7BtF,KAAK+6B,cAAcz1B,GAAU,EAAM,GAErC,CAEOs3B,oBAAAA,CAAqBt3B,EAA+Ci2B,GAE1E,MAAM5V,EAAWrgB,EAASG,IAAI,YAExBy3B,EAAevX,EAAS1jB,OAAOoK,OAAO,gBACtC8wB,EAAexX,EAAS1jB,OAAOoK,OAAO,gBAEtC+wB,EAAmBzX,EAAS1jB,OAAOoK,OAAO,oBAC1CgxB,EAAmB1X,EAAS1jB,OAAOoK,OAAO,oBAEhD,GAAI6wB,GAAgBE,GAAoBD,GAAgBE,EAAkB,CACzE,MAAMtvB,EAAQ/N,KAAKyF,IAAI,SACjBwI,EAAQjO,KAAKyF,IAAI,SACjBmsB,EAAW5xB,KAAKyF,IAAI,YAE1B,IAAI6sB,EACAgL,EACAC,EAEA3L,IAAa7jB,GAASE,EAAMiI,OAAuB,cACtDoc,EAAOhtB,EAASG,IAAIzF,KAAK4yB,aACzB0K,EAAQh4B,EAASG,IAAIzF,KAAK+xB,SAE1BwL,EAAgBhC,EAAiB91B,IAAIzF,KAAK+xB,UAElCH,IAAa3jB,GAASF,EAAMmI,OAAuB,eAC3Doc,EAAOhtB,EAASG,IAAIzF,KAAKyyB,aACzB6K,EAAQh4B,EAASG,IAAIzF,KAAK8xB,SAE1ByL,EAAgBhC,EAAiB91B,IAAIzF,KAAK8xB,UAGvCpsB,EAAAA,GAAe4sB,IAAS5sB,EAAAA,GAAe43B,KACtCA,EAAQhL,EACP4K,GACHA,EAAaM,QAIVL,GACHA,EAAaK,QAGX93B,EAAAA,GAAe63B,KACdD,EAAQC,EACPH,GACHA,EAAiBI,QAIdH,GACHA,EAAiBG,S,CAMvB,CAKOthB,eAAAA,CAAgB5W,GACtBxF,MAAMoc,gBAAgB5W,GACtB,MAAMqgB,EAAWrgB,EAASG,IAAI,YAC1BkgB,IACH3lB,KAAKu6B,QAAQ9hB,YAAYkN,GACzBA,EAAS9X,WAGV,MAAMytB,EAAgBh2B,EAASG,IAAI,iBAC/B61B,GACHn1B,EAAAA,GAAYm1B,GAAgB3V,IAC3B,MAAM8X,EAAO9X,EAAS5e,WAAW,QAC7B02B,GACHA,EAAKhlB,YAAYkN,GAElBA,EAAS9X,SAAS,GAGrB,CASa4R,YAAAA,CAAana,EAA+CyX,G,uHACxE,MAAMya,EAAW,CAACC,EAAMhY,aAAYiY,KAAC,KAAApyB,EAAUyX,IACzC4I,EAAWrgB,EAASG,IAAI,YAC1BkgB,GACH6R,EAAS9sB,KAAKib,EAASvZ,KAAK2Q,IAG7B,MAAMue,EAAgBh2B,EAASG,IAAI,iBAC/B61B,GACHn1B,EAAAA,GAAYm1B,GAAgB3V,IAC3B6R,EAAS9sB,KAAKib,EAASvZ,KAAK2Q,GAAU,UAIlC+a,QAAQC,IAAIP,EACnB,G,CAEUuD,aAAAA,CAAcz1B,EAA+CvC,GACtE,MAAM4iB,EAAWrgB,EAASG,IAAI,YAC1BkgB,GACHA,EAAShgB,WAAW,UAAW5C,GAGhC,MAAMu4B,EAAgBh2B,EAASG,IAAI,iBAC/B61B,GACHn1B,EAAAA,GAAYm1B,GAAgB3V,IAC3BA,EAAShgB,WAAW,UAAW5C,EAAQ,IAIzC,MAAMw0B,EAAUjyB,EAASiyB,QACrBA,GACHpxB,EAAAA,GAAYoxB,GAAUxX,IACrBA,EAAOpa,WAAW,UAAW5C,EAAQ,GAGxC,CASa4c,YAAAA,CAAara,EAA+CyX,G,uHACxE,MAAMya,EAAW,CAACC,EAAM9X,aAAY+X,KAAC,KAAApyB,EAAUyX,IACzC4I,EAAWrgB,EAASG,IAAI,YAC1BkgB,GACH6R,EAAS9sB,KAAKib,EAASxM,KAAK4D,IAG7B,MAAMue,EAAgBh2B,EAASG,IAAI,iBAC/B61B,GACHn1B,EAAAA,GAAYm1B,GAAgB3V,IAC3B6R,EAAS9sB,KAAKib,EAASxM,KAAK4D,GAAU,UAIlC+a,QAAQC,IAAIP,EACnB,G,CAKO1V,kBAAAA,CAAmBxc,GACzB,IAAI2zB,EAAiBj5B,KAAKyF,IAAI,kBAE9B,GAAIzF,KAAKyF,IAAI,iCACPH,EAAU,CACd,MAAMo4B,EAAe19B,KAAK6T,UAAU7T,KAAKiU,WAAa,GAClDypB,IACHp4B,EAAWo4B,E,CAKd,GAAIzE,EAAgB,CAEnB,IAAItT,EAA0C3lB,KAAKu6B,QAAQ1W,SAC3D,GAAIve,EAAU,CACb,IAAIq4B,EAASr4B,EAASG,IAAI,YACtBk4B,IACHhY,EAAWgY,E,CAIb,MAAM1C,EAAkBhC,EAAexzB,IAAI,mBAE3C,GAAIw1B,IACEhC,EAAexzB,IAAI,iBAAiBA,IAAI,YAAa,CACzD,MAAMy1B,EAAKD,EAAgBh5B,OAAOoK,OAAO,WACzClG,EAAAA,GAAYg1B,EAAAA,GAAiBC,IAC5B,MAAMz0B,EAAQgf,EAASlgB,IAAI21B,EAASp7B,KAAKyF,IAAI21B,IAC7CH,EAAgB3uB,IAAI8uB,EAASz0B,GAC7Bu0B,EAAG5uB,IAAI8uB,EAASz0B,EAAM,G,EAM3B,CAEUoyB,iBAAAA,CAAkBzzB,GAC3B,GAAuC,UAAnCtF,KAAKyF,IAAI,uBACZ,OAAO3F,MAAMi5B,kBAAkBzzB,GAGhC,IAAIq4B,EAASr4B,EAASG,IAAI,YAC1B,OAAIk4B,GAGG39B,IACR,EAvsBAqK,OAAAC,eAAAuvB,EAAA,a,gDAAkC,qBAClCxvB,OAAAC,eAAAuvB,EAAA,c,gDAA0CnJ,EAASlV,WAAWC,OAAO,CAACoe,EAAiBne,c,0BCxElF,MAAOkiB,UAAqB/D,EAAlCzvB,WAAAA,G,oBAuBCC,OAAAC,eAAA,gB,gDAA0D,IAAIoZ,EAAAA,GAC7DC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAMm9B,EAAAA,EAAiBja,KAAK5jB,KAAKC,MAAO,CACvCiF,SAAU,WACVmG,UAAWoD,EAAAA,GAAiBzO,KAAKu6B,QAAQ1W,SAASpe,IAAI,YAAa,IAAK,CAAC,SAAU,YACjF,CAACzF,KAAKu6B,QAAQ1W,cAiBnB,CAnCQmW,UAAAA,CAAW10B,EAA+Cy0B,GAChE,MAAM4D,EAAS39B,KAAK+0B,cAActqB,SAASC,KAAKqvB,EAAahW,QAG7D,OAFA4Z,EAAOnpB,aAAalP,GACpBy0B,EAAarvB,KAAKizB,GACXA,CACR,CAoBUxhB,iBAAAA,CAAkBqC,GAC3B1e,MAAMqc,kBAAkBqC,GACxBA,EAAU+b,QAAU,IAAI7W,EAAAA,GACvBC,EAAAA,GAASjjB,IAAI,CAAC,IACd,IAAMm9B,EAAAA,EAAiBja,KAAK5jB,KAAKC,MAAO,CACvCiF,SAAU,WACVmG,UAAWoD,EAAAA,GAAiB+P,EAAU+b,QAAQ1W,SAASpe,IAAI,YAAa,IAAK,CAAC,SAAU,YACtF,CAACzF,KAAKu6B,QAAQ1W,SAAUrF,EAAU+b,QAAQ1W,YAE/C,EAbAxZ,OAAAC,eAAAszB,EAAA,a,gDAAkC,iBAClCvzB,OAAAC,eAAAszB,EAAA,c,gDAA0C/D,EAAiBre,WAAWC,OAAO,CAACmiB,EAAaliB,a,iDCgCtF,MAAOoiB,UAAeC,EAAAA,GAA5B3zB,WAAAA,G,oBAQCC,OAAAC,eAAA,e,yDAKAD,OAAAC,eAAA,e,wDAwBD,CAtBWoB,SAAAA,GAET5L,MAAMk+B,sBACP,CAEO5wB,cAAAA,GAGN,GAFAtN,MAAMsN,iBAEFpN,KAAKqN,QAAQ,UAAW,CAC3B,MAAMjE,EAASpJ,KAAKyF,IAAI,UACpB2D,IACHA,EAAO7I,OAAO,CAAE2E,SAAU,WAAY3B,KAAM,WAC5CvD,KAAK4L,WAAWlB,KAAKtB,G,EAInBpJ,KAAKqN,QAAQ,cAAgBrN,KAAKqN,QAAQ,eACzCrN,KAAK0N,QACR1N,KAAK0N,OAAO2oB,gBAAgBr2B,KAG/B,EAnCAqK,OAAAC,eAAAwzB,EAAA,a,gDAAkC,WAClCzzB,OAAAC,eAAAwzB,EAAA,c,gDAA0CC,EAAAA,GAAOviB,WAAWC,OAAO,CAACqiB,EAAOpiB,a,wECzDtE,MAAOtQ,UAAeT,EAAAA,EACjBe,SAAAA,GACT1L,KAAKgiB,UAAU3W,UAAYoD,EAAAA,GAAiBzO,KAAKgiB,UAAU3W,UAAW,CAAC,WAEvEvL,MAAM4L,YAED1L,KAAKgiB,UAAUlG,YACnB9b,KAAKsM,IAAI,aAAcuxB,EAAAA,EAAiBn9B,IAAIV,KAAKC,MAAO,CACvDoL,UAAWoD,EAAAA,GAAiBzO,KAAKgiB,UAAU3W,UAAW,CAAC,kBAIzDrL,KAAK2F,WAAW,eAAe,EAChC,CASOqP,gBAAAA,GAGN,GAFAlV,MAAMkV,mBAEFhV,KAAKqN,QAAQ,QAAS,CACzB,MAAM6H,EAAWlV,KAAKmV,cAAc7J,KAC9BA,EAAOtL,KAAKyF,IAAI,QAClB6F,IAAS4J,IACZlV,KAAKoV,iBAAiB,QAElBF,GACHA,EAASrH,UAENvC,GACHtL,KAAKyK,SAASC,KAAKY,GAGpBtL,KAAKmV,cAAc7J,KAAOA,E,CAI5B,GAAItL,KAAKqN,QAAQ,SAAU,CAC1B,MAAM6H,EAAWlV,KAAKmV,cAAc+J,MAC9BA,EAAQlf,KAAKyF,IAAI,SACnByZ,IAAUhK,IACblV,KAAKoV,iBAAiB,SAClBF,GACHA,EAASrH,UAGNqR,GACHlf,KAAKyK,SAASC,KAAKwU,GAGpBlf,KAAKmV,cAAc+J,MAAQA,E,CAG9B,EAxCA7U,OAAAC,eAAAc,EAAA,a,gDAAkC,WAClCf,OAAAC,eAAAc,EAAA,c,gDAA0CT,EAAAA,EAAU6Q,WAAWC,OAAO,CAACrQ,EAAOsQ,a","sources":["../node_modules/src/.internal/charts/xy/XYChartDefaultTheme.ts","../node_modules/src/.internal/charts/xy/XYChart.ts","../node_modules/src/.internal/charts/xy/axes/Axis.ts","../node_modules/src/.internal/charts/xy/axes/AxisTick.ts","../node_modules/src/.internal/charts/xy/axes/AxisLabel.ts","../node_modules/src/.internal/charts/xy/axes/AxisRenderer.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererX.ts","../node_modules/src/.internal/charts/xy/axes/AxisRendererY.ts","../node_modules/src/.internal/charts/xy/axes/Grid.ts","../node_modules/src/.internal/charts/xy/axes/ValueAxis.ts","../node_modules/src/.internal/charts/xy/series/XYSeries.ts","../node_modules/src/.internal/charts/xy/series/BaseColumnSeries.ts","../node_modules/src/.internal/charts/xy/series/ColumnSeries.ts","../node_modules/src/.internal/core/render/Bullet.ts","../node_modules/src/.internal/core/render/Button.ts"],"sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\tr(\"Rectangle\", [\"plotbackground\", \"xy\", \"background\"]).setAll({\r\n\t\t\tfill: Color.fromHex(0x000000),\r\n\t\t\tfillOpacity: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tforceInactive: true,\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\trole: \"slider\",\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"plotbackground\", \"xy\", \"background\"]\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftX * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftX * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\tlet newStart = Math.min(1 + maxDeviation, Math.max(-maxDeviation, start - wheelStep * (end - start) * shiftY * position));\n\t\t\t\t\tlet newEnd = Math.max(-maxDeviation, Math.min(1 + maxDeviation, end + wheelStep * (end - start) * shiftY * (1 - position)));\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tif (event.originalEvent.clientX == downPoint.x && event.originalEvent.clientY == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", closestItem);\n\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"released\", () => {\n\t\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\t\tif (axis.get(\"zoomable\")) {\n\t\t\t\t\t\t\t\tthis._handleAxisSelection(axis);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\t\txAxis._seriesAdded = true;\n\t\tyAxis._seriesAdded = true;\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t\tconst patternSet = this.get(\"patterns\")!;\n\t\tif (patternSet) {\n\t\t\tif (series.get(\"fillPattern\") == null) {\n\t\t\t\tconst pattern = patternSet.next();\n\n\t\t\t\tseries._setSoft(\"fillPattern\", pattern);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif ($math.round(axis.get(\"start\", 0), 6) != 0 || $math.round(axis.get(\"end\", 1), 6) != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\t// Explicitly disposing cursor to avoid memory leak of cursor adding\n\t\t// keyboard events after parent chart has been disposed\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.dispose();\n\t\t}\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * Set this to `false` to prevent axis from being zoomed.\n\t */\n\tzoomable?:boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * Array of minor data items.\n\t */\n\tpublic  minorDataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\tpublic _seriesAdded = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tif(this.get(\"zoomable\", true)){\n\t\t\tthis._updateFinals(start, end);\n\n\t\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\t\tlet sAnimation = this._sAnimation;\n\t\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\t\tif (start < - maxDeviation) {\n\t\t\t\t\tstart = -maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\t}\n\n\t\t\t\tif (start > end) {\n\t\t\t\t\t[start, end] = [end, start];\n\t\t\t\t}\n\n\t\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t\t}\n\n\t\t\t\tif (!priority) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\n\t\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\t\tif (start < this.get(\"start\", 0)) {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\t\tif (end > this.get(\"end\", 1)) {\n\t\t\t\t\t\tpriority = \"end\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpriority = \"start\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet minZoomCount = this.get(\"minZoomCount\", 0);\n\t\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\", Infinity);\n\n\t\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t\t}\n\n\t\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t\t}\n\n\t\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\t\tif (priority === \"start\") {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\t//unless end is > 0\n\t\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//end = 1;\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// most likely we are dragging right, so we modify left\n\t\t\t\telse {\n\t\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t\t// add to the end\n\t\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// remove from start\n\t\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t\t//start = 0;\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\n\t\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\tif (duration > 0) {\n\t\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t\t}\n\t\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\t\tif (sAnimation) {\n\t\t\t\t\t\treturn sAnimation;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eAnimation) {\n\t\t\t\t\t\treturn eAnimation;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.set(\"start\", start);\n\t\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._sAnimation) {\n\t\t\t\t\tthis._sAnimation.stop();\n\t\t\t\t}\n\t\t\t\tif (this._eAnimation) {\n\t\t\t\t\tthis._eAnimation.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>, minor?: boolean) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tlet m = \"minor\";\n\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (!label) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = label.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tlabel.parent?.children.removeValue(label);\n\t\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t\t\tlabel.dispose();\n\t\t\t\trenderer.labels.removeValue(label);\n\t\t\t}\n\t\t}\n\n\t\tconst grid = dataItem.get(\"grid\");\n\n\t\tif (!grid) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet themeTags = grid.get(\"themeTags\");\n\t\t\tlet remove = false;\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remove) {\n\t\t\t\tgrid.parent?.children.removeValue(grid);\n\t\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t\t\tgrid.dispose();\n\t\t\t\trenderer.grid.removeValue(grid);\n\t\t\t}\n\t\t}\n\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (!tick) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\t\telse {\n\t\t\tlet remove = false;\n\t\t\tlet themeTags = tick.get(\"themeTags\");\n\t\t\tif (minor) {\n\t\t\t\tif (themeTags?.indexOf(m) == -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (themeTags?.indexOf(m) != -1) {\n\t\t\t\t\tremove = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (remove) {\n\t\t\t\ttick.parent?.children.removeValue(tick);\n\t\t\t\trenderer.makeTick(dataItem, tags);\n\t\t\t\ttick.dispose();\n\t\t\t\trenderer.ticks.removeValue(tick);\n\t\t\t}\n\t\t}\n\n\t\tif (!minor && !dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\n\t\tthis._seriesAdded = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t\tseries._settings.tooltipDataItem = dataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t}\n\t\t\t\n\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (!$type.isNaN(position)) {\t\t\t\t\t\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\", 0) || position > this.get(\"end\", 1)) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract nextPosition(_count?:number):number\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n\n\t/**\n\t * Sensitivity of panning. The higher the number, the more sensitive it is.\n\t *\n\t * @default 1\n\t */\n\tpanSensitivity?: number;\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\t/**\n\t * A thumb Graphics to be used for panning the axis (the one which shows under the labels when hovered)\n\t */\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2 * this.get(\"panSensitivity\", 1);\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\tif (!chart.inPlot(point)) {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"width\") == null) {\n\t\t\taxis.set(\"width\", p100);\n\t\t};\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within currently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * This will not work if strictMinMax is set to true (the axis will not zoom at all in this case).\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tlabelEndValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _dseHandled = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _minRealLog: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\t\t\n\t\tthis._handleSizeDirty();\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\n\t\t\tconst chart = this.chart;\n\t\t\tlet getMM = false;\n\t\t\t// #1563\n\t\t\tif (chart) {\n\t\t\t\tconst letter = this.get(\"renderer\").getPrivate(\"letter\");\n\t\t\t\tif (letter == \"Y\") {\n\t\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (letter == \"X\") {\n\t\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.className != \"ValueAxis\") {\n\t\t\t\t\t\t\tgetMM = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (getMM) {\n\t\t\t\tthis._getSelectionMinMax();\n\t\t\t}\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _handleSizeDirty() {\n\t\tif (this._sizeDirty && !this._dseHandled) {\n\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\tthis._dseHandled = true;\n\t\t}\n\t}\n\n\tpublic _clearDirty(): void {\n\t\tsuper._clearDirty();\n\t\tthis._dseHandled = false;\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog: number = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tif ($type.isNumber(this._minRealLog)) {\n\t\t\t\t\t\t\tminLog = this._minRealLog;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminLog = Math.pow(10, -50);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 50);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/// minor grid\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t\tconst stepAdjusted = Math.round(step / stepPower);\n\n\t\t\tlet minorGridCount = 2;\n\n\t\t\tif ($math.round(stepAdjusted / 5, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 5;\n\t\t\t}\n\n\t\t\tif ($math.round(stepAdjusted / 10, 10) % 1 == 0) {\n\t\t\t\tminorGridCount = 10;\n\t\t\t}\n\n\t\t\tlet minorStep = step / minorGridCount;\n\n\t\t\t// end of minor grid\n\t\t\tlet i = 0;\n\t\t\tlet m = 0;\n\t\t\tlet previous = -Infinity;\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tlet nextValue = value;\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tnextValue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tnextValue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 50);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextValue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// minor grid\n\t\t\t\tif (minorGridEnabled) {\n\t\t\t\t\tlet minorValue = value + minorStep;\n\n\t\t\t\t\tif (logarithmic) {\n\t\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\t\tlet minorMinMaxStep = this._adjustMinMax(value, nextValue, 10);\n\t\t\t\t\t\t\tminorStep = minorMinMaxStep.step;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tminorValue = value + minorStep;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (minorValue < nextValue - step * 0.00000000001) {\n\t\t\t\t\t\tlet minorDataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\t\t\tif (this.minorDataItems.length < m + 1) {\n\t\t\t\t\t\t\tminorDataItem = new DataItem(this, undefined, {});\n\t\t\t\t\t\t\tthis.minorDataItems.push(minorDataItem);\n\t\t\t\t\t\t\tthis.processDataItem(minorDataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tminorDataItem = this.minorDataItems[m];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._createAssets(minorDataItem, [\"minor\"], true);\n\t\t\t\t\t\tthis._toggleDataItem(minorDataItem, true);\n\t\t\t\t\t\tminorDataItem.setRaw(\"value\", minorValue);\n\n\t\t\t\t\t\tconst minorLabel = minorDataItem.get(\"label\");\n\t\t\t\t\t\tif (minorLabel) {\n\t\t\t\t\t\t\tif (minorLabelsEnabled) {\n\t\t\t\t\t\t\t\tminorLabel.set(\"text\", this._formatText(minorValue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tminorLabel.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._prepareDataItem(minorDataItem);\n\t\t\t\t\t\tminorValue += minorStep;\n\t\t\t\t\t\tm++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvalue = nextValue;\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1 && !logarithmic) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\tfor (let j = m; j < this.minorDataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.minorDataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\tlet labelEndPosition = endPosition;\n\n\t\tlet labelEndValue = dataItem.get(\"labelEndValue\");\n\t\tif (labelEndValue != null) {\n\t\t\tlabelEndPosition = this.valueToPosition(labelEndValue);\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, labelEndPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, labelEndPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tlet smin = selectionMin;\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tlet d = smin - min;\n\t\t\t\t\tif (d == 0) {\n\t\t\t\t\t\td = this._deltaMinMax;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMin = smin - d;\n\t\t\t\t\tselectionMax = smin + d;\n\n\t\t\t\t\tstrictMinMax = true;\n\t\t\t\t}\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\tselectionMin -= delta * extraMin;\n\t\t\tselectionMax += delta * extraMax;\t\t\t\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tif (minMaxStep.min < min) {\n\t\t\t\t\tminMaxStep.min = min;\n\t\t\t\t}\n\n\t\t\t\tif (minMaxStep.max > max) {\n\t\t\t\t\tminMaxStep.max = max;\n\t\t\t\t}\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\t\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMaxReal - selectionMinReal) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMaxReal - selectionMinReal) * extraMax;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = selectionMinReal;\n\t\t\t\t}\n\t\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = selectionMaxReal;\n\t\t\t\t}\n\t\n\t\t\t\tif (selectionMax - selectionMin <= 0.00000001) {\n\t\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\t}\n\t\n\t\t\t\tlet delta = selectionMax - selectionMin;\n\n\t\t\t\tselectionMin -= delta * extraMin;\n\t\t\t\tselectionMax += delta * extraMax;\n\t\t\t}\t\t\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tif (min > max) {\n\t\t\t[min, max] = [max, min];\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tthis._minRealLog = min;\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tlet delta = max - min;\n\t\t\tmin -= delta * extraMin;\n\t\t\tmax += delta * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\t\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t\tif (step == 0) {\n\t\t\t\t\tstep = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic nextPosition(count?: number) {\n\t\tif (count == null) {\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif (this.get(\"renderer\").getPrivate(\"letter\") == \"Y\") {\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tlet value = this.positionToValue(this.getPrivate(\"tooltipPosition\", 0));\n\t\tvalue += this.getPrivate(\"step\", 1) * count;\n\t\tvalue = $math.fitToRange(value, this.getPrivate(\"selectionMin\", 0), this.getPrivate(\"selectionMax\", 1));\n\n\t\treturn this.toGlobalPosition(this.valueToPosition(value));\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis.onPrivate(\"startIndex\", ()=>{\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\t\t\t\n\t\t})\n\n\t\tthis.onPrivate(\"endIndex\", ()=>{\t\t\t\n\t\t\tthis.root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis.updateLegendValue();\t\t\t\n\t\t\t})\n\t\t})\t\t\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"adjustedStartIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this.isPrivateDirty(\"adjustedStartIndex\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif (!this.getPrivate(\"doNotUpdateLegend\")) {\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden() && this.get(\"visible\")) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index: number): number {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (baseAxis == xAxis && xAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\tconst baseDuration = xAxis.baseDuration();\n\t\t\tconst minSelection = xAxis.getPrivate(\"selectionMin\", xAxis.getPrivate(\"min\", 0));\n\t\t\tconst dl = baseDuration * this.get(\"locationX\", 0.5);\n\n\t\t\tlet value = -Infinity;\n\n\t\t\twhile (value < minSelection) {\n\t\t\t\tconst dataItem = this.dataItems[index];\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst open = dataItem.open;\n\t\t\t\t\tif (open) {\n\t\t\t\t\t\tvalue = open[\"valueX\"];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = dataItem.get(\"valueX\", 0);\n\t\t\t\t\t}\n\t\t\t\t\tvalue += dl;\n\n\t\t\t\t\tif (value < minSelection) {\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillPattern\")) {\n\t\t\tif (columnsTemplate.get(\"fillPattern\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fillPattern\", this.get(\"fillPattern\"));\n\t\t\t}\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * If a field will be set, the bullet will be located at exact value of that field, not paying atention to locationY/locationX. Works with XYSeries\tonly.\n\t * If `field` is set, bullet will be placed at the specific data value, ignoring\n\t * any `locationX` and `locationY` settings.\n\t *\n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#By_data_field} for more info\n\t * @since 5.6.0\n\t */\n\tfield?: \"open\" | \"high\" | \"low\" | \"value\";\n\n\t/**\n\t * If set, will stack bullets instead of overlapping them.\n\t *\n\t * * `\"up` - stacks bullets upwards.\n\t * * `\"down` - stacks bullets downwards.\n\t * * `\"auto` - stacks bullets in the direction that offers more space.\n\t * \n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Stacked_bullets} for more info\n\t * @since 5.6.0\n\t */\n\tstacked?: \"up\" | \"down\" | \"auto\";\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?: boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["XYChartDefaultTheme","Theme","setupDefaultRules","super","ic","this","_root","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","new","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","fill","Color","fromHex","fillOpacity","saturation","setColor","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","p100","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","moveThreshold","forceInactive","strokeDasharray","role","ariaLabel","translate","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","p50","crisp","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","$type","setPrivate","gridIntervals","timeUnit","count","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","$array","$object","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","gridInterval","min","$time","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","round","baseValue","logarithmic","autoZoom","step","$math","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","percent","strokeWidth","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYChart","SerialChart","constructor","Object","defineProperty","ListAutoDispose","chartContainer","children","push","Container","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","Button","themeTags","icon","Graphics","x","y","_afterNew","_defaultThemes","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","Rectangle","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","$utils","preventDefault","plotPoint","toLocal","point","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","fixPosition","newStart","max","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","dataItems","isHidden","isHiding","startIndex","endIndex","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","showDataItemTooltip","setRaw","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","_handleAxisSelection","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","_seriesAdded","colorSet","color","next","_setSoft","patternSet","pattern","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","oldValue","Error","moveValue","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","force","indexOf","updateGrips","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","sort","a","b","$order","prevY","Percent","top","bottom","_fy","reverse","prevBottom","bounds","_dispose","classNames","concat","className","Axis","Component","List","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","DataItem","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","duration","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","to","easing","animate","key","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","minor","m","remove","_a","labels","_b","makeGrid","_c","makeTick","ticks","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","axisFills","_updateGhost","getCellWidthPosition","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","_settings","roundAxisPosition","_updateTooltipText","positionTooltip","_location","handleCursorShow","handleCursorHide","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisTick","Tick","AxisLabel","Label","AxisRenderer","ListTemplate","Template","_new","template","Grid","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","once","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","MultiDisposer","someDirty","_valuesDirty","_getMinMax","_handleSizeDirty","getMM","letter","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_baseValue","_dseHandled","_formatText","numberFormat","formatter","getNumberFormatter","format","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","_minRealLog","pow","log","LOG10E","minorLabelsEnabled","minorGridEnabled","stepPower","floor","stepAdjusted","minorGridCount","minorStep","_dataItems","processDataItem","nextValue","minorValue","_adjustMinMax","minorDataItem","minorDataItems","minorLabel","decCount","j","inited","valueToPosition","fillEndPosition","labelEndPosition","labelEndValue","hasTag","positionToValue","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","getDataItemCoordinateX","field","_cellLocation","axisLocation","getDataItemPositionX","getStackedXValueWorking","getDataItemCoordinateY","getDataItemPositionY","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","_fixMin","_fixMax","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","smin","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","len","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","Number","MAX_VALUE","maxCount","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","fieldName","zoomToValues","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","nextPosition","XYSeries","Series","fields","valueFields","_setRawDefault","_removeAxisRange","_makeFieldNames","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","baseAxis","minBulletDistance","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","_tooltipFieldX","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_seriesValuesDirty","_markStakedDirtyStack","_dataGrouped","_stackDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mainContainer","mask","_updateChildren","_x","_y","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","createLegendMarker","_axesDirty","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","getPoint","_shouldShowBullet","realField","previousBounds","yo","xo","_positionX","_positionY","setDataSet","id","_dataSets","_handleDataSetChange","_dataSetId","resetGrouping","dataSet","_mainDataItems","mainDataItems","bullets","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","_isHiding","_valueFields","waitForStop","_markDirtyStack","stackedSeries","_skipped","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","markDirtyText","_getTooltipTarget","hideTooltip","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_shouldInclude","_position","resetExtremes","_adjustStartIndex","baseDuration","minSelection","dl","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","markerRectangle","ds","visualSettings","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","close","previousClose","apply","list","lastDataItem","column","ColumnSeries","RoundedRectangle","Bullet","Entity","_afterNewApplyThemes"],"sourceRoot":""}