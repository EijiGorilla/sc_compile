{"version":3,"file":"static/js/8254.feb76fb2.chunk.js","mappings":"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","sources":["components/ViaductProgressChart.tsx"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport { viaductProgressChartData } from '../Query';\r\nimport { useContractPackageContext } from './ContractPackageContext';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\nconst ViaductProgressChart = () => {\r\n  const { cpValueSelected } = useContractPackageContext();\r\n\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const xAxisRef = useRef<unknown | any | undefined>({});\r\n  const yAxisRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [progressData, setProgressData] = useState([]);\r\n\r\n  const chartID = 'progress-bar';\r\n  useEffect(() => {\r\n    viaductProgressChartData(cpValueSelected).then((result: any) => {\r\n      setProgressData(result);\r\n    });\r\n  }, [cpValueSelected]);\r\n\r\n  useEffect(() => {\r\n    maybeDisposeRoot(chartID);\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    var chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: false,\r\n        panY: false,\r\n        wheelX: 'panX',\r\n        wheelY: 'zoomX',\r\n        paddingBottom: 35,\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Chart title\r\n    chart.children.unshift(\r\n      am5.Label.new(root, {\r\n        text: 'Monthly Progress',\r\n        fontSize: 14,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        fill: am5.color('#ffffff'),\r\n        x: am5.percent(50),\r\n        centerX: am5.percent(50),\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n      }),\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    var cursor = chart.set(\r\n      'cursor',\r\n      am5xy.XYCursor.new(root, {\r\n        behavior: 'zoomX',\r\n      }),\r\n    );\r\n    cursor.lineY.set('visible', false);\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    var xRenderer = am5xy.AxisRendererX.new(root, {\r\n      //minGridDistance: 60,\r\n      strokeOpacity: 1,\r\n      strokeWidth: 1,\r\n      stroke: am5.color('#ffffff'),\r\n    });\r\n    var xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        // When you group data for series\r\n        // Note you need to baseInterval timeUnit is 'day'\r\n        // and groupIntervals timeUnit is 'month'\r\n        maxDeviation: 0,\r\n        groupData: true,\r\n        baseInterval: {\r\n          timeUnit: 'day',\r\n          count: 1,\r\n        },\r\n        // count:\r\n        groupIntervals: [{ timeUnit: 'month', count: 1 }],\r\n        // categoryField: 'date',\r\n        renderer: xRenderer,\r\n        tooltip: am5.Tooltip.new(root, {}),\r\n      }),\r\n    );\r\n\r\n    var yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        calculateTotals: true,\r\n        min: 0,\r\n        renderer: am5xy.AxisRendererY.new(root, {\r\n          minGridDistance: 60,\r\n          strokeOpacity: 1,\r\n          strokeWidth: 1,\r\n          stroke: am5.color('#ffffff'),\r\n        }),\r\n      }),\r\n    );\r\n\r\n    xAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n\r\n    yAxis.get('renderer').labels.template.setAll({\r\n      //oversizedBehavior: \"wrap\",//\r\n      textAlign: 'center',\r\n      fill: am5.color('#ffffff'),\r\n      //maxWidth: 150,\r\n      fontSize: 12,\r\n    });\r\n    xAxisRef.current = xAxis;\r\n    yAxisRef.current = yAxis;\r\n\r\n    // Add yaxix title\r\n    yAxis.children.unshift(\r\n      am5.Label.new(root, {\r\n        rotation: -90,\r\n        text: 'No. of casted components',\r\n        y: am5.p50,\r\n        centerX: am5.p50,\r\n        fill: am5.color('#ffffff'),\r\n        fontSize: 11,\r\n      }),\r\n    );\r\n\r\n    // Add legend\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\r\n    var legend = chart.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.p50,\r\n        centerY: am5.percent(50),\r\n        x: am5.p50,\r\n        y: am5.percent(108),\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      fontSize: 17,\r\n      scale: 0.7,\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    // check this;\r\n    // newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n    // dataItem is of dataItems\r\n    // dataContext: dataItem.dataContext\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    function makeSeries(name: any, fieldName: any) {\r\n      var series = chart.series.push(\r\n        am5xy.ColumnSeries.new(root, {\r\n          name: name,\r\n          stacked: true,\r\n          xAxis: xAxis,\r\n          yAxis: yAxis,\r\n          valueYField: fieldName,\r\n          valueXField: 'date',\r\n          valueYGrouped: 'sum',\r\n        }),\r\n      );\r\n\r\n      series.columns.template.setAll({\r\n        tooltipText: '{name}, {categoryX}: {valueY}',\r\n        tooltipY: am5.percent(10),\r\n      });\r\n      series.data.setAll(progressData);\r\n\r\n      // Make stuff animate on load\r\n      // https://www.amcharts.com/docs/v5/concepts/animations/\r\n      series.appear();\r\n\r\n      series.bullets.push(function () {\r\n        return am5.Bullet.new(root, {\r\n          sprite: am5.Label.new(root, {\r\n            text: '{valueY}',\r\n            fill: root.interfaceColors.get('alternativeText'),\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            populateText: true,\r\n          }),\r\n        });\r\n      });\r\n\r\n      legend.data.push(series);\r\n    }\r\n\r\n    makeSeries('Bored Pile', 'pile');\r\n    makeSeries('Pile Cap', 'pilecap');\r\n    makeSeries('Pier', 'pier');\r\n    makeSeries('Pier Head', 'pierhead');\r\n    makeSeries('Precast', 'precast');\r\n\r\n    chart.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, progressData]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '28vh',\r\n          width: '67%',\r\n          backgroundColor: '#2b2b2b',\r\n          color: 'white',\r\n          position: 'absolute',\r\n          zIndex: 99,\r\n          bottom: 10,\r\n          marginLeft: '1vw',\r\n          marginRight: 'auto',\r\n          border: 'solid 0.1px gray',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViaductProgressChart;\r\n"],"names":["ViaductProgressChart","cpValueSelected","useContractPackageContext","legendRef","useRef","xAxisRef","yAxisRef","chartRef","progressData","setProgressData","useState","chartID","useEffect","viaductProgressChartData","then","result","_root$_logo","divId","am5","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5xy","panX","panY","wheelX","wheelY","paddingBottom","layout","verticalLayout","current","unshift","text","fontSize","fontWeight","textAlign","fill","x","centerX","paddingTop","set","behavior","lineY","xRenderer","strokeOpacity","strokeWidth","stroke","xAxis","xAxes","maxDeviation","groupData","baseInterval","timeUnit","count","groupIntervals","renderer","tooltip","yAxis","yAxes","calculateTotals","min","minGridDistance","get","labels","template","setAll","rotation","y","legend","centerY","makeSeries","name","fieldName","series","stacked","valueYField","valueXField","valueYGrouped","columns","tooltipText","tooltipY","data","appear","bullets","sprite","interfaceColors","populateText","oversizedBehavior","scale","_jsx","_Fragment","style","height","width","backgroundColor","color","position","zIndex","bottom","marginLeft","marginRight","border"],"sourceRoot":""}